//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_bg "bytes";_dd "encoding/binary";_gg "errors";_g "fmt";_gda "lgo/unipdf/common";_fd "lgo/unipdf/core";_bge "lgo/unipdf/internal/cmap";_cd "lgo/unipdf/internal/textencoding";
_db "golang.org/x/xerrors";_d "io";_f "os";_e "regexp";_gd "sort";_b "strings";_ce "sync";);var _fcb =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func (_fda *RuneCharSafeMap )Range (f func (_eb rune ,_fcd CharMetrics )(_df bool )){_fda ._ec .RLock ();defer _fda ._ec .RUnlock ();for _ba ,_ca :=range _fda ._ed {if f (_ba ,_ca ){break ;};};};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");
CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_ddfb *ttfParser )parseCmapFormat12 ()error {_efba :=_ddfb .ReadULong ();_gda .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ddfb ._cee .String (),_efba );
for _ebdb :=uint32 (0);_ebdb < _efba ;_ebdb ++{_baa :=_ddfb .ReadULong ();_aeb :=_ddfb .ReadULong ();_feb :=_ddfb .ReadULong ();if _baa > 0x0010FFFF||(0xD800<=_baa &&_baa <=0xDFFF){return _gg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _aeb < _baa ||_aeb > 0x0010FFFF||(0xD800<=_aeb &&_aeb <=0xDFFF){return _gg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _ada :=_baa ;_ada <=_aeb ;
_ada ++{if _ada > 0x10FFFF{_gda .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ddfb ._cee .Chars [rune (_ada )]=GID (_feb );_feb ++;};};return nil ;};func (_gab *ttfParser )ParseOS2 ()error {if _efcg :=_gab .Seek ("\u004f\u0053\u002f\u0032");_efcg !=nil {return _efcg ;};_bfc :=_gab .ReadUShort ();_gab .Skip (4*2);_gab .Skip (11*2+10+4*4+4);
_gfgd :=_gab .ReadUShort ();_gab ._cee .Bold =(_gfgd &32)!=0;_gab .Skip (2*2);_gab ._cee .TypoAscender =_gab .ReadShort ();_gab ._cee .TypoDescender =_gab .ReadShort ();if _bfc >=2{_gab .Skip (3*2+2*4+2);_gab ._cee .CapHeight =_gab .ReadShort ();}else {_gab ._cee .CapHeight =0;
};return nil ;};var _fgf =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _gee =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func IsStdFont (name StdFontName )bool {_ ,_ece :=_ga .read (name );return _ece };func _cga ()StdFont {_gbc .Do (_gaf );_gef :=Descriptor {Name :TimesBoldItalicName ,Family :_bdb ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_gef ,_ddf );};func (_ac StdFont )Encoder ()_cd .TextEncoder {return _ac ._bdc };func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _cd .TextEncoder )StdFont {var _ef rune =0xA0;if _ ,_ecc :=metrics .Read (_ef );
!_ecc {_cef ,_ :=metrics .Read (0x20);metrics .Write (_ef ,_cef );};return StdFont {_eec :desc ,_cg :metrics ,_bdc :encoder };};const (_bdb ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func _cggf ()StdFont {_bcgg :=_cd .NewZapfDingbatsEncoder ();_eef :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_eef ,_gga ,_bcgg );};func (_cgg StdFont )GetMetricsTable ()*RuneCharSafeMap {return _cgg ._cg };func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ed :make (map[rune ]CharMetrics ,length )};
};func (_cegd *TtfType )NewEncoder ()_cd .TextEncoder {return _cd .NewTrueTypeFontEncoder (_cegd .Chars )};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;
CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func (_gdc StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bc ,_fga :=_gdc ._cg .Read (r );return _bc ,_fga ;};func _aae ()StdFont {_bb .Do (_bcg );_ecfe :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ecfe ,_fdb );};var _bcd *RuneCharSafeMap ;var _fdf *RuneCharSafeMap ;type ttfParser struct{_cee TtfType ;_daa _d .ReadSeeker ;_eabf map[string ]uint32 ;_cbd uint16 ;_ddd uint16 ;};func (_deac *ttfParser )Read32Fixed ()float64 {_feba :=float64 (_deac .ReadShort ());
_agd :=float64 (_deac .ReadUShort ())/65536.0;return _feba +_agd ;};var _fce *RuneCharSafeMap ;func (_gdg *ttfParser )ReadUShort ()(_gdgd uint16 ){_dd .Read (_gdg ._daa ,_dd .BigEndian ,&_gdgd );return _gdgd ;};func (_dfe *ttfParser )ParseHead ()error {if _acf :=_dfe .Seek ("\u0068\u0065\u0061\u0064");
_acf !=nil {return _acf ;};_dfe .Skip (3*4);_abe :=_dfe .ReadULong ();if _abe !=0x5F0F3CF5{_gda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_dfe );
};_dfe .Skip (2);_dfe ._cee .UnitsPerEm =_dfe .ReadUShort ();_dfe .Skip (2*8);_dfe ._cee .Xmin =_dfe .ReadShort ();_dfe ._cee .Ymin =_dfe .ReadShort ();_dfe ._cee .Xmax =_dfe .ReadShort ();_dfe ._cee .Ymax =_dfe .ReadShort ();return nil ;};func _gfge ()StdFont {_bb .Do (_bcg );
_dea :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_dea ,_efc );
};func (_cea *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_cea ._ec .RLock ();defer _cea ._ec .RUnlock ();_aa ,_dbb :=_cea ._ed [b ];return _aa ,_dbb ;};func (_fbg *ttfParser )ParseMaxp ()error {if _bfdc :=_fbg .Seek ("\u006d\u0061\u0078\u0070");
_bfdc !=nil {return _bfdc ;};_fbg .Skip (4);_fbg ._ddd =_fbg .ReadUShort ();return nil ;};var _fad _ce .Once ;func _efcc ()StdFont {_gbc .Do (_gaf );_ff :=Descriptor {Name :TimesRomanName ,Family :_bdb ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_ff ,_efg );};func (_cfg *ttfParser )parseCmapSubtable31 (_fae int64 )error {_cggd :=make ([]rune ,0,8);_eeb :=make ([]rune ,0,8);_adb :=make ([]int16 ,0,8);_aba :=make ([]uint16 ,0,8);_cfg ._cee .Chars =make (map[rune ]GID );_cfg ._daa .Seek (int64 (_cfg ._eabf ["\u0063\u006d\u0061\u0070"])+_fae ,_d .SeekStart );
_gff :=_cfg .ReadUShort ();if _gff !=4{return _db .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_gff ,_fd .ErrNotSupported );
};_cfg .Skip (2*2);_cde :=int (_cfg .ReadUShort ()/2);_cfg .Skip (3*2);for _bec :=0;_bec < _cde ;_bec ++{_eeb =append (_eeb ,rune (_cfg .ReadUShort ()));};_cfg .Skip (2);for _deff :=0;_deff < _cde ;_deff ++{_cggd =append (_cggd ,rune (_cfg .ReadUShort ()));
};for _fgdb :=0;_fgdb < _cde ;_fgdb ++{_adb =append (_adb ,_cfg .ReadShort ());};_ddea ,_ :=_cfg ._daa .Seek (int64 (0),_d .SeekCurrent );for _gcdb :=0;_gcdb < _cde ;_gcdb ++{_aba =append (_aba ,_cfg .ReadUShort ());};for _ffa :=0;_ffa < _cde ;_ffa ++{_fdbb :=_cggd [_ffa ];
_gbd :=_eeb [_ffa ];_egcg :=_adb [_ffa ];_ebd :=_aba [_ffa ];if _ebd > 0{_cfg ._daa .Seek (_ddea +2*int64 (_ffa )+int64 (_ebd ),_d .SeekStart );};for _efeb :=_fdbb ;_efeb <=_gbd ;_efeb ++{if _efeb ==0xFFFF{break ;};var _aee int32 ;if _ebd > 0{_aee =int32 (_cfg .ReadUShort ());
if _aee > 0{_aee +=int32 (_egcg );};}else {_aee =_efeb +int32 (_egcg );};if _aee >=65536{_aee -=65536;};if _aee > 0{_cfg ._cee .Chars [_efeb ]=GID (_aee );};};};return nil ;};func init (){RegisterStdFont (CourierName ,_ag ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_dba ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_fca ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_fcdb ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func _bfg (_bed map[string ]uint32 )string {var _fdea []string ;for _cc :=range _bed {_fdea =append (_fdea ,_cc );
};_gd .Slice (_fdea ,func (_gcd ,_ab int )bool {return _bed [_fdea [_gcd ]]< _bed [_fdea [_ab ]]});_geb :=[]string {_g .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_bed ))};for _ ,_gde :=range _fdea {_geb =append (_geb ,_g .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gde ,_bed [_gde ]));
};return _b .Join (_geb ,"\u000a");};func _gfb (){const _fgg =600;_dgf =MakeRuneCharSafeMap (len (_gc ));for _ ,_aga :=range _gc {_dgf .Write (_aga ,CharMetrics {Wx :_fgg });};_cdf =_dgf .Copy ();_fce =_dgf .Copy ();_fdf =_dgf .Copy ();};var _ Font =StdFont {};
func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_cd .NewStandardEncoder ());};func (_dfc *TtfType )MakeToUnicode ()*_bge .CMap {_gdb :=make (map[_bge .CharCode ]rune );if len (_dfc .GlyphNames )==0{return _bge .NewToUnicodeCMap (_gdb );
};for _efb ,_egc :=range _dfc .Chars {_dc :=_bge .CharCode (_efb );_ced :=_dfc .GlyphNames [_egc ];_gce ,_eeg :=_cd .GlyphToRune (_ced );if !_eeg {_gda .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_efb ,_ced );
_gce =_cd .MissingCodeRune ;};_gdb [_dc ]=_gce ;};return _bge .NewToUnicodeCMap (_gdb );};func TtfParseFile (fileStr string )(TtfType ,error ){_cdad ,_bab :=_f .Open (fileStr );if _bab !=nil {return TtfType {},_bab ;};defer _cdad .Close ();return TtfParse (_cdad );
};type GlyphName =_cd .GlyphName ;type GID =_cd .GID ;var _fb =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _gga =&RuneCharSafeMap {_ed :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_fee *TtfType )MakeEncoder ()(_cd .SimpleEncoder ,error ){_ddc :=make (map[_cd .CharCode ]GlyphName );for _gbe :=_cd .CharCode (0);_gbe <=256;_gbe ++{_ad :=rune (_gbe );_cb ,_fff :=_fee .Chars [_ad ];if !_fff {continue ;};var _eaa GlyphName ;if int (_cb )>=0&&int (_cb )< len (_fee .GlyphNames ){_eaa =_fee .GlyphNames [_cb ];
}else {_eece :=rune (_cb );if _gge ,_cag :=_cd .RuneToGlyph (_eece );_cag {_eaa =_gge ;};};if _eaa !=""{_ddc [_gbe ]=_eaa ;};};if len (_ddc )==0{_gda .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fee ,_fee .Chars );
};return _cd .NewCustomSimpleTextEncoder (_ddc ,nil );};func init (){RegisterStdFont (HelveticaName ,_gfge ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_ecf ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_aae ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_fadb ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_gfg *fontMap )read (_cda StdFontName )(func ()StdFont ,bool ){_gfg .Lock ();defer _gfg .Unlock ();_gdf ,_ee :=_gfg ._da [_cda ];
return _gdf ,_ee ;};func (_bfa *ttfParser )ParseHmtx ()error {if _aac :=_bfa .Seek ("\u0068\u006d\u0074\u0078");_aac !=nil {return _aac ;};_bfa ._cee .Widths =make ([]uint16 ,0,8);for _bba :=uint16 (0);_bba < _bfa ._cbd ;_bba ++{_bfa ._cee .Widths =append (_bfa ._cee .Widths ,_bfa .ReadUShort ());
_bfa .Skip (2);};if _bfa ._cbd < _bfa ._ddd &&_bfa ._cbd > 0{_aef :=_bfa ._cee .Widths [_bfa ._cbd -1];for _ggc :=_bfa ._cbd ;_ggc < _bfa ._ddd ;_ggc ++{_bfa ._cee .Widths =append (_bfa ._cee .Widths ,_aef );};};return nil ;};func _eab ()StdFont {_gbc .Do (_gaf );
_gfc :=Descriptor {Name :TimesBoldName ,Family :_bdb ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};return NewStdFont (_gfc ,_fea );
};type StdFontName string ;func (_adc *TtfType )String ()string {return _g .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_adc .PostScriptName ,_adc .UnitsPerEm ,_adc .Bold ,_adc .ItalicAngle ,_adc .CapHeight ,len (_adc .Chars ),len (_adc .GlyphNames ));
};func (_bbbf *ttfParser )ParseCmap ()error {var _afa int64 ;if _bbe :=_bbbf .Seek ("\u0063\u006d\u0061\u0070");_bbe !=nil {return _bbe ;};_gda .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_bbbf .ReadUShort ();_ecdd :=int (_bbbf .ReadUShort ());
_cff :=int64 (0);_ebg :=int64 (0);_abae :=int64 (0);for _acg :=0;_acg < _ecdd ;_acg ++{_ggd :=_bbbf .ReadUShort ();_dcd :=_bbbf .ReadUShort ();_afa =int64 (_bbbf .ReadULong ());if _ggd ==3&&_dcd ==1{_ebg =_afa ;}else if _ggd ==3&&_dcd ==10{_abae =_afa ;
}else if _ggd ==1&&_dcd ==0{_cff =_afa ;};};if _cff !=0{if _fcee :=_bbbf .parseCmapVersion (_cff );_fcee !=nil {return _fcee ;};};if _ebg !=0{if _faf :=_bbbf .parseCmapSubtable31 (_ebg );_faf !=nil {return _faf ;};};if _abae !=0{if _aec :=_bbbf .parseCmapVersion (_abae );
_aec !=nil {return _aec ;};};if _ebg ==0&&_cff ==0&&_abae ==0{_gda .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func NewFontFile2FromPdfObject (obj _fd .PdfObject )(TtfType ,error ){obj =_fd .TraceToDirectObject (obj );_bcgd ,_ffb :=obj .(*_fd .PdfObjectStream );if !_ffb {_gda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_fd .ErrTypeError ;};_bgf ,_defa :=_fd .DecodeStream (_bcgd );if _defa !=nil {return TtfType {},_defa ;};_fde :=ttfParser {_daa :_bg .NewReader (_bgf )};return _fde .Parse ();};var _facc =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func _ceg ()StdFont {_egga :=_cd .NewSymbolEncoder ();_dgb :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_dgb ,_gea ,_egga );};var _bb _ce .Once ;var _ga =&fontMap {_da :make (map[StdFontName ]func ()StdFont )};func _ag ()StdFont {_fad .Do (_gfb );_cdb :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_cdb ,_dgf );};var _fdb *RuneCharSafeMap ;func init (){RegisterStdFont (SymbolName ,_ceg ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_cggf );};func TtfParse (r _d .ReadSeeker )(TtfType ,error ){_caf :=&ttfParser {_daa :r };return _caf .Parse ()};func (_dde CharMetrics )String ()string {return _g .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_dde .Wx ,_dde .Wy );
};func (_dgca *ttfParser )Seek (tag string )error {_bcdg ,_dgbf :=_dgca ._eabf [tag ];if !_dgbf {return _g .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_dgca ._daa .Seek (int64 (_bcdg ),_d .SeekStart );
return nil ;};func _ecf ()StdFont {_bb .Do (_bcg );_eecc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_eecc ,_aca );};func (_dace *ttfParser )ParseHhea ()error {if _cfc :=_dace .Seek ("\u0068\u0068\u0065\u0061");_cfc !=nil {return _cfc ;};_dace .Skip (4+15*2);_dace ._cbd =_dace .ReadUShort ();return nil ;};func init (){RegisterStdFont (TimesRomanName ,_efcc ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_eab ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_def ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_cga ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_baf *fontMap )write (_eg StdFontName ,_fcg func ()StdFont ){_baf .Lock ();defer _baf .Unlock ();_baf ._da [_eg ]=_fcg ;};func (_geag *ttfParser )ReadULong ()(_aafc uint32 ){_dd .Read (_geag ._daa ,_dd .BigEndian ,&_aafc );return _aafc ;};func (_fbc *ttfParser )parseCmapFormat0 ()error {_cce ,_gaa :=_fbc .ReadStr (256);
if _gaa !=nil {return _gaa ;};_fgfg :=[]byte (_cce );_gda .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_fbc ._cee .String (),_cce ,_fgfg );
for _adf ,_fcbc :=range _fgfg {_fbc ._cee .Chars [rune (_adf )]=GID (_fcbc );};return nil ;};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");
);var _cdf *RuneCharSafeMap ;func _fcdb ()StdFont {_fad .Do (_gfb );_ecd :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ecd ,_fce );};func (_fgfe *ttfParser )ParsePost ()error {if _dgc :=_fgfe .Seek ("\u0070\u006f\u0073\u0074");_dgc !=nil {return _dgc ;};_agca :=_fgfe .Read32Fixed ();_fgfe ._cee .ItalicAngle =_fgfe .Read32Fixed ();_fgfe ._cee .UnderlinePosition =_fgfe .ReadShort ();
_fgfe ._cee .UnderlineThickness =_fgfe .ReadShort ();_fgfe ._cee .IsFixedPitch =_fgfe .ReadULong ()!=0;_fgfe .ReadULong ();_fgfe .ReadULong ();_fgfe .ReadULong ();_fgfe .ReadULong ();_gda .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_agca );
switch _agca {case 1.0:_fgfe ._cee .GlyphNames =_facc ;case 2.0:_cgad :=int (_fgfe .ReadUShort ());_dbae :=make ([]int ,_cgad );_fgfe ._cee .GlyphNames =make ([]GlyphName ,_cgad );_caa :=-1;for _dega :=0;_dega < _cgad ;_dega ++{_gdd :=int (_fgfe .ReadUShort ());
_dbae [_dega ]=_gdd ;if _gdd <=0x7fff&&_gdd > _caa {_caa =_gdd ;};};var _cgeb []GlyphName ;if _caa >=len (_facc ){_cgeb =make ([]GlyphName ,_caa -len (_facc )+1);for _gbdg :=0;_gbdg < _caa -len (_facc )+1;_gbdg ++{_bcbg :=int (_fgfe .readByte ());_gdea ,_fbf :=_fgfe .ReadStr (_bcbg );
if _fbf !=nil {return _fbf ;};_cgeb [_gbdg ]=GlyphName (_gdea );};};for _cefa :=0;_cefa < _cgad ;_cefa ++{_fge :=_dbae [_cefa ];if _fge < len (_facc ){_fgfe ._cee .GlyphNames [_cefa ]=_facc [_fge ];}else if _fge >=len (_facc )&&_fge <=32767{_fgfe ._cee .GlyphNames [_cefa ]=_cgeb [_fge -len (_facc )];
}else {_fgfe ._cee .GlyphNames [_cefa ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_baac :=make ([]int ,_fgfe ._ddd );for _bdbd :=0;_bdbd < len (_baac );_bdbd ++{_eefc :=int (_fgfe .ReadSByte ());_baac [_bdbd ]=_bdbd +1+_eefc ;
};_fgfe ._cee .GlyphNames =make ([]GlyphName ,len (_baac ));for _ebc :=0;_ebc < len (_fgfe ._cee .GlyphNames );_ebc ++{_abf :=_facc [_baac [_ebc ]];_fgfe ._cee .GlyphNames [_ebc ]=_abf ;};case 3.0:_gda .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gda .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_agca );};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;
Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;
};var _dee =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_baff *ttfParser )ReadShort ()(_bdg int16 ){_dd .Read (_baff ._daa ,_dd .BigEndian ,&_bdg );return _bdg ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _efg *RuneCharSafeMap ;const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);var _gbc _ce .Once ;func _def ()StdFont {_gbc .Do (_gaf );_bga :=Descriptor {Name :TimesItalicName ,Family :_bdb ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_bga ,_bde );};var _dgf *RuneCharSafeMap ;func _gaf (){_efg =MakeRuneCharSafeMap (len (_gc ));_fea =MakeRuneCharSafeMap (len (_gc ));_ddf =MakeRuneCharSafeMap (len (_gc ));_bde =MakeRuneCharSafeMap (len (_gc ));for _bf ,_fab :=range _gc {_efg .Write (_fab ,CharMetrics {Wx :float64 (_gee [_bf ])});
_fea .Write (_fab ,CharMetrics {Wx :float64 (_dee [_bf ])});_ddf .Write (_fab ,CharMetrics {Wx :float64 (_fb [_bf ])});_bde .Write (_fab ,CharMetrics {Wx :float64 (_cgac [_bf ])});};};func _fadb ()StdFont {_bb .Do (_bcg );_fcab :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fcab ,_bcd );};func _bcg (){_efc =MakeRuneCharSafeMap (len (_gc ));_aca =MakeRuneCharSafeMap (len (_gc ));for _efd ,_af :=range _gc {_efc .Write (_af ,CharMetrics {Wx :float64 (_fcb [_efd ])});_aca .Write (_af ,CharMetrics {Wx :float64 (_fgf [_efd ])});
};_fdb =_efc .Copy ();_bcd =_aca .Copy ();};var _fea *RuneCharSafeMap ;func (_fcad *ttfParser )ParseComponents ()error {if _ggg :=_fcad .ParseHead ();_ggg !=nil {return _ggg ;};if _afb :=_fcad .ParseHhea ();_afb !=nil {return _afb ;};if _bfd :=_fcad .ParseMaxp ();
_bfd !=nil {return _bfd ;};if _cf :=_fcad .ParseHmtx ();_cf !=nil {return _cf ;};if _ ,_edb :=_fcad ._eabf ["\u006e\u0061\u006d\u0065"];_edb {if _cge :=_fcad .ParseName ();_cge !=nil {return _cge ;};};if _ ,_gdef :=_fcad ._eabf ["\u004f\u0053\u002f\u0032"];
_gdef {if _affa :=_fcad .ParseOS2 ();_affa !=nil {return _affa ;};};if _ ,_ecad :=_fcad ._eabf ["\u0070\u006f\u0073\u0074"];_ecad {if _aegd :=_fcad .ParsePost ();_aegd !=nil {return _aegd ;};};if _ ,_ffc :=_fcad ._eabf ["\u0063\u006d\u0061\u0070"];_ffc {if _fed :=_fcad .ParseCmap ();
_fed !=nil {return _fed ;};};return nil ;};type Font interface{Encoder ()_cd .TextEncoder ;GetRuneMetrics (_fe rune )(CharMetrics ,bool );};var _gea =&RuneCharSafeMap {_ed :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_dgg *ttfParser )ParseName ()error {if _fddb :=_dgg .Seek ("\u006e\u0061\u006d\u0065");_fddb !=nil {return _fddb ;};_gfce ,_ :=_dgg ._daa .Seek (0,_d .SeekCurrent );_dgg ._cee .PostScriptName ="";
_dgg .Skip (2);_gfga :=_dgg .ReadUShort ();_fbca :=_dgg .ReadUShort ();for _gad :=uint16 (0);_gad < _gfga &&_dgg ._cee .PostScriptName =="";_gad ++{_dgg .Skip (3*2);_cced :=_dgg .ReadUShort ();_cdae :=_dgg .ReadUShort ();_bafa :=_dgg .ReadUShort ();if _cced ==6{_dgg ._daa .Seek (_gfce +int64 (_fbca )+int64 (_bafa ),_d .SeekStart );
_bebd ,_dcc :=_dgg .ReadStr (int (_cdae ));if _dcc !=nil {return _dcc ;};_bebd =_b .Replace (_bebd ,"\u0000","",-1);_daf ,_dcc :=_e .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _dcc !=nil {return _dcc ;
};_dgg ._cee .PostScriptName =_daf .ReplaceAllString (_bebd ,"");};};if _dgg ._cee .PostScriptName ==""{_gda .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_bgd *ttfParser )readByte ()(_daaf uint8 ){_dd .Read (_bgd ._daa ,_dd .BigEndian ,&_daaf );return _daaf ;};func (_be StdFont )Name ()string {return string (_be ._eec .Name )};func (_egg StdFont )ToPdfObject ()_fd .PdfObject {_deg :=_fd .MakeDict ();
_deg .Set ("\u0054\u0079\u0070\u0065",_fd .MakeName ("\u0046\u006f\u006e\u0074"));_deg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fd .MakeName ("\u0054\u0079\u0070e\u0031"));_deg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fd .MakeName (_egg .Name ()));
_deg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_egg ._bdc .ToPdfObject ());return _fd .MakeIndirectObject (_deg );};func (_fdd *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fdd ._ec .Lock ();defer _fdd ._ec .Unlock ();_fdd ._ed [b ]=r ;
};var _gc =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_cegg *ttfParser )ReadSByte ()(_feda int8 ){_dd .Read (_cegg ._daa ,_dd .BigEndian ,&_feda );return _feda ;};type RuneCharSafeMap struct{_ed map[rune ]CharMetrics ;_ec _ce .RWMutex ;};func (_dac StdFont )Descriptor ()Descriptor {return _dac ._eec };
var _ddf *RuneCharSafeMap ;func (_gbg *ttfParser )parseCmapFormat6 ()error {_fef :=int (_gbg .ReadUShort ());_efgg :=int (_gbg .ReadUShort ());_gda .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gbg ._cee .String (),_fef ,_efgg );
for _bcb :=0;_bcb < _efgg ;_bcb ++{_edf :=GID (_gbg .ReadUShort ());_gbg ._cee .Chars [rune (_bcb +_fef )]=_edf ;};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_dg :=_ga .read (name );_dg {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ga .write (name ,fnc );for _ ,_bd :=range aliases {RegisterStdFont (_bd ,fnc );};};var _cgac =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func NewStdFontByName (name StdFontName )(StdFont ,bool ){_dbbf ,_dff :=_ga .read (name );if !_dff {return StdFont {},false ;};return _dbbf (),true ;};func _dba ()StdFont {_fad .Do (_gfb );_bce :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bce ,_cdf );};func _fca ()StdFont {_fad .Do (_gfb );_gb :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gb ,_fdf );};func (_fc *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ge :=MakeRuneCharSafeMap (_fc .Length ());_fc .Range (func (_a rune ,_gf CharMetrics )(_fa bool ){_ge ._ed [_a ]=_gf ;return false });return _ge ;};var _aca *RuneCharSafeMap ;
func (_beb *ttfParser )Parse ()(TtfType ,error ){_gfa ,_efgc :=_beb .ReadStr (4);if _efgc !=nil {return TtfType {},_efgc ;};if _gfa =="\u004f\u0054\u0054\u004f"{return TtfType {},_db .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fd .ErrNotSupported );
};if _gfa !="\u0000\u0001\u0000\u0000"&&_gfa !="\u0074\u0072\u0075\u0065"{_gda .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_gfa );
};_aaf :=int (_beb .ReadUShort ());_beb .Skip (3*2);_beb ._eabf =make (map[string ]uint32 );var _defe string ;for _bdcg :=0;_bdcg < _aaf ;_bdcg ++{_defe ,_efgc =_beb .ReadStr (4);if _efgc !=nil {return TtfType {},_efgc ;};_beb .Skip (4);_bea :=_beb .ReadULong ();
_beb .Skip (4);_beb ._eabf [_defe ]=_bea ;};_gda .Log .Trace (_bfg (_beb ._eabf ));if _efgc =_beb .ParseComponents ();_efgc !=nil {return TtfType {},_efgc ;};return _beb ._cee ,nil ;};func (_bdf *ttfParser )parseCmapSubtable10 (_ecg int64 )error {if _bdf ._cee .Chars ==nil {_bdf ._cee .Chars =make (map[rune ]GID );
};_bdf ._daa .Seek (int64 (_bdf ._eabf ["\u0063\u006d\u0061\u0070"])+_ecg ,_d .SeekStart );var _ebe ,_bbc uint32 ;_fffb :=_bdf .ReadUShort ();if _fffb < 8{_ebe =uint32 (_bdf .ReadUShort ());_bbc =uint32 (_bdf .ReadUShort ());}else {_bdf .ReadUShort ();
_ebe =_bdf .ReadULong ();_bbc =_bdf .ReadULong ();};_gda .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_fffb ,_ebe ,_bbc );
if _fffb !=0{return _gg .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_geec ,_cged :=_bdf .ReadStr (256);
if _cged !=nil {return _cged ;};_fagf :=[]byte (_geec );for _cfga ,_agc :=range _fagf {_bdf ._cee .Chars [rune (_cfga )]=GID (_agc );if _agc !=0{_g .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_cfga ,_agc ,rune (_agc ));
};};return nil ;};var _efc *RuneCharSafeMap ;type fontMap struct{_ce .Mutex ;_da map[StdFontName ]func ()StdFont ;};func (_gcc *ttfParser )Skip (n int ){_gcc ._daa .Seek (int64 (n ),_d .SeekCurrent )};func (_edfc *ttfParser )ReadStr (length int )(string ,error ){_cdbf :=make ([]byte ,length );
_ecfg ,_acb :=_edfc ._daa .Read (_cdbf );if _acb !=nil {return "",_acb ;}else if _ecfg !=length {return "",_g .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_cdbf ),nil ;};var _bde *RuneCharSafeMap ;func (_becg *ttfParser )parseCmapVersion (_gfag int64 )error {_gda .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gfag );
if _becg ._cee .Chars ==nil {_becg ._cee .Chars =make (map[rune ]GID );};_becg ._daa .Seek (int64 (_becg ._eabf ["\u0063\u006d\u0061\u0070"])+_gfag ,_d .SeekStart );var _age ,_efbe uint32 ;_cggfg :=_becg .ReadUShort ();if _cggfg < 8{_age =uint32 (_becg .ReadUShort ());
_efbe =uint32 (_becg .ReadUShort ());}else {_becg .ReadUShort ();_age =_becg .ReadULong ();_efbe =_becg .ReadULong ();};_gda .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_cggfg ,_age ,_efbe );
switch _cggfg {case 0:return _becg .parseCmapFormat0 ();case 6:return _becg .parseCmapFormat6 ();case 12:return _becg .parseCmapFormat12 ();default:_gda .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_cggfg );
return nil ;};};type StdFont struct{_eec Descriptor ;_cg *RuneCharSafeMap ;_bdc _cd .TextEncoder ;};func (_ae *RuneCharSafeMap )Length ()int {_ae ._ec .RLock ();defer _ae ._ec .RUnlock ();return len (_ae ._ed );};type FontWeight int ;