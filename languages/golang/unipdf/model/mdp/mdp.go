//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_a "errors";_fd "fmt";_c "lgo/unipdf/core";);

// IsPermitted returns true if changes permitted.
func (_dad *DiffResults )IsPermitted ()bool {return len (_dad .Errors )==0};func (_fef *defaultDiffPolicy )comparePages (_de int ,_ade ,_ed *_c .PdfIndirectObject )error {if _ ,_gaf :=_fef ._b [_ed .ObjectNumber ];_gaf {_fef ._cg .addErrorWithDescription (_de ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_cdc ,_ccc :=_c .GetDict (_ed .PdfObject );_bab ,_dg :=_c .GetDict (_ade .PdfObject );if !_ccc ||!_dg {return _a .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_cab ,_ccc :=_c .GetArray (_cdc .Get ("\u004b\u0069\u0064\u0073"));_ecc ,_dg :=_c .GetArray (_bab .Get ("\u004b\u0069\u0064\u0073"));if !_ccc ||!_dg {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_fac :=_cab .Len ();if _fac > _ecc .Len (){_fac =_ecc .Len ();};for _ebg :=0;_ebg < _fac ;_ebg ++{_cf ,_ccg :=_c .GetIndirect (_c .ResolveReference (_ecc .Get (_ebg )));_eee ,_bba :=_c .GetIndirect (_c .ResolveReference (_cab .Get (_ebg )));if !_ccg ||!_bba {return _a .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _cf .ObjectNumber !=_eee .ObjectNumber {_fef ._cg .addErrorWithDescription (_de ,_fd .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_ebg ));};_gf ,_ccg :=_c .GetDict (_eee );_abd ,_bba :=_c .GetDict (_cf );
if !_ccg ||!_bba {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_cabc ,_cag :=_bgc (_gf .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _cag !=nil {return _cag ;};_ecce ,_cag :=_bgc (_abd .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _cag !=nil {return _cag ;};if _eda :=_fef .compareAnnots (_de ,_ecce ,_cabc );_eda !=nil {return _eda ;};};for _dfda :=_fac +1;_dfda <=_cab .Len ();
_dfda ++{_fef ._cg .addErrorWithDescription (_de ,_fd .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_dfda ));};for _eae :=_fac +1;_eae <=_ecc .Len ();_eae ++{_fef ._cg .addErrorWithDescription (_de ,_fd .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_eae ));
};return nil ;};

// String returns the state of the warning.
func (_acc *DiffResult )String ()string {return _fd .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_acc .Description ,_acc .Revision );};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_cff *_c .PdfParser ,_aea *_c .PdfParser ,_aee *MDPParameters )(*DiffResults ,error );};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_b :nil ,_cg :&DiffResults {},_g :0};};func (_cbc *defaultDiffPolicy )compareAnnots (_fae int ,_cfg ,_ge []_c .PdfObject )error {_ac :=make (map[int64 ]*_c .PdfObjectDictionary );
for _ ,_dec :=range _cfg {_bfa ,_af :=_c .GetIndirect (_dec );if !_af {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_agb ,_af :=_c .GetDict (_bfa .PdfObject );
if !_af {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ac [_bfa .ObjectNumber ]=_agb ;};for _ ,_ffdc :=range _ge {_dgb ,_dba :=_c .GetIndirect (_ffdc );
if !_dba {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_bfd ,_dba :=_c .GetDict (_dgb .PdfObject );if !_dba {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_dd ,_ :=_c .GetStringVal (_bfd .Get ("\u0054"));_bga ,_ :=_c .GetNameVal (_bfd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_ead :=_ac [_dgb .ObjectNumber ];!_ead {switch _cbc ._g {case NoRestrictions ,FillFormsAndAnnots :_cbc ._cg .addWarningWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bga ,_dd ));
default:_ffa ,_bdg :=_c .GetDict (_dgb .PdfObject );if !_bdg {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_ace ,_bdg :=_c .GetNameVal (_ffa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_bdg {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _ace =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _cbc ._g {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_cbc ._cg .addWarningWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bga ,_dd ));
default:_cbc ._cg .addErrorWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bga ,_dd ));};}else {_cbc ._cg .addErrorWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_bga ,_dd ));
};};}else {delete (_ac ,_dgb .ObjectNumber );if _aac ,_dge :=_cbc ._b [_dgb .ObjectNumber ];_dge {switch _cbc ._g {case NoRestrictions ,FillFormsAndAnnots :_cbc ._cg .addWarningWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bga ,_dd ));
default:_gdb ,_fgb :=_c .GetIndirect (_aac );if !_fgb {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_bbb ,_fgb :=_c .GetDict (_gdb .PdfObject );if !_fgb {return _a .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_dgea ,_fgb :=_c .GetNameVal (_bbb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fgb {return _a .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _dgea =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _cbc ._g {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_cbc ._cg .addWarningWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bga ,_dd ));
default:_cbc ._cg .addErrorWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bga ,_dd ));};}else {_cbc ._cg .addErrorWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_bga ,_dd ));
};};};};};for _ ,_ae :=range _ac {_eac ,_ :=_c .GetStringVal (_ae .Get ("\u0054"));_edd ,_ :=_c .GetNameVal (_ae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _cbc ._g {case NoRestrictions ,FillFormsAndAnnots :_cbc ._cg .addWarningWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_edd ,_eac ));
default:_cbc ._cg .addErrorWithDescription (_fae ,_fd .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_edd ,_eac ));};};return nil ;};type defaultDiffPolicy struct{_b map[int64 ]_c .PdfObject ;
_cg *DiffResults ;_g DocMDPPermission ;};func _bgc (_gb _c .PdfObject )([]_c .PdfObject ,error ){_fga :=make ([]_c .PdfObject ,0);if _gb !=nil {_dfe :=_gb ;if _gde ,_dcc :=_c .GetIndirect (_gb );_dcc {_dfe =_gde .PdfObject ;};if _dbdg ,_bde :=_c .GetArray (_dfe );
_bde {_fga =_dbdg .Elements ();}else {return nil ,_a .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");};};return _fga ,nil ;};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);func (_aef *DiffResults )addWarningWithDescription (_gee int ,_bbd string ){if _aef .Warnings ==nil {_aef .Warnings =make ([]*DiffResult ,0);
};_aef .Warnings =append (_aef .Warnings ,&DiffResult {Revision :_gee ,Description :_bbd });};func (_eg *defaultDiffPolicy )compareFields (_bf int ,_cdf ,_ffd []_c .PdfObject )error {_be :=make (map[int64 ]*_c .PdfObjectDictionary );for _ ,_ebe :=range _cdf {_fc ,_dfd :=_c .GetIndirect (_ebe );
if !_dfd {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_ea ,_dfd :=_c .GetDict (_fc .PdfObject );if !_dfd {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_be [_fc .ObjectNumber ]=_ea ;};for _ ,_gdd :=range _ffd {_age ,_bc :=_c .GetIndirect (_gdd );if !_bc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_ce ,_bc :=_c .GetDict (_age .PdfObject );if !_bc {return _a .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};T :=_ce .Get ("\u0054");if _ ,_egf :=_eg ._b [_age .ObjectNumber ];
_egf {switch _eg ._g {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_eg ._cg .addWarningWithDescription (_bf ,_fd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));default:_eg ._cg .addErrorWithDescription (_bf ,_fd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
};};if _ ,_da :=_be [_age .ObjectNumber ];!_da {switch _eg ._g {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_eg ._cg .addWarningWithDescription (_bf ,_fd .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ce .Get ("\u0054")));
default:_eg ._cg .addErrorWithDescription (_bf ,_fd .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ce .Get ("\u0054")));};}else {delete (_be ,_age .ObjectNumber );if _ ,_fbd :=_eg ._b [_age .ObjectNumber ];
_fbd {switch _eg ._g {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_eg ._cg .addWarningWithDescription (_bf ,_fd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ce .Get ("\u0054")));default:_eg ._cg .addErrorWithDescription (_bf ,_fd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ce .Get ("\u0054")));
};};};if FT ,_fdc :=_c .GetNameVal (_ce .Get ("\u0046\u0054"));_fdc {if FT =="\u0053\u0069\u0067"{if _bgd ,_gdg :=_c .GetIndirect (_ce .Get ("\u0056"));_gdg {if _ ,_cc :=_eg ._b [_bgd .ObjectNumber ];_cc {switch _eg ._g {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_eg ._cg .addWarningWithDescription (_bf ,_fd .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_eg ._cg .addErrorWithDescription (_bf ,_fd .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};
};};for _ ,_eef :=range _be {switch _eg ._g {case NoRestrictions :_eg ._cg .addWarningWithDescription (_bf ,_fd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_eef .Get ("\u0054")));default:_eg ._cg .addErrorWithDescription (_bf ,_fd .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_eef .Get ("\u0054")));
};};return nil ;};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_cd *defaultDiffPolicy )ReviewFile (oldParser *_c .PdfParser ,newParser *_c .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_a .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_a .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_cd ._g =NoRestrictions ;}else {_cd ._g =params .DocMDPLevel ;};_e :=&DiffResults {};for _ad :=oldParser .GetRevisionNumber ()+1;_ad <=newParser .GetRevisionNumber ();_ad ++{_cb ,_bg :=newParser .GetRevision (_ad -1);
if _bg !=nil {return nil ,_bg ;};_ada ,_bg :=newParser .GetRevision (_ad );if _bg !=nil {return nil ,_bg ;};_d ,_bg :=_cd .compareRevisions (_cb ,_ada );if _bg !=nil {return nil ,_bg ;};_e .Warnings =append (_e .Warnings ,_d .Warnings ...);_e .Errors =append (_e .Errors ,_d .Errors ...);
};return _e ,nil ;};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;func (_fad *DiffResults )addWarning (_baa *DiffResult ){if _fad .Warnings ==nil {_fad .Warnings =make ([]*DiffResult ,0);};_fad .Warnings =append (_fad .Warnings ,_baa );};func (_bd *defaultDiffPolicy )compareRevisions (_db *_c .PdfParser ,_ba *_c .PdfParser )(*DiffResults ,error ){var _ef error ;
_bd ._b ,_ef =_ba .GetUpdatedObjects (_db );if _ef !=nil {return &DiffResults {},_ef ;};if len (_bd ._b )==0{return &DiffResults {},nil ;};_bb :=_ba .GetRevisionNumber ();_adc ,_cda :=_c .GetIndirect (_c .ResolveReference (_db .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_ga ,_gad :=_c .GetIndirect (_c .ResolveReference (_ba .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_cda ||!_gad {return &DiffResults {},_a .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_cdd ,_cda :=_c .GetDict (_c .ResolveReference (_adc .PdfObject ));_fb ,_gad :=_c .GetDict (_c .ResolveReference (_ga .PdfObject ));if !_cda ||!_gad {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ab ,_fe :=_c .GetIndirect (_fb .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_fe {_fa ,_ff :=_c .GetDict (_ab );if !_ff {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_df :=make ([]_c .PdfObject ,0);if _bac ,_eb :=_c .GetIndirect (_cdd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_eb {if _ec ,_ebb :=_c .GetDict (_bac );_ebb {if _ebd ,_ee :=_c .GetArray (_ec .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_ee {_df =_ebd .Elements ();};};};_gg ,_ff :=_c .GetArray (_fa .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_ff {return &DiffResults {},_a .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _fbf :=_bd .compareFields (_bb ,_df ,_gg .Elements ());_fbf !=nil {return &DiffResults {},_fbf ;};};_cgg ,_ca :=_c .GetIndirect (_fb .Get ("\u0050\u0061\u0067e\u0073"));if !_ca {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ag ,_ca :=_c .GetIndirect (_cdd .Get ("\u0050\u0061\u0067e\u0073"));if !_ca {return &DiffResults {},_a .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _gc :=_bd .comparePages (_bb ,_ag ,_cgg );_gc !=nil {return &DiffResults {},_gc ;};return _bd ._cg ,nil ;};func (_eeg *DiffResults )addError (_aag *DiffResult ){if _eeg .Errors ==nil {_eeg .Errors =make ([]*DiffResult ,0);};_eeg .Errors =append (_eeg .Errors ,_aag );
};func (_ccb *DiffResults )addErrorWithDescription (_gbc int ,_dcb string ){if _ccb .Errors ==nil {_ccb .Errors =make ([]*DiffResult ,0);};_ccb .Errors =append (_ccb .Errors ,&DiffResult {Revision :_gbc ,Description :_dcb });};