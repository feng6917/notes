//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_ab "errors";_ac "fmt";_eb "golang/freetype/raster";_cb "lgo/test/unipdf/common";_cc "lgo/test/unipdf/internal/transform";_ce "lgo/test/unipdf/render/internal/context";_acd "golang.org/x/image/draw";
_dg "golang.org/x/image/font";_cd "golang.org/x/image/math/f64";_d "golang.org/x/image/math/fixed";_f "image";_g "image/color";_e "image/draw";_b "math";_cf "sort";_a "strings";);func _gebe (_bdce ,_aedc _g .Color ,_bbda float64 )_g .Color {_fce ,_gea ,_aac ,_gfcad :=_bdce .RGBA ();
_gaefd ,_dgc ,_aecb ,_gbadf :=_aedc .RGBA ();return _g .RGBA {_dgd (_fce ,_gaefd ,_bbda ),_dgd (_gea ,_dgc ,_bbda ),_dgd (_aac ,_aecb ,_bbda ),_dgd (_gfcad ,_gbadf ,_bbda )};};func _ebfe (_fede _f .Image ,_ffdb repeatOp )_ce .Pattern {return &surfacePattern {_fdg :_fede ,_baf :_ffdb };
};func (_cae *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_cae .MoveTo (x1 ,y1 );_cae .LineTo (x2 ,y2 )};func _abg (_ccc [][]_cc .Point ,_acdg []float64 ,_egfe float64 )[][]_cc .Point {var _gdf [][]_cc .Point ;if len (_acdg )==0{return _ccc ;};if len (_acdg )==1{_acdg =append (_acdg ,_acdg [0]);
};for _ ,_fcc :=range _ccc {if len (_fcc )< 2{continue ;};_ecc :=_fcc [0];_dgg :=1;_bac :=0;_ddd :=0.0;if _egfe !=0{var _cedd float64 ;for _ ,_cgee :=range _acdg {_cedd +=_cgee ;};_egfe =_b .Mod (_egfe ,_cedd );if _egfe < 0{_egfe +=_cedd ;};for _dfg ,_gbaa :=range _acdg {_egfe -=_gbaa ;
if _egfe < 0{_bac =_dfg ;_ddd =_gbaa +_egfe ;break ;};};};var _bcaa []_cc .Point ;_bcaa =append (_bcaa ,_ecc );for _dgg < len (_fcc ){_acbd :=_acdg [_bac ];_gbd :=_fcc [_dgg ];_afg :=_ecc .Distance (_gbd );_gab :=_acbd -_ddd ;if _afg > _gab {_dbcc :=_gab /_afg ;
_gdfb :=_ecc .Interpolate (_gbd ,_dbcc );_bcaa =append (_bcaa ,_gdfb );if _bac %2==0&&len (_bcaa )> 1{_gdf =append (_gdf ,_bcaa );};_bcaa =nil ;_bcaa =append (_bcaa ,_gdfb );_ddd =0;_ecc =_gdfb ;_bac =(_bac +1)%len (_acdg );}else {_bcaa =append (_bcaa ,_gbd );
_ecc =_gbd ;_ddd +=_afg ;_dgg ++;};};if _bac %2==0&&len (_bcaa )> 1{_gdf =append (_gdf ,_bcaa );};};return _gdf ;};func _ebd (_bd ,_ebf ,_fg ,_fe ,_ff ,_feb float64 )[]_cc .Point {_eg :=(_b .Hypot (_fg -_bd ,_fe -_ebf )+_b .Hypot (_ff -_fg ,_feb -_fe ));
_fc :=int (_eg +0.5);if _fc < 4{_fc =4;};_ea :=float64 (_fc )-1;_db :=make ([]_cc .Point ,_fc );for _bg :=0;_bg < _fc ;_bg ++{_af :=float64 (_bg )/_ea ;_acg ,_cafa :=_cbe (_bd ,_ebf ,_fg ,_fe ,_ff ,_feb ,_af );_db [_bg ]=_cc .NewPoint (_acg ,_cafa );};
return _db ;};func (_abb *Context )SetMatrix (m _cc .Matrix ){_abb ._eaf =m };func (_gdb *Context )SetColor (c _g .Color ){_gdb .setFillAndStrokeColor (c )};type linearGradient struct{_ddfg ,_acfg ,_dfa ,_ceda float64 ;_bfbg stops ;};func (_fffa *Context )NewSubPath (){if _fffa ._gg {_fffa ._ad .Add1 (_bad (_fffa ._daf ));
};_fffa ._gg =false ;};func (_cdf *Context )SetRGB255 (r ,g ,b int ){_cdf .SetRGBA255 (r ,g ,b ,255)};func (_ccbg stops )Len ()int {return len (_ccbg )};func (_ccde *Context )InvertMask (){if _ccde ._fde ==nil {_ccde ._fde =_f .NewAlpha (_ccde ._dffe .Bounds ());
}else {for _cbf ,_fdae :=range _ccde ._fde .Pix {_ccde ._fde .Pix [_cbf ]=255-_fdae ;};};};func (_gfe *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gfe .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_fdf *Context )joiner ()_eb .Joiner {switch _fdf ._acc {case _ce .LineJoinBevel :return _eb .BevelJoiner ;
case _ce .LineJoinRound :return _eb .RoundJoiner ;};return nil ;};func (_edd *Context )SetFillStyle (pattern _ce .Pattern ){if _fgg ,_ega :=pattern .(*solidPattern );_ega {_edd ._agb =_fgg ._fega ;};_edd ._fda =pattern ;};type surfacePattern struct{_fdg _f .Image ;
_baf repeatOp ;};func (_deab *Context )Shear (x ,y float64 ){_deab ._eaf .Shear (x ,y )};func (_fff *Context )SetHexColor (x string ){_egf ,_gcb ,_bgb ,_bdfb :=_ffda (x );_fff .SetRGBA255 (_egf ,_gcb ,_bgb ,_bdfb );};func _dagb (_bcgg float64 )_d .Int26_6 {return _d .Int26_6 (_bcgg *64)};
type circle struct{_fcbe ,_cbfc ,_afc float64 };func (_gbad *Context )Matrix ()_cc .Matrix {return _gbad ._eaf };func (_deg *Context )DrawPoint (x ,y ,r float64 ){_deg .Push ();_fae ,_cfa :=_deg .Transform (x ,y );_deg .Identity ();_deg .DrawCircle (_fae ,_cfa ,r );
_deg .Pop ();};func (_fgc *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_fgc .NewSubPath ();_fgc .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_fgc .ClosePath ();};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_ce .Gradient {_fbg :=circle {x0 ,y0 ,r0 };
_dbbf :=circle {x1 ,y1 ,r1 };_eabd :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_aefb :=_daag (_eabd ._fcbe ,_eabd ._cbfc ,-_eabd ._afc ,_eabd ._fcbe ,_eabd ._cbfc ,_eabd ._afc );var _deac float64 ;if _aefb !=0{_deac =1.0/_aefb ;};_aadda :=-_fbg ._afc ;_afbe :=&radialGradient {_bef :_fbg ,_fcg :_dbbf ,_ddfgg :_eabd ,_caae :_aefb ,_efgd :_deac ,_eaa :_aadda };
return _afbe ;};func (_dfb *Context )Height ()int {return _dfb ._bdc };type solidPattern struct{_fega _g .Color };func (_gba *Context )stroke (_cdd _eb .Painter ){_ced :=_gba ._dfd ;if len (_gba ._efa )> 0{_ced =_debb (_ced ,_gba ._efa ,_gba ._edb );}else {_ced =_fgcf (_geca (_ced ));
};_gcd :=_gba ._gf ;_gcd .UseNonZeroWinding =true ;_gcd .Clear ();_gcf :=(_gba ._eaf .ScalingFactorX ()+_gba ._eaf .ScalingFactorY ())/2;_gcd .AddStroke (_ced ,_dagb (_gba ._dc *_gcf ),_gba .capper (),_gba .joiner ());_gcd .Rasterize (_cdd );};func (_dbb *Context )TextState ()*_ce .TextState {return &_dbb ._daa };
func _dgd (_bbf ,_gcdcb uint32 ,_dfaa float64 )uint8 {return uint8 (int32 (float64 (_bbf )*(1.0-_dfaa )+float64 (_gcdcb )*_dfaa )>>8);};func NewContextForRGBA (im *_f .RGBA )*Context {_bf :=im .Bounds ().Size ().X ;_dee :=im .Bounds ().Size ().Y ;return &Context {_acge :_bf ,_bdc :_dee ,_gf :_eb .NewRasterizer (_bf ,_dee ),_dffe :im ,_agb :_g .Transparent ,_fda :_ead ,_ageb :_ccb ,_dc :1,_gff :_ce .FillRuleWinding ,_eaf :_cc .IdentityMatrix (),_daa :_ce .NewTextState ()};
};func _daag (_fdad ,_fgecg ,_edc ,_gffa ,_bbc ,_gaeb float64 )float64 {return _fdad *_gffa +_fgecg *_bbc +_edc *_gaeb ;};func (_acf *Context )drawRegularPolygon (_dbd int ,_eace ,_ccf ,_ebc ,_gfed float64 ){_efb :=2*_b .Pi /float64 (_dbd );_gfed -=_b .Pi /2;
if _dbd %2==0{_gfed +=_efb /2;};_acf .NewSubPath ();for _ebe :=0;_ebe < _dbd ;_ebe ++{_bcaf :=_gfed +_efb *float64 (_ebe );_acf .LineTo (_eace +_ebc *_b .Cos (_bcaf ),_ccf +_ebc *_b .Sin (_bcaf ));};_acf .ClosePath ();};func (_fgcg *surfacePattern )ColorAt (x ,y int )_g .Color {_eeg :=_fgcg ._fdg .Bounds ();
switch _fgcg ._baf {case _fgac :if y >=_eeg .Dy (){return _g .Transparent ;};case _bdfc :if x >=_eeg .Dx (){return _g .Transparent ;};case _fcd :if x >=_eeg .Dx ()||y >=_eeg .Dy (){return _g .Transparent ;};};x =x %_eeg .Dx ()+_eeg .Min .X ;y =y %_eeg .Dy ()+_eeg .Min .Y ;
return _fgcg ._fdg .At (x ,y );};func (_eee *Context )SetFillRGBA (r ,g ,b ,a float64 ){_efab :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_eee ._agb =_efab ;_eee ._fda =_bcd (_efab );};func (_fgcc *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_fgcc .Translate (x ,y );
_fgcc .Scale (sx ,sy );_fgcc .Translate (-x ,-y );};func _cged (_cbac _f .Image )*_f .RGBA {_ffe :=_cbac .Bounds ();_bfa :=_f .NewRGBA (_ffe );_e .Draw (_bfa ,_ffe ,_cbac ,_ffe .Min ,_e .Src );return _bfa ;};func (_gaef *Context )DrawImage (im _f .Image ,x ,y int ){_gaef .DrawImageAnchored (im ,x ,y ,0,0)};
func (_cbd *linearGradient )AddColorStop (offset float64 ,color _g .Color ){_cbd ._bfbg =append (_cbd ._bfbg ,stop {_egaa :offset ,_ecf :color });_cf .Sort (_cbd ._bfbg );};func (_agba *Context )ClearPath (){_agba ._dfd .Clear ();_agba ._ad .Clear ();_agba ._gg =false };
func (_fb *Context )AsMask ()*_f .Alpha {_ggf :=_f .NewAlpha (_fb ._dffe .Bounds ());_acd .Draw (_ggf ,_fb ._dffe .Bounds (),_fb ._dffe ,_f .Point {},_acd .Src );return _ggf ;};func (_dge *Context )SetLineCap (lineCap _ce .LineCap ){_dge ._geb =lineCap };
func (_cgb *Context )Clip (){_cgb .ClipPreserve ();_cgb .ClearPath ()};func (_bb *Context )capper ()_eb .Capper {switch _bb ._geb {case _ce .LineCapButt :return _eb .ButtCapper ;case _ce .LineCapRound :return _eb .RoundCapper ;case _ce .LineCapSquare :return _eb .SquareCapper ;
};return nil ;};func _fgcf (_eggd [][]_cc .Point )_eb .Path {var _dbcd _eb .Path ;for _ ,_aaga :=range _eggd {var _fbec _d .Point26_6 ;for _ebb ,_gee :=range _aaga {_ggfb :=_bad (_gee );if _ebb ==0{_dbcd .Start (_ggfb );}else {_beac :=_ggfb .X -_fbec .X ;
_afac :=_ggfb .Y -_fbec .Y ;if _beac < 0{_beac =-_beac ;};if _afac < 0{_afac =-_afac ;};if _beac +_afac > 8{_dbcd .Add1 (_ggfb );};};_fbec =_ggfb ;};};return _dbcd ;};func _ed (_fd ,_bgc ,_ga ,_cge ,_cee ,_agc ,_aa ,_bgg float64 )[]_cc .Point {_bdf :=(_b .Hypot (_ga -_fd ,_cge -_bgc )+_b .Hypot (_cee -_ga ,_agc -_cge )+_b .Hypot (_aa -_cee ,_bgg -_agc ));
_agf :=int (_bdf +0.5);if _agf < 4{_agf =4;};_fa :=float64 (_agf )-1;_efg :=make ([]_cc .Point ,_agf );for _de :=0;_de < _agf ;_de ++{_gc :=float64 (_de )/_fa ;_edf ,_acb :=_cba (_fd ,_bgc ,_ga ,_cge ,_cee ,_agc ,_aa ,_bgg ,_gc );_efg [_de ]=_cc .NewPoint (_edf ,_acb );
};return _efg ;};func (_eab *Context )SetLineWidth (lineWidth float64 ){_eab ._dc =lineWidth };func (_aed *Context )Width ()int {return _aed ._acge };func NewContextForImage (im _f .Image )*Context {return NewContextForRGBA (_cged (im ))};func (_dacb *Context )Push (){_agbc :=*_dacb ;
_dacb ._gda =append (_dacb ._gda ,&_agbc )};func (_daaf *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _gae =16;for _ddg :=0;_ddg < _gae ;_ddg ++{_fggd :=float64 (_ddg +0)/_gae ;_aec :=float64 (_ddg +1)/_gae ;_egd :=angle1 +(angle2 -angle1 )*_fggd ;
_bfb :=angle1 +(angle2 -angle1 )*_aec ;_eadd :=x +rx *_b .Cos (_egd );_gdgf :=y +ry *_b .Sin (_egd );_bdg :=x +rx *_b .Cos ((_egd +_bfb )/2);_fge :=y +ry *_b .Sin ((_egd +_bfb )/2);_dbe :=x +rx *_b .Cos (_bfb );_gdbf :=y +ry *_b .Sin (_bfb );_dfbc :=2*_bdg -_eadd /2-_dbe /2;
_dged :=2*_fge -_gdgf /2-_gdbf /2;if _ddg ==0{if _daaf ._gg {_daaf .LineTo (_eadd ,_gdgf );}else {_daaf .MoveTo (_eadd ,_gdgf );};};_daaf .QuadraticTo (_dfbc ,_dged ,_dbe ,_gdbf );};};func (_cda *Context )ClosePath (){if _cda ._gg {_gdg :=_bad (_cda ._daf );
_cda ._dfd .Add1 (_gdg );_cda ._ad .Add1 (_gdg );_cda ._ae =_cda ._daf ;};};func (_aef *Context )SetRGB (r ,g ,b float64 ){_aef .SetRGBA (r ,g ,b ,1)};func (_gcbc *Context )Clear (){_cbb :=_f .NewUniform (_gcbc ._agb );_acd .Draw (_gcbc ._dffe ,_gcbc ._dffe .Bounds (),_cbb ,_f .Point {},_acd .Src );
};func _bad (_gcad _cc .Point )_d .Point26_6 {return _d .Point26_6 {X :_dagb (_gcad .X ),Y :_dagb (_gcad .Y )}};func _cbe (_ba ,_gb ,_cde ,_ca ,_cfb ,_caf ,_cfbe float64 )(_cg ,_ag float64 ){_ge :=1-_cfbe ;_cgg :=_ge *_ge ;_ee :=2*_ge *_cfbe ;_da :=_cfbe *_cfbe ;
_cg =_cgg *_ba +_ee *_cde +_da *_cfb ;_ag =_cgg *_gb +_ee *_ca +_da *_caf ;return ;};const (_gdfc repeatOp =iota ;_fgac ;_bdfc ;_fcd ;);type stop struct{_egaa float64 ;_ecf _g .Color ;};func _ffda (_cbc string )(_ddfe ,_caee ,_dcbf ,_bfcb int ){_cbc =_a .TrimPrefix (_cbc ,"\u0023");
_bfcb =255;if len (_cbc )==3{_bafd :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_ac .Sscanf (_cbc ,_bafd ,&_ddfe ,&_caee ,&_dcbf );_ddfe |=_ddfe <<4;_caee |=_caee <<4;_dcbf |=_dcbf <<4;};if len (_cbc )==6{_edcd :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_ac .Sscanf (_cbc ,_edcd ,&_ddfe ,&_caee ,&_dcbf );};if len (_cbc )==8{_dggb :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_ac .Sscanf (_cbc ,_dggb ,&_ddfe ,&_caee ,&_dcbf ,&_bfcb );};return ;};func (_gec *Context )DrawRectangle (x ,y ,w ,h float64 ){_gec .NewSubPath ();
_gec .MoveTo (x ,y );_gec .LineTo (x +w ,y );_gec .LineTo (x +w ,y +h );_gec .LineTo (x ,y +h );_gec .ClosePath ();};func (_deag *Context )Transform (x ,y float64 )(_fcabb ,_cdae float64 ){return _deag ._eaf .Transform (x ,y );};func (_aca *Context )DrawImageAnchored (im _f .Image ,x ,y int ,ax ,ay float64 ){_caa :=im .Bounds ().Size ();
x -=int (ax *float64 (_caa .X ));y -=int (ay *float64 (_caa .Y ));_bdgc :=_acd .BiLinear ;_add :=_aca ._eaf .Clone ().Translate (float64 (x ),float64 (y ));_baa :=_cd .Aff3 {_add [0],_add [3],_add [6],_add [1],_add [4],_add [7]};if _aca ._fde ==nil {_bdgc .Transform (_aca ._dffe ,_baa ,im ,im .Bounds (),_acd .Over ,nil );
}else {_bdgc .Transform (_aca ._dffe ,_baa ,im ,im .Bounds (),_acd .Over ,&_acd .Options {DstMask :_aca ._fde ,DstMaskP :_f .Point {}});};};func (_ccbc *radialGradient )ColorAt (x ,y int )_g .Color {if len (_ccbc ._dcc )==0{return _g .Transparent ;};_bcf ,_aagf :=float64 (x )+0.5-_ccbc ._bef ._fcbe ,float64 (y )+0.5-_ccbc ._bef ._cbfc ;
_fba :=_daag (_bcf ,_aagf ,_ccbc ._bef ._afc ,_ccbc ._ddfgg ._fcbe ,_ccbc ._ddfgg ._cbfc ,_ccbc ._ddfgg ._afc );_aadd :=_daag (_bcf ,_aagf ,-_ccbc ._bef ._afc ,_bcf ,_aagf ,_ccbc ._bef ._afc );if _ccbc ._caae ==0{if _fba ==0{return _g .Transparent ;};_cgbb :=0.5*_aadd /_fba ;
if _cgbb *_ccbc ._ddfgg ._afc >=_ccbc ._eaa {return _aeff (_cgbb ,_ccbc ._dcc );};return _g .Transparent ;};_dae :=_daag (_fba ,_ccbc ._caae ,0,_fba ,-_aadd ,0);if _dae >=0{_bcag :=_b .Sqrt (_dae );_bed :=(_fba +_bcag )*_ccbc ._efgd ;_gfd :=(_fba -_bcag )*_ccbc ._efgd ;
if _bed *_ccbc ._ddfgg ._afc >=_ccbc ._eaa {return _aeff (_bed ,_ccbc ._dcc );}else if _gfd *_ccbc ._ddfgg ._afc >=_ccbc ._eaa {return _aeff (_gfd ,_ccbc ._dcc );};};return _g .Transparent ;};func _edga (_ccgd _d .Int26_6 )float64 {const _gdeb ,_efee =6,1<<6-1;
if _ccgd >=0{return float64 (_ccgd >>_gdeb )+float64 (_ccgd &_efee )/64;};_ccgd =-_ccgd ;if _ccgd >=0{return -(float64 (_ccgd >>_gdeb )+float64 (_ccgd &_efee )/64);};return 0;};func (_fcb *Context )DrawStringAnchored (s string ,face _dg .Face ,x ,y ,ax ,ay float64 ){_bfea ,_beb :=_fcb .MeasureString (s ,face );
_fcb .drawString (s ,face ,x -ax *_bfea ,y +ay *_beb );};func (_ffa *Context )fill (_cff _eb .Painter ){_dcb :=_ffa ._ad ;if _ffa ._gg {_dcb =make (_eb .Path ,len (_ffa ._ad ));copy (_dcb ,_ffa ._ad );_dcb .Add1 (_bad (_ffa ._daf ));};_cec :=_ffa ._gf ;
_cec .UseNonZeroWinding =_ffa ._gff ==_ce .FillRuleWinding ;_cec .Clear ();_cec .AddPath (_dcb );_cec .Rasterize (_cff );};func (_fdd *Context )drawString (_cdfa string ,_bgf _dg .Face ,_gebb ,_bgfb float64 ){_gcag :=&_dg .Drawer {Src :_f .NewUniform (_fdd ._agb ),Face :_bgf ,Dot :_bad (_cc .NewPoint (_gebb ,_bgfb ))};
_gcdc :=rune (-1);for _ ,_deb :=range _cdfa {if _gcdc >=0{_gcag .Dot .X +=_gcag .Face .Kern (_gcdc ,_deb );};_bcafb ,_dbc ,_aecd ,_aaf ,_dac :=_gcag .Face .Glyph (_gcag .Dot ,_deb );if !_dac {continue ;};_fggf :=_bcafb .Sub (_bcafb .Min );_dcg :=_f .NewRGBA (_fggf );
_acd .DrawMask (_dcg ,_fggf ,_gcag .Src ,_f .Point {},_dbc ,_aecd ,_acd .Over );var _dcf *_acd .Options ;if _fdd ._fde !=nil {_dcf =&_acd .Options {DstMask :_fdd ._fde ,DstMaskP :_f .Point {}};};_bba :=_fdd ._eaf .Clone ().Translate (float64 (_bcafb .Min .X ),float64 (_bcafb .Min .Y ));
_bcba :=_cd .Aff3 {_bba [0],_bba [3],_bba [6],_bba [1],_bba [4],_bba [7]};_acd .BiLinear .Transform (_fdd ._dffe ,_bcba ,_dcg ,_fggf ,_acd .Over ,_dcf );_gcag .Dot .X +=_aaf ;_gcdc =_deb ;};};func (_ddf *Context )SetMask (mask *_f .Alpha )error {if mask .Bounds ().Size ()!=_ddf ._dffe .Bounds ().Size (){return _ab .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_ddf ._fde =mask ;return nil ;};func (_eadg stops )Swap (i ,j int ){_eadg [i ],_eadg [j ]=_eadg [j ],_eadg [i ]};func (_aag *Context )Stroke (){_aag .StrokePreserve ();_aag .ClearPath ()};func (_cga *Context )SetDash (dashes ...float64 ){_cga ._efa =dashes };
func (_gge *Context )Image ()_f .Image {return _gge ._dffe };func (_ffd *Context )SetFillRule (fillRule _ce .FillRule ){_ffd ._gff =fillRule };func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_ce .Gradient {_cgeg :=&linearGradient {_ddfg :x0 ,_acfg :y0 ,_dfa :x1 ,_ceda :y1 };
return _cgeg ;};func (_gadc *radialGradient )AddColorStop (offset float64 ,color _g .Color ){_gadc ._dcc =append (_gadc ._dcc ,stop {_egaa :offset ,_ecf :color });_cf .Sort (_gadc ._dcc );};func _bccc (_cecc float64 )float64 {return _cecc *_b .Pi /180};
func (_gca *Context )Fill (){_gca .FillPreserve ();_gca .ClearPath ()};func (_dec *solidPattern )ColorAt (x ,y int )_g .Color {return _dec ._fega };func (_cgcf *Context )LineWidth ()float64 {return _cgcf ._dc };type patternPainter struct{_cbbe *_f .RGBA ;
_bgbb *_f .Alpha ;_gbg _ce .Pattern ;};func (_eff *Context )Translate (x ,y float64 ){_eff ._eaf =_eff ._eaf .Translate (x ,y )};func (_deaa *Context )LineTo (x ,y float64 ){if !_deaa ._gg {_deaa .MoveTo (x ,y );}else {x ,y =_deaa .Transform (x ,y );_ecb :=_cc .NewPoint (x ,y );
_dd :=_bad (_ecb );_deaa ._dfd .Add1 (_dd );_deaa ._ad .Add1 (_dd );_deaa ._ae =_ecb ;};};type repeatOp int ;func (_bc *Context )SetRGBA (r ,g ,b ,a float64 ){_bc ._agb =_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_bc .setFillAndStrokeColor (_bc ._agb );
};func NewContext (width ,height int )*Context {return NewContextForRGBA (_f .NewRGBA (_f .Rect (0,0,width ,height )));};func (_efd *Context )ResetClip (){_efd ._fde =nil };func _bcd (_dgec _g .Color )_ce .Pattern {return &solidPattern {_fega :_dgec }};
func (_efbb stops )Less (i ,j int )bool {return _efbb [i ]._egaa < _efbb [j ]._egaa };func (_adc *Context )StrokePreserve (){var _aee _eb .Painter ;if _adc ._fde ==nil {if _eac ,_dafe :=_adc ._ageb .(*solidPattern );_dafe {_gfc :=_eb .NewRGBAPainter (_adc ._dffe );
_gfc .SetColor (_eac ._fega );_aee =_gfc ;};};if _aee ==nil {_aee =_bdcc (_adc ._dffe ,_adc ._fde ,_adc ._ageb );};_adc .stroke (_aee );};type stops []stop ;func (_bfce *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_agca ,_cbaf ,_dfe ,_bcb :=x ,x +r ,x +w -r ,x +w ;
_acgb ,_fca ,_fcab ,_aeg :=y ,y +r ,y +h -r ,y +h ;_bfce .NewSubPath ();_bfce .MoveTo (_cbaf ,_acgb );_bfce .LineTo (_dfe ,_acgb );_bfce .DrawArc (_dfe ,_fca ,r ,_bccc (270),_bccc (360));_bfce .LineTo (_bcb ,_fcab );_bfce .DrawArc (_dfe ,_fcab ,r ,_bccc (0),_bccc (90));
_bfce .LineTo (_cbaf ,_aeg );_bfce .DrawArc (_cbaf ,_fcab ,r ,_bccc (90),_bccc (180));_bfce .LineTo (_agca ,_fca );_bfce .DrawArc (_cbaf ,_fca ,r ,_bccc (180),_bccc (270));_bfce .ClosePath ();};func (_adg *Context )DrawString (s string ,face _dg .Face ,x ,y float64 ){_adg .DrawStringAnchored (s ,face ,x ,y ,0,0);
};func (_bfe *Context )SetLineJoin (lineJoin _ce .LineJoin ){_bfe ._acc =lineJoin };func (_gcg *Context )SetRGBA255 (r ,g ,b ,a int ){_gcg ._agb =_g .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_gcg .setFillAndStrokeColor (_gcg ._agb );};func (_ggc *Context )DrawCircle (x ,y ,r float64 ){_ggc .NewSubPath ();
_ggc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_ggc .ClosePath ();};func (_afbd *patternPainter )Paint (ss []_eb .Span ,done bool ){_cega :=_afbd ._cbbe .Bounds ();for _ ,_ebeb :=range ss {if _ebeb .Y < _cega .Min .Y {continue ;};if _ebeb .Y >=_cega .Max .Y {return ;
};if _ebeb .X0 < _cega .Min .X {_ebeb .X0 =_cega .Min .X ;};if _ebeb .X1 > _cega .Max .X {_ebeb .X1 =_cega .Max .X ;};if _ebeb .X0 >=_ebeb .X1 {continue ;};const _dccf =1<<16-1;_caec :=_ebeb .Y -_afbd ._cbbe .Rect .Min .Y ;_fcbf :=_ebeb .X0 -_afbd ._cbbe .Rect .Min .X ;
_effc :=(_ebeb .Y -_afbd ._cbbe .Rect .Min .Y )*_afbd ._cbbe .Stride +(_ebeb .X0 -_afbd ._cbbe .Rect .Min .X )*4;_cbbg :=_effc +(_ebeb .X1 -_ebeb .X0 )*4;for _eed ,_bgdd :=_effc ,_fcbf ;_eed < _cbbg ;_eed ,_bgdd =_eed +4,_bgdd +1{_cccc :=_ebeb .Alpha ;
if _afbd ._bgbb !=nil {_cccc =_cccc *uint32 (_afbd ._bgbb .AlphaAt (_bgdd ,_caec ).A )/255;if _cccc ==0{continue ;};};_afcf :=_afbd ._gbg .ColorAt (_bgdd ,_caec );_agg ,_aff ,_ddb ,_gaf :=_afcf .RGBA ();_fdfa :=uint32 (_afbd ._cbbe .Pix [_eed +0]);_eef :=uint32 (_afbd ._cbbe .Pix [_eed +1]);
_dcgf :=uint32 (_afbd ._cbbe .Pix [_eed +2]);_acfa :=uint32 (_afbd ._cbbe .Pix [_eed +3]);_dbf :=(_dccf -(_gaf *_cccc /_dccf ))*0x101;_afbd ._cbbe .Pix [_eed +0]=uint8 ((_fdfa *_dbf +_agg *_cccc )/_dccf >>8);_afbd ._cbbe .Pix [_eed +1]=uint8 ((_eef *_dbf +_aff *_cccc )/_dccf >>8);
_afbd ._cbbe .Pix [_eed +2]=uint8 ((_dcgf *_dbf +_ddb *_cccc )/_dccf >>8);_afbd ._cbbe .Pix [_eed +3]=uint8 ((_acfa *_dbf +_gaf *_cccc )/_dccf >>8);};};};func (_fcf *Context )RotateAbout (angle ,x ,y float64 ){_fcf .Translate (x ,y );_fcf .Rotate (angle );
_fcf .Translate (-x ,-y );};func (_fed *Context )SetDashOffset (offset float64 ){_fed ._edb =offset };func (_efae *linearGradient )ColorAt (x ,y int )_g .Color {if len (_efae ._bfbg )==0{return _g .Transparent ;};_dad ,_dab :=float64 (x ),float64 (y );
_ceg ,_ceb ,_aad ,_cebb :=_efae ._ddfg ,_efae ._acfg ,_efae ._dfa ,_efae ._ceda ;_fdfb ,_aafc :=_aad -_ceg ,_cebb -_ceb ;if _aafc ==0&&_fdfb !=0{return _aeff ((_dad -_ceg )/_fdfb ,_efae ._bfbg );};if _fdfb ==0&&_aafc !=0{return _aeff ((_dab -_ceb )/_aafc ,_efae ._bfbg );
};_abf :=_fdfb *(_dad -_ceg )+_aafc *(_dab -_ceb );if _abf < 0{return _efae ._bfbg [0]._ecf ;};_gdeg :=_b .Hypot (_fdfb ,_aafc );_fgec :=((_dad -_ceg )*-_aafc +(_dab -_ceb )*_fdfb )/(_gdeg *_gdeg );_egb ,_fagc :=_ceg +_fgec *-_aafc ,_ceb +_fgec *_fdfb ;
_bccf :=_b .Hypot (_dad -_egb ,_dab -_fagc )/_gdeg ;return _aeff (_bccf ,_efae ._bfbg );};func (_fgd *Context )FillPreserve (){var _ccd _eb .Painter ;if _fgd ._fde ==nil {if _bbb ,_bbd :=_fgd ._fda .(*solidPattern );_bbd {_egg :=_eb .NewRGBAPainter (_fgd ._dffe );
_egg .SetColor (_bbb ._fega );_ccd =_egg ;};};if _ccd ==nil {_ccd =_bdcc (_fgd ._dffe ,_fgd ._fde ,_fgd ._fda );};_fgd .fill (_ccd );};func (_bge *Context )MoveTo (x ,y float64 ){if _bge ._gg {_bge ._ad .Add1 (_bad (_bge ._daf ));};x ,y =_bge .Transform (x ,y );
_gad :=_cc .NewPoint (x ,y );_bea :=_bad (_gad );_bge ._dfd .Start (_bea );_bge ._ad .Start (_bea );_bge ._daf =_gad ;_bge ._ae =_gad ;_bge ._gg =true ;};func (_bdd *Context )Pop (){_eead :=*_bdd ;_cecb :=_bdd ._gda ;_gfca :=_cecb [len (_cecb )-1];*_bdd =*_gfca ;
_bdd ._dfd =_eead ._dfd ;_bdd ._ad =_eead ._ad ;_bdd ._daf =_eead ._daf ;_bdd ._ae =_eead ._ae ;_bdd ._gg =_eead ._gg ;};func (_agcb *Context )FillPattern ()_ce .Pattern {return _agcb ._fda };func _geca (_cfaa _eb .Path )[][]_cc .Point {var _ccba [][]_cc .Point ;
var _bag []_cc .Point ;var _eggf ,_cgd float64 ;for _ebee :=0;_ebee < len (_cfaa );{switch _cfaa [_ebee ]{case 0:if len (_bag )> 0{_ccba =append (_ccba ,_bag );_bag =nil ;};_acag :=_edga (_cfaa [_ebee +1]);_ddcd :=_edga (_cfaa [_ebee +2]);_bag =append (_bag ,_cc .NewPoint (_acag ,_ddcd ));
_eggf ,_cgd =_acag ,_ddcd ;_ebee +=4;case 1:_gdba :=_edga (_cfaa [_ebee +1]);_beba :=_edga (_cfaa [_ebee +2]);_bag =append (_bag ,_cc .NewPoint (_gdba ,_beba ));_eggf ,_cgd =_gdba ,_beba ;_ebee +=4;case 2:_dag :=_edga (_cfaa [_ebee +1]);_bgec :=_edga (_cfaa [_ebee +2]);
_ecg :=_edga (_cfaa [_ebee +3]);_fbe :=_edga (_cfaa [_ebee +4]);_acdb :=_ebd (_eggf ,_cgd ,_dag ,_bgec ,_ecg ,_fbe );_bag =append (_bag ,_acdb ...);_eggf ,_cgd =_ecg ,_fbe ;_ebee +=6;case 3:_dabf :=_edga (_cfaa [_ebee +1]);_bfg :=_edga (_cfaa [_ebee +2]);
_gbe :=_edga (_cfaa [_ebee +3]);_gcfd :=_edga (_cfaa [_ebee +4]);_bgef :=_edga (_cfaa [_ebee +5]);_dbg :=_edga (_cfaa [_ebee +6]);_eeb :=_ed (_eggf ,_cgd ,_dabf ,_bfg ,_gbe ,_gcfd ,_bgef ,_dbg );_bag =append (_bag ,_eeb ...);_eggf ,_cgd =_bgef ,_dbg ;_ebee +=8;
default:_cb .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_cfaa );return _ccba ;};};if len (_bag )> 0{_ccba =append (_ccba ,_bag );};return _ccba ;};type radialGradient struct{_bef ,_fcg ,_ddfgg circle ;
_caae ,_efgd float64 ;_eaa float64 ;_dcc stops ;};func _debb (_fgf _eb .Path ,_fac []float64 ,_afe float64 )_eb .Path {return _fgcf (_abg (_geca (_fgf ),_fac ,_afe ));};func (_bcg *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_bcg ._gg {_bcg .MoveTo (x1 ,y1 );
};x1 ,y1 =_bcg .Transform (x1 ,y1 );x2 ,y2 =_bcg .Transform (x2 ,y2 );_ecd :=_cc .NewPoint (x1 ,y1 );_abe :=_cc .NewPoint (x2 ,y2 );_efabe :=_bad (_ecd );_afd :=_bad (_abe );_bcg ._dfd .Add2 (_efabe ,_afd );_bcg ._ad .Add2 (_efabe ,_afd );_bcg ._ae =_abe ;
};func _bdcc (_baad *_f .RGBA ,_fab *_f .Alpha ,_aagg _ce .Pattern )*patternPainter {return &patternPainter {_baad ,_fab ,_aagg };};func _aeff (_deace float64 ,_gdgb stops )_g .Color {if _deace <=0.0||len (_gdgb )==1{return _gdgb [0]._ecf ;};_fea :=_gdgb [len (_gdgb )-1];
if _deace >=_fea ._egaa {return _fea ._ecf ;};for _feg ,_cbea :=range _gdgb [1:]{if _deace < _cbea ._egaa {_deace =(_deace -_gdgb [_feg ]._egaa )/(_cbea ._egaa -_gdgb [_feg ]._egaa );return _gebe (_gdgb [_feg ]._ecf ,_cbea ._ecf ,_deace );};};return _fea ._ecf ;
};func (_acce *Context )SetPixel (x ,y int ){_acce ._dffe .Set (x ,y ,_acce ._agb )};func (_bbdf *Context )Rotate (angle float64 ){_bbdf ._eaf =_bbdf ._eaf .Rotate (angle )};var (_ead =_bcd (_g .White );_ccb =_bcd (_g .Black ););func (_gbf *Context )ShearAbout (sx ,sy ,x ,y float64 ){_gbf .Translate (x ,y );
_gbf .Shear (sx ,sy );_gbf .Translate (-x ,-y );};func (_dde *Context )MeasureString (s string ,face _dg .Face )(_bcc ,_ddc float64 ){_faf :=&_dg .Drawer {Face :face };_ede :=_faf .MeasureString (s );return float64 (_ede >>6),_dde ._daa .Tf .Size ;};type Context struct{_acge int ;
_bdc int ;_gf *_eb .Rasterizer ;_dffe *_f .RGBA ;_fde *_f .Alpha ;_agb _g .Color ;_fda _ce .Pattern ;_ageb _ce .Pattern ;_dfd _eb .Path ;_ad _eb .Path ;_daf _cc .Point ;_ae _cc .Point ;_gg bool ;_efa []float64 ;_edb float64 ;_dc float64 ;_geb _ce .LineCap ;
_acc _ce .LineJoin ;_gff _ce .FillRule ;_eaf _cc .Matrix ;_daa _ce .TextState ;_gda []*Context ;};func _cba (_eba ,_be ,_eea ,_df ,_age ,_gef ,_afb ,_cfe ,_agd float64 )(_eec ,_fga float64 ){_cgc :=1-_agd ;_gd :=_cgc *_cgc *_cgc ;_dff :=3*_cgc *_cgc *_agd ;
_ef :=3*_cgc *_agd *_agd ;_ccg :=_agd *_agd *_agd ;_eec =_gd *_eba +_dff *_eea +_ef *_age +_ccg *_afb ;_fga =_gd *_be +_dff *_df +_ef *_gef +_ccg *_cfe ;return ;};func (_fag *Context )Identity (){_fag ._eaf =_cc .IdentityMatrix ()};func (_bga *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gfg :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_bga ._ageb =_bcd (_gfg );};func (_dea *Context )setFillAndStrokeColor (_abc _g .Color ){_dea ._agb =_abc ;_dea ._fda =_bcd (_abc );_dea ._ageb =_bcd (_abc );};func (_bca *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_bca ._gg {_bca .MoveTo (x1 ,y1 );
};_gde ,_dfc :=_bca ._ae .X ,_bca ._ae .Y ;x1 ,y1 =_bca .Transform (x1 ,y1 );x2 ,y2 =_bca .Transform (x2 ,y2 );x3 ,y3 =_bca .Transform (x3 ,y3 );_agff :=_ed (_gde ,_dfc ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_ged :=_bad (_bca ._ae );for _ ,_afa :=range _agff [1:]{_dffb :=_bad (_afa );
if _dffb ==_ged {continue ;};_ged =_dffb ;_bca ._dfd .Add1 (_dffb );_bca ._ad .Add1 (_dffb );_bca ._ae =_afa ;};};func (_ec *Context )StrokePattern ()_ce .Pattern {return _ec ._ageb };func (_ffb *Context )ClipPreserve (){_bfc :=_f .NewAlpha (_f .Rect (0,0,_ffb ._acge ,_ffb ._bdc ));
_bgd :=_eb .NewAlphaOverPainter (_bfc );_ffb .fill (_bgd );if _ffb ._fde ==nil {_ffb ._fde =_bfc ;}else {_cca :=_f .NewAlpha (_f .Rect (0,0,_ffb ._acge ,_ffb ._bdc ));_acd .DrawMask (_cca ,_cca .Bounds (),_bfc ,_f .Point {},_ffb ._fde ,_f .Point {},_acd .Over );
_ffb ._fde =_cca ;};};func (_gbab *Context )Scale (x ,y float64 ){_gbab ._eaf =_gbab ._eaf .Scale (x ,y )};func (_dcd *Context )SetStrokeStyle (pattern _ce .Pattern ){_dcd ._ageb =pattern };