//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_fa "encoding/binary";_fc "errors";_ff "fmt";_caf "golang/unipdf/common";_fad "golang/unipdf/internal/bitwise";_ce "golang/unipdf/internal/jbig2/basic";_e "golang/unipdf/internal/jbig2/bitmap";
_dd "golang/unipdf/internal/jbig2/decoder/arithmetic";_ca "golang/unipdf/internal/jbig2/decoder/huffman";_cd "golang/unipdf/internal/jbig2/decoder/mmr";_dc "golang/unipdf/internal/jbig2/encoder/arithmetic";
_cg "golang/unipdf/internal/jbig2/errors";_ffb "golang/unipdf/internal/jbig2/internal";_bb "golang.org/x/xerrors";_f "image";_a "io";_cb "math";_d "strings";_b "time";);func (_eeb *SymbolDictionary )parseHeader ()(_gaaad error ){_caf .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gaaad !=nil {_caf .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gaaad );
}else {_caf .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gaaad =_eeb .readRegionFlags ();_gaaad !=nil {return _gaaad ;};if _gaaad =_eeb .setAtPixels ();_gaaad !=nil {return _gaaad ;};if _gaaad =_eeb .setRefinementAtPixels ();_gaaad !=nil {return _gaaad ;};if _gaaad =_eeb .readNumberOfExportedSymbols ();
_gaaad !=nil {return _gaaad ;};if _gaaad =_eeb .readNumberOfNewSymbols ();_gaaad !=nil {return _gaaad ;};if _gaaad =_eeb .setInSyms ();_gaaad !=nil {return _gaaad ;};if _eeb ._ggca {_fecb :=_eeb .Header .RTSegments ;for _faddc :=len (_fecb )-1;_faddc >=0;
_faddc --{if _fecb [_faddc ].Type ==0{_abcc ,_eeeb :=_fecb [_faddc ].SegmentData .(*SymbolDictionary );if !_eeeb {_gaaad =_ff .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fecb [_faddc ]);
return _gaaad ;};if _abcc ._ggca {_eeb .setRetainedCodingContexts (_abcc );};break ;};};};if _gaaad =_eeb .checkInput ();_gaaad !=nil {return _gaaad ;};return nil ;};func (_dead *TextRegion )readUseRefinement ()error {if !_dead .UseRefinement ||_dead .SbrTemplate !=0{return nil ;
};var (_eagcd byte ;_dbfda error ;);_dead .SbrATX =make ([]int8 ,2);_dead .SbrATY =make ([]int8 ,2);_eagcd ,_dbfda =_dead ._eadg .ReadByte ();if _dbfda !=nil {return _dbfda ;};_dead .SbrATX [0]=int8 (_eagcd );_eagcd ,_dbfda =_dead ._eadg .ReadByte ();if _dbfda !=nil {return _dbfda ;
};_dead .SbrATY [0]=int8 (_eagcd );_eagcd ,_dbfda =_dead ._eadg .ReadByte ();if _dbfda !=nil {return _dbfda ;};_dead .SbrATX [1]=int8 (_eagcd );_eagcd ,_dbfda =_dead ._eadg .ReadByte ();if _dbfda !=nil {return _dbfda ;};_dead .SbrATY [1]=int8 (_eagcd );
return nil ;};func (_adf *TextRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _adf .RegionBitmap !=nil {return _adf .RegionBitmap ,nil ;};if !_adf .IsHuffmanEncoded {if _dgac :=_adf .setCodingStatistics ();_dgac !=nil {return nil ,_dgac ;};};if _cffa :=_adf .createRegionBitmap ();
_cffa !=nil {return nil ,_cffa ;};if _dffa :=_adf .decodeSymbolInstances ();_dffa !=nil {return nil ,_dffa ;};return _adf .RegionBitmap ,nil ;};func (_eca *GenericRegion )decodeTemplate1 (_cabe ,_agc ,_dgge int ,_gfd ,_gegd int )(_efd error ){const _cce ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_cceg ,_bfb int ;_ggce ,_abbe int ;_cbd byte ;_facg ,_ccb int ;);if _cabe >=1{_cbd ,_efd =_eca .Bitmap .GetByte (_gegd );if _efd !=nil {return _cg .Wrap (_efd ,_cce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggce =int (_cbd );};if _cabe >=2{_cbd ,_efd =_eca .Bitmap .GetByte (_gegd -_eca .Bitmap .RowStride );
if _efd !=nil {return _cg .Wrap (_efd ,_cce ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_abbe =int (_cbd )<<5;};_cceg =((_ggce >>1)&0x1f8)|((_abbe >>1)&0x1e00);for _eba :=0;_eba < _dgge ;_eba =_facg {var (_caa byte ;_bcbc int ;);_facg =_eba +8;if _gca :=_agc -_eba ;
_gca > 8{_bcbc =8;}else {_bcbc =_gca ;};if _cabe > 0{_ggce <<=8;if _facg < _agc {_cbd ,_efd =_eca .Bitmap .GetByte (_gegd +1);if _efd !=nil {return _cg .Wrap (_efd ,_cce ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ggce |=int (_cbd );};};if _cabe > 1{_abbe <<=8;
if _facg < _agc {_cbd ,_efd =_eca .Bitmap .GetByte (_gegd -_eca .Bitmap .RowStride +1);if _efd !=nil {return _cg .Wrap (_efd ,_cce ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_abbe |=int (_cbd )<<5;};};for _bgge :=0;_bgge < _bcbc ;_bgge ++{if _eca ._adb {_bfb =_eca .overrideAtTemplate1 (_cceg ,_eba +_bgge ,_cabe ,int (_caa ),_bgge );
_eca ._geg .SetIndex (int32 (_bfb ));}else {_eca ._geg .SetIndex (int32 (_cceg ));};_ccb ,_efd =_eca ._fbc .DecodeBit (_eca ._geg );if _efd !=nil {return _cg .Wrap (_efd ,_cce ,"");};_caa |=byte (_ccb )<<uint (7-_bgge );_cdcg :=uint (8-_bgge );_cceg =((_cceg &0xefb)<<1)|_ccb |((_ggce >>_cdcg )&0x8)|((_abbe >>_cdcg )&0x200);
};if _aebdg :=_eca .Bitmap .SetByte (_gfd ,_caa );_aebdg !=nil {return _cg .Wrap (_aebdg ,_cce ,"");};_gfd ++;_gegd ++;};return nil ;};func (_eccg *SymbolDictionary )decodeRefinedSymbol (_aadb ,_gaedg uint32 )error {var (_bfebd int ;_afaf ,_fbaa int32 ;
);if _eccg .IsHuffmanEncoded {_dfeb ,_aaac :=_eccg ._afcf .ReadBits (byte (_eccg ._dbadb ));if _aaac !=nil {return _aaac ;};_bfebd =int (_dfeb );_dcbe ,_aaac :=_ca .GetStandardTable (15);if _aaac !=nil {return _aaac ;};_cfce ,_aaac :=_dcbe .Decode (_eccg ._afcf );
if _aaac !=nil {return _aaac ;};_afaf =int32 (_cfce );_cfce ,_aaac =_dcbe .Decode (_eccg ._afcf );if _aaac !=nil {return _aaac ;};_fbaa =int32 (_cfce );_dcbe ,_aaac =_ca .GetStandardTable (1);if _aaac !=nil {return _aaac ;};if _ ,_aaac =_dcbe .Decode (_eccg ._afcf );
_aaac !=nil {return _aaac ;};_eccg ._afcf .Align ();}else {_ebegg ,_cdea :=_eccg ._fbb .DecodeIAID (uint64 (_eccg ._dbadb ),_eccg ._age );if _cdea !=nil {return _cdea ;};_bfebd =int (_ebegg );_afaf ,_cdea =_eccg ._fbb .DecodeInt (_eccg ._eeag );if _cdea !=nil {return _cdea ;
};_fbaa ,_cdea =_eccg ._fbb .DecodeInt (_eccg ._eeeg );if _cdea !=nil {return _cdea ;};};if _dddc :=_eccg .setSymbolsArray ();_dddc !=nil {return _dddc ;};_gbbdd :=_eccg ._gebe [_bfebd ];if _affd :=_eccg .decodeNewSymbols (_aadb ,_gaedg ,_gbbdd ,_afaf ,_fbaa );
_affd !=nil {return _affd ;};if _eccg .IsHuffmanEncoded {_eccg ._afcf .Align ();};return nil ;};func (_cgb *GenericRegion )Size ()int {return _cgb .RegionSegment .Size ()+1+2*len (_cgb .GBAtX )};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;
PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_fad .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_bgec *GenericRefinementRegion )readAtPixels ()error {_bgec .GrAtX =make ([]int8 ,2);
_bgec .GrAtY =make ([]int8 ,2);_ceec ,_ccca :=_bgec ._cf .ReadByte ();if _ccca !=nil {return _ccca ;};_bgec .GrAtX [0]=int8 (_ceec );_ceec ,_ccca =_bgec ._cf .ReadByte ();if _ccca !=nil {return _ccca ;};_bgec .GrAtY [0]=int8 (_ceec );_ceec ,_ccca =_bgec ._cf .ReadByte ();
if _ccca !=nil {return _ccca ;};_bgec .GrAtX [1]=int8 (_ceec );_ceec ,_ccca =_bgec ._cf .ReadByte ();if _ccca !=nil {return _ccca ;};_bgec .GrAtY [1]=int8 (_ceec );return nil ;};func (_gecf *GenericRefinementRegion )updateOverride ()error {if _gecf .GrAtX ==nil ||_gecf .GrAtY ==nil {return _fc .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_gecf .GrAtX )!=len (_gecf .GrAtY ){return _fc .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_gecf ._cac =make ([]bool ,len (_gecf .GrAtX ));switch _gecf .TemplateID {case 0:if _gecf .GrAtX [0]!=-1&&_gecf .GrAtY [0]!=-1{_gecf ._cac [0]=true ;
_gecf ._gd =true ;};if _gecf .GrAtX [1]!=-1&&_gecf .GrAtY [1]!=-1{_gecf ._cac [1]=true ;_gecf ._gd =true ;};case 1:_gecf ._gd =false ;};return nil ;};func (_agbb *TextRegion )initSymbols ()error {const _dfba ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_cggd :=range _agbb .Header .RTSegments {if _cggd ==nil {return _cg .Error (_dfba ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _cggd .Type ==0{_adad ,_baef :=_cggd .GetSegmentData ();if _baef !=nil {return _cg .Wrap (_baef ,_dfba ,"");};_ccgec ,_feda :=_adad .(*SymbolDictionary );if !_feda {return _cg .Error (_dfba ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_ccgec ._age =_agbb ._gff ;_fgef ,_baef :=_ccgec .GetDictionary ();if _baef !=nil {return _cg .Wrap (_baef ,_dfba ,"");};_agbb .Symbols =append (_agbb .Symbols ,_fgef ...);};};_agbb .NumberOfSymbols =uint32 (len (_agbb .Symbols ));return nil ;};func (_gbabf *SymbolDictionary )readNumberOfNewSymbols ()error {_acda ,_gfad :=_gbabf ._afcf .ReadBits (32);
if _gfad !=nil {return _gfad ;};_gbabf .NumberOfNewSymbols =uint32 (_acda &_cb .MaxUint32 );return nil ;};func (_faeb *HalftoneRegion )computeX (_gcfd ,_aadc int )int {return _faeb .shiftAndFill (int (_faeb .HGridX )+_gcfd *int (_faeb .HRegionY )+_aadc *int (_faeb .HRegionX ));
};func (_ffdf *PatternDictionary )GetDictionary ()([]*_e .Bitmap ,error ){if _ffdf .Patterns !=nil {return _ffdf .Patterns ,nil ;};if !_ffdf .IsMMREncoded {_ffdf .setGbAtPixels ();};_dedc :=NewGenericRegion (_ffdf ._ddgc );_dedc .setParametersMMR (_ffdf .IsMMREncoded ,_ffdf .DataOffset ,_ffdf .DataLength ,uint32 (_ffdf .HdpHeight ),(_ffdf .GrayMax +1)*uint32 (_ffdf .HdpWidth ),_ffdf .HDTemplate ,false ,false ,_ffdf .GBAtX ,_ffdf .GBAtY );
_bddc ,_fafd :=_dedc .GetRegionBitmap ();if _fafd !=nil {return nil ,_fafd ;};if _fafd =_ffdf .extractPatterns (_bddc );_fafd !=nil {return nil ,_fafd ;};return _ffdf .Patterns ,nil ;};func (_gccc *SymbolDictionary )getSymbol (_gbgf int )(*_e .Bitmap ,error ){const _bggf ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_acfaf ,_aedbf :=_gccc ._fbdf .GetBitmap (_gccc ._adcd [_gbgf ]);if _aedbf !=nil {return nil ,_cg .Wrap (_aedbf ,_bggf ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _acfaf ,nil ;};func (_fbagb *SymbolDictionary )setRefinementAtPixels ()error {if !_fbagb .UseRefinementAggregation ||_fbagb .SdrTemplate !=0{return nil ;
};if _bgbg :=_fbagb .readRefinementAtPixels (2);_bgbg !=nil {return _bgbg ;};return nil ;};func (_fdf *Header )writeReferredToCount (_ddd _fad .BinaryWriter )(_adgb int ,_fdfa error ){const _efce ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_fdf .RTSNumbers =make ([]int ,len (_fdf .RTSegments ));for _fcga ,_cceb :=range _fdf .RTSegments {_fdf .RTSNumbers [_fcga ]=int (_cceb .SegmentNumber );};if len (_fdf .RTSNumbers )<=4{var _adcgg byte ;if len (_fdf .RetainBits )>=1{_adcgg =_fdf .RetainBits [0];
};_adcgg |=byte (len (_fdf .RTSNumbers ))<<5;if _fdfa =_ddd .WriteByte (_adcgg );_fdfa !=nil {return 0,_cg .Wrap (_fdfa ,_efce ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_egfb :=uint32 (len (_fdf .RTSNumbers ));
_acfe :=make ([]byte ,4+_ce .Ceil (len (_fdf .RTSNumbers )+1,8));_egfb |=0x7<<29;_fa .BigEndian .PutUint32 (_acfe ,_egfb );copy (_acfe [1:],_fdf .RetainBits );_adgb ,_fdfa =_ddd .Write (_acfe );if _fdfa !=nil {return 0,_cg .Wrap (_fdfa ,_efce ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _adgb ,nil ;};func (_bbe *GenericRegion )readGBAtPixels (_gdc int )error {const _cgc ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_bbe .GBAtX =make ([]int8 ,_gdc );_bbe .GBAtY =make ([]int8 ,_gdc );for _fdc :=0;
_fdc < _gdc ;_fdc ++{_cdeg ,_bage :=_bbe ._edg .ReadByte ();if _bage !=nil {return _cg .Wrapf (_bage ,_cgc ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fdc );};_bbe .GBAtX [_fdc ]=int8 (_cdeg );_cdeg ,_bage =_bbe ._edg .ReadByte ();
if _bage !=nil {return _cg .Wrapf (_bage ,_cgc ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fdc );};_bbe .GBAtY [_fdc ]=int8 (_cdeg );};return nil ;};var _ templater =&template0 {};func (_ccgf *GenericRegion )setParameters (_fea bool ,_abba ,_dffg int64 ,_edbc ,_affg uint32 ){_ccgf .IsMMREncoded =_fea ;
_ccgf .DataOffset =_abba ;_ccgf .DataLength =_dffg ;_ccgf .RegionSegment .BitmapHeight =_edbc ;_ccgf .RegionSegment .BitmapWidth =_affg ;_ccgf ._gdg =nil ;_ccgf .Bitmap =nil ;};func (_bbg *SymbolDictionary )setCodingStatistics ()error {if _bbg ._bfdd ==nil {_bbg ._bfdd =_dd .NewStats (512,1);
};if _bbg ._dagb ==nil {_bbg ._dagb =_dd .NewStats (512,1);};if _bbg ._afeb ==nil {_bbg ._afeb =_dd .NewStats (512,1);};if _bbg ._fbag ==nil {_bbg ._fbag =_dd .NewStats (512,1);};if _bbg ._bfcea ==nil {_bbg ._bfcea =_dd .NewStats (512,1);};if _bbg .UseRefinementAggregation &&_bbg ._age ==nil {_bbg ._age =_dd .NewStats (1<<uint (_bbg ._dbadb ),1);
_bbg ._eeag =_dd .NewStats (512,1);_bbg ._eeeg =_dd .NewStats (512,1);};if _bbg ._bfde ==nil {_bbg ._bfde =_dd .NewStats (65536,1);};if _bbg ._fbb ==nil {var _adbdd error ;_bbg ._fbb ,_adbdd =_dd .New (_bbg ._afcf );if _adbdd !=nil {return _adbdd ;};};
return nil ;};func (_gaba *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gaba .RegionSegment };func (_gbgbe *TextRegion )decodeRdh ()(int64 ,error ){const _fded ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _gbgbe .IsHuffmanEncoded {if _gbgbe .SbHuffRDHeight ==3{if _gbgbe ._gdee ==nil {var (_fcaa int ;
_ccgef error ;);if _gbgbe .SbHuffFS ==3{_fcaa ++;};if _gbgbe .SbHuffDS ==3{_fcaa ++;};if _gbgbe .SbHuffDT ==3{_fcaa ++;};if _gbgbe .SbHuffRDWidth ==3{_fcaa ++;};_gbgbe ._gdee ,_ccgef =_gbgbe .getUserTable (_fcaa );if _ccgef !=nil {return 0,_cg .Wrap (_ccgef ,_fded ,"");
};};return _gbgbe ._gdee .Decode (_gbgbe ._eadg );};_edge ,_faae :=_ca .GetStandardTable (14+int (_gbgbe .SbHuffRDHeight ));if _faae !=nil {return 0,_cg .Wrap (_faae ,_fded ,"");};return _edge .Decode (_gbgbe ._eadg );};_bacd ,_dbgb :=_gbgbe ._ggfc .DecodeInt (_gbgbe ._fcfg );
if _dbgb !=nil {return 0,_cg .Wrap (_dbgb ,_fded ,"");};return int64 (_bacd ),nil ;};func (_dadg *SymbolDictionary )decodeThroughTextRegion (_fafc ,_eegg ,_bfbbc uint32 )error {if _dadg ._dggff ==nil {_dadg ._dggff =_bgeg (_dadg ._afcf ,nil );_dadg ._dggff .setContexts (_dadg ._bfde ,_dd .NewStats (512,1),_dd .NewStats (512,1),_dd .NewStats (512,1),_dd .NewStats (512,1),_dadg ._age ,_dd .NewStats (512,1),_dd .NewStats (512,1),_dd .NewStats (512,1),_dd .NewStats (512,1));
};if _bffgb :=_dadg .setSymbolsArray ();_bffgb !=nil {return _bffgb ;};_dadg ._dggff .setParameters (_dadg ._fbb ,_dadg .IsHuffmanEncoded ,true ,_fafc ,_eegg ,_bfbbc ,1,_dadg ._cgaa +_dadg ._aaa ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dadg .SdrTemplate ,_dadg .SdrATX ,_dadg .SdrATY ,_dadg ._gebe ,_dadg ._dbadb );
return _dadg .addSymbol (_dadg ._dggff );};func (_bgd *GenericRegion )decodeTemplate2 (_gea ,_cdae ,_beba int ,_gfge ,_gba int )(_geb error ){const _bgecc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_eag ,_bfba int ;
_afa ,_ccg int ;_edgg byte ;_baf ,_gef int ;);if _gea >=1{_edgg ,_geb =_bgd .Bitmap .GetByte (_gba );if _geb !=nil {return _cg .Wrap (_geb ,_bgecc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_afa =int (_edgg );
};if _gea >=2{_edgg ,_geb =_bgd .Bitmap .GetByte (_gba -_bgd .Bitmap .RowStride );if _geb !=nil {return _cg .Wrap (_geb ,_bgecc ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ccg =int (_edgg )<<4;};_eag =(_afa >>3&0x7c)|(_ccg >>3&0x380);
for _daeg :=0;_daeg < _beba ;_daeg =_baf {var (_ebcc byte ;_bbce int ;);_baf =_daeg +8;if _aedb :=_cdae -_daeg ;_aedb > 8{_bbce =8;}else {_bbce =_aedb ;};if _gea > 0{_afa <<=8;if _baf < _cdae {_edgg ,_geb =_bgd .Bitmap .GetByte (_gba +1);if _geb !=nil {return _cg .Wrap (_geb ,_bgecc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");
};_afa |=int (_edgg );};};if _gea > 1{_ccg <<=8;if _baf < _cdae {_edgg ,_geb =_bgd .Bitmap .GetByte (_gba -_bgd .Bitmap .RowStride +1);if _geb !=nil {return _cg .Wrap (_geb ,_bgecc ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");
};_ccg |=int (_edgg )<<4;};};for _cae :=0;_cae < _bbce ;_cae ++{_aff :=uint (10-_cae );if _bgd ._adb {_bfba =_bgd .overrideAtTemplate2 (_eag ,_daeg +_cae ,_gea ,int (_ebcc ),_cae );_bgd ._geg .SetIndex (int32 (_bfba ));}else {_bgd ._geg .SetIndex (int32 (_eag ));
};_gef ,_geb =_bgd ._fbc .DecodeBit (_bgd ._geg );if _geb !=nil {return _cg .Wrap (_geb ,_bgecc ,"");};_ebcc |=byte (_gef <<uint (7-_cae ));_eag =((_eag &0x1bd)<<1)|_gef |((_afa >>_aff )&0x4)|((_ccg >>_aff )&0x80);};if _gac :=_bgd .Bitmap .SetByte (_gfge ,_ebcc );
_gac !=nil {return _cg .Wrap (_gac ,_bgecc ,"");};_gfge ++;_gba ++;};return nil ;};func (_efc *HalftoneRegion )shiftAndFill (_bbcb int )int {_bbcb >>=8;if _bbcb < 0{_geac :=int (_cb .Log (float64 (_abgg (_bbcb )))/_cb .Log (2));_fbd :=31-_geac ;for _egbee :=1;
_egbee < _fbd ;_egbee ++{_bbcb |=1<<uint (31-_egbee );};};return _bbcb ;};func (_efb *GenericRegion )computeSegmentDataStructure ()error {_efb .DataOffset =_efb ._edg .AbsolutePosition ();_efb .DataHeaderLength =_efb .DataOffset -_efb .DataHeaderOffset ;
_efb .DataLength =int64 (_efb ._edg .AbsoluteLength ())-_efb .DataHeaderLength ;return nil ;};func _abgg (_fec int )int {if _fec ==0{return 0;};_fec |=_fec >>1;_fec |=_fec >>2;_fec |=_fec >>4;_fec |=_fec >>8;_fec |=_fec >>16;return (_fec +1)>>1;};const (ORandom OrganizationType =iota ;
OSequential ;);func (_dddb *TextRegion )blit (_bfeg *_e .Bitmap ,_cdag int64 )error {if _dddb .IsTransposed ==0&&(_dddb .ReferenceCorner ==2||_dddb .ReferenceCorner ==3){_dddb ._gggf +=int64 (_bfeg .Width -1);}else if _dddb .IsTransposed ==1&&(_dddb .ReferenceCorner ==0||_dddb .ReferenceCorner ==2){_dddb ._gggf +=int64 (_bfeg .Height -1);
};_cfbg :=_dddb ._gggf ;if _dddb .IsTransposed ==1{_cfbg ,_cdag =_cdag ,_cfbg ;};switch _dddb .ReferenceCorner {case 0:_cdag -=int64 (_bfeg .Height -1);case 2:_cdag -=int64 (_bfeg .Height -1);_cfbg -=int64 (_bfeg .Width -1);case 3:_cfbg -=int64 (_bfeg .Width -1);
};_ccba :=_e .Blit (_bfeg ,_dddb .RegionBitmap ,int (_cfbg ),int (_cdag ),_dddb .CombinationOperator );if _ccba !=nil {return _ccba ;};if _dddb .IsTransposed ==0&&(_dddb .ReferenceCorner ==0||_dddb .ReferenceCorner ==1){_dddb ._gggf +=int64 (_bfeg .Width -1);
};if _dddb .IsTransposed ==1&&(_dddb .ReferenceCorner ==1||_dddb .ReferenceCorner ==3){_dddb ._gggf +=int64 (_bfeg .Height -1);};return nil ;};func (_dabg *PageInformationSegment )readMaxStripeSize ()error {_acgc ,_cfaac :=_dabg ._eead .ReadBits (15);if _cfaac !=nil {return _cfaac ;
};_dabg .MaxStripeSize =uint16 (_acgc &_cb .MaxUint16 );return nil ;};func (_ebd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_acb ,_ebc ,_bgg ,_df ,_cgg ,_afb ,_egg ,_decc ,_bea int )(_cgf error ){var (_cdg ,_cfff int ;_agf ,_cefg int ;
_cfg ,_cab int ;_dba byte ;);if _acb > 0{_dba ,_cgf =_ebd .RegionBitmap .GetByte (_egg -_bgg );if _cgf !=nil {return ;};_agf =int (_dba );};if _decc > 0&&_decc <=_ebd .ReferenceBitmap .Height {_dba ,_cgf =_ebd .ReferenceBitmap .GetByte (_bea -_df +_afb );
if _cgf !=nil {return ;};_cefg =int (_dba )<<2;};if _decc >=0&&_decc < _ebd .ReferenceBitmap .Height {_dba ,_cgf =_ebd .ReferenceBitmap .GetByte (_bea +_afb );if _cgf !=nil {return ;};_cfg =int (_dba );};if _decc > -2&&_decc < _ebd .ReferenceBitmap .Height -1{_dba ,_cgf =_ebd .ReferenceBitmap .GetByte (_bea +_df +_afb );
if _cgf !=nil {return ;};_cab =int (_dba );};_cdg =((_agf >>5)&0x6)|((_cab >>2)&0x30)|(_cfg &0xc0)|(_cefg &0x200);_cfff =((_cab >>2)&0x70)|(_cfg &0xc0)|(_cefg &0x700);var _acg int ;for _aab :=0;_aab < _cgg ;_aab =_acg {var (_dcb int ;_ecbg int ;);_acg =_aab +8;
if _dcb =_ebc -_aab ;_dcb > 8{_dcb =8;};_cbed :=_acg < _ebc ;_ffc :=_acg < _ebd .ReferenceBitmap .Width ;_cee :=_afb +1;if _acb > 0{_dba =0;if _cbed {_dba ,_cgf =_ebd .RegionBitmap .GetByte (_egg -_bgg +1);if _cgf !=nil {return ;};};_agf =(_agf <<8)|int (_dba );
};if _decc > 0&&_decc <=_ebd .ReferenceBitmap .Height {var _bgb int ;if _ffc {_dba ,_cgf =_ebd .ReferenceBitmap .GetByte (_bea -_df +_cee );if _cgf !=nil {return ;};_bgb =int (_dba )<<2;};_cefg =(_cefg <<8)|_bgb ;};if _decc >=0&&_decc < _ebd .ReferenceBitmap .Height {_dba =0;
if _ffc {_dba ,_cgf =_ebd .ReferenceBitmap .GetByte (_bea +_cee );if _cgf !=nil {return ;};};_cfg =(_cfg <<8)|int (_dba );};if _decc > -2&&_decc < (_ebd .ReferenceBitmap .Height -1){_dba =0;if _ffc {_dba ,_cgf =_ebd .ReferenceBitmap .GetByte (_bea +_df +_cee );
if _cgf !=nil {return ;};};_cab =(_cab <<8)|int (_dba );};for _aae :=0;_aae < _dcb ;_aae ++{var _gfg int ;_bce :=(_cfff >>4)&0x1ff;switch _bce {case 0x1ff:_gfg =1;case 0x00:_gfg =0;default:_ebd ._ae .SetIndex (int32 (_cdg ));_gfg ,_cgf =_ebd ._cda .DecodeBit (_ebd ._ae );
if _cgf !=nil {return ;};};_ecf :=uint (7-_aae );_ecbg |=_gfg <<_ecf ;_cdg =((_cdg &0x0d6)<<1)|_gfg |(_agf >>_ecf +5)&0x002|((_cab >>_ecf +2)&0x010)|((_cfg >>_ecf )&0x040)|((_cefg >>_ecf )&0x200);_cfff =((_cfff &0xdb)<<1)|((_cab >>_ecf +2)&0x010)|((_cfg >>_ecf )&0x080)|((_cefg >>_ecf )&0x400);
};_cgf =_ebd .RegionBitmap .SetByte (_egg ,byte (_ecbg ));if _cgf !=nil {return ;};_egg ++;_bea ++;};return nil ;};func (_efbf *TextRegion )readAmountOfSymbolInstances ()error {_fcdg ,_gdaae :=_efbf ._eadg .ReadBits (32);if _gdaae !=nil {return _gdaae ;
};_efbf .NumberOfSymbolInstances =uint32 (_fcdg &_cb .MaxUint32 );_ddgeg :=_efbf .RegionInfo .BitmapWidth *_efbf .RegionInfo .BitmapHeight ;if _ddgeg < _efbf .NumberOfSymbolInstances {_caf .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_ddgeg ,_efbf .NumberOfSymbolInstances );
_efbf .NumberOfSymbolInstances =_ddgeg ;};return nil ;};func (_ecfc *PageInformationSegment )readIsStriped ()error {_fdef ,_ccdc :=_ecfc ._eead .ReadBit ();if _ccdc !=nil {return _ccdc ;};if _fdef ==1{_ecfc .IsStripe =true ;};return nil ;};func (_dagec *SymbolDictionary )readRefinementAtPixels (_gcg int )error {_dagec .SdrATX =make ([]int8 ,_gcg );
_dagec .SdrATY =make ([]int8 ,_gcg );var (_fdbf byte ;_fbg error ;);for _cgef :=0;_cgef < _gcg ;_cgef ++{_fdbf ,_fbg =_dagec ._afcf .ReadByte ();if _fbg !=nil {return _fbg ;};_dagec .SdrATX [_cgef ]=int8 (_fdbf );_fdbf ,_fbg =_dagec ._afcf .ReadByte ();
if _fbg !=nil {return _fbg ;};_dagec .SdrATY [_cgef ]=int8 (_fdbf );};return nil ;};func (_agdg *HalftoneRegion )parseHeader ()error {if _cdde :=_agdg .RegionSegment .parseHeader ();_cdde !=nil {return _cdde ;};_dccg ,_dbdg :=_agdg ._ggab .ReadBit ();if _dbdg !=nil {return _dbdg ;
};_agdg .HDefaultPixel =int8 (_dccg );_aedd ,_dbdg :=_agdg ._ggab .ReadBits (3);if _dbdg !=nil {return _dbdg ;};_agdg .CombinationOperator =_e .CombinationOperator (_aedd &0xf);_dccg ,_dbdg =_agdg ._ggab .ReadBit ();if _dbdg !=nil {return _dbdg ;};if _dccg ==1{_agdg .HSkipEnabled =true ;
};_aedd ,_dbdg =_agdg ._ggab .ReadBits (2);if _dbdg !=nil {return _dbdg ;};_agdg .HTemplate =byte (_aedd &0xf);_dccg ,_dbdg =_agdg ._ggab .ReadBit ();if _dbdg !=nil {return _dbdg ;};if _dccg ==1{_agdg .IsMMREncoded =true ;};_aedd ,_dbdg =_agdg ._ggab .ReadBits (32);
if _dbdg !=nil {return _dbdg ;};_agdg .HGridWidth =uint32 (_aedd &_cb .MaxUint32 );_aedd ,_dbdg =_agdg ._ggab .ReadBits (32);if _dbdg !=nil {return _dbdg ;};_agdg .HGridHeight =uint32 (_aedd &_cb .MaxUint32 );_aedd ,_dbdg =_agdg ._ggab .ReadBits (32);if _dbdg !=nil {return _dbdg ;
};_agdg .HGridX =int32 (_aedd &_cb .MaxInt32 );_aedd ,_dbdg =_agdg ._ggab .ReadBits (32);if _dbdg !=nil {return _dbdg ;};_agdg .HGridY =int32 (_aedd &_cb .MaxInt32 );_aedd ,_dbdg =_agdg ._ggab .ReadBits (16);if _dbdg !=nil {return _dbdg ;};_agdg .HRegionX =uint16 (_aedd &_cb .MaxUint16 );
_aedd ,_dbdg =_agdg ._ggab .ReadBits (16);if _dbdg !=nil {return _dbdg ;};_agdg .HRegionY =uint16 (_aedd &_cb .MaxUint16 );if _dbdg =_agdg .computeSegmentDataStructure ();_dbdg !=nil {return _dbdg ;};return _agdg .checkInput ();};func (_ffae *PatternDictionary )extractPatterns (_egaf *_e .Bitmap )error {var _gcc int ;
_ece :=make ([]*_e .Bitmap ,_ffae .GrayMax +1);for _gcc <=int (_ffae .GrayMax ){_dedcf :=int (_ffae .HdpWidth )*_gcc ;_aef :=_f .Rect (_dedcf ,0,_dedcf +int (_ffae .HdpWidth ),int (_ffae .HdpHeight ));_fbef ,_ebcg :=_e .Extract (_aef ,_egaf );if _ebcg !=nil {return _ebcg ;
};_ece [_gcc ]=_fbef ;_gcc ++;};_ffae .Patterns =_ece ;return nil ;};func (_gded *GenericRegion )Init (h *Header ,r *_fad .Reader )error {_gded .RegionSegment =NewRegionSegment (r );_gded ._edg =r ;return _gded .parseHeader ();};func _efff (_aaba *_fad .Reader ,_cea *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_cf :_aaba ,RegionInfo :NewRegionSegment (_aaba ),_db :_cea ,_faa :&template0 {},_gf :&template1 {}};
};func (_dcag *GenericRegion )updateOverrideFlags ()error {const _cfa ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcag .GBAtX ==nil ||_dcag .GBAtY ==nil {return nil ;};if len (_dcag .GBAtX )!=len (_dcag .GBAtY ){return _cg .Errorf (_cfa ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_dcag .GBAtX ),len (_dcag .GBAtY ));
};_dcag .GBAtOverride =make ([]bool ,len (_dcag .GBAtX ));switch _dcag .GBTemplate {case 0:if !_dcag .UseExtTemplates {if _dcag .GBAtX [0]!=3||_dcag .GBAtY [0]!=-1{_dcag .setOverrideFlag (0);};if _dcag .GBAtX [1]!=-3||_dcag .GBAtY [1]!=-1{_dcag .setOverrideFlag (1);
};if _dcag .GBAtX [2]!=2||_dcag .GBAtY [2]!=-2{_dcag .setOverrideFlag (2);};if _dcag .GBAtX [3]!=-2||_dcag .GBAtY [3]!=-2{_dcag .setOverrideFlag (3);};}else {if _dcag .GBAtX [0]!=-2||_dcag .GBAtY [0]!=0{_dcag .setOverrideFlag (0);};if _dcag .GBAtX [1]!=0||_dcag .GBAtY [1]!=-2{_dcag .setOverrideFlag (1);
};if _dcag .GBAtX [2]!=-2||_dcag .GBAtY [2]!=-1{_dcag .setOverrideFlag (2);};if _dcag .GBAtX [3]!=-1||_dcag .GBAtY [3]!=-2{_dcag .setOverrideFlag (3);};if _dcag .GBAtX [4]!=1||_dcag .GBAtY [4]!=-2{_dcag .setOverrideFlag (4);};if _dcag .GBAtX [5]!=2||_dcag .GBAtY [5]!=-1{_dcag .setOverrideFlag (5);
};if _dcag .GBAtX [6]!=-3||_dcag .GBAtY [6]!=0{_dcag .setOverrideFlag (6);};if _dcag .GBAtX [7]!=-4||_dcag .GBAtY [7]!=0{_dcag .setOverrideFlag (7);};if _dcag .GBAtX [8]!=2||_dcag .GBAtY [8]!=-2{_dcag .setOverrideFlag (8);};if _dcag .GBAtX [9]!=3||_dcag .GBAtY [9]!=-1{_dcag .setOverrideFlag (9);
};if _dcag .GBAtX [10]!=-2||_dcag .GBAtY [10]!=-2{_dcag .setOverrideFlag (10);};if _dcag .GBAtX [11]!=-3||_dcag .GBAtY [11]!=-1{_dcag .setOverrideFlag (11);};};case 1:if _dcag .GBAtX [0]!=3||_dcag .GBAtY [0]!=-1{_dcag .setOverrideFlag (0);};case 2:if _dcag .GBAtX [0]!=2||_dcag .GBAtY [0]!=-1{_dcag .setOverrideFlag (0);
};case 3:if _dcag .GBAtX [0]!=2||_dcag .GBAtY [0]!=-1{_dcag .setOverrideFlag (0);};};return nil ;};func (_bfbb *PageInformationSegment )encodeStripingInformation (_gbbf _fad .BinaryWriter )(_bgfd int ,_dcbd error ){const _gadc ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_bfbb .IsStripe {if _bgfd ,_dcbd =_gbbf .Write ([]byte {0x00,0x00});_dcbd !=nil {return 0,_cg .Wrap (_dcbd ,_gadc ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _bgfd ,nil ;};_cfef :=make ([]byte ,2);_fa .BigEndian .PutUint16 (_cfef ,_bfbb .MaxStripeSize |1<<15);
if _bgfd ,_dcbd =_gbbf .Write (_cfef );_dcbd !=nil {return 0,_cg .Wrapf (_dcbd ,_gadc ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bfbb .MaxStripeSize );};return _bgfd ,nil ;};func (_dgg *GenericRegion )decodeLine (_bec ,_befg ,_gdedg int )error {const _ggg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_cfbc :=_dgg .Bitmap .GetByteIndex (0,_bec );_dfe :=_cfbc -_dgg .Bitmap .RowStride ;switch _dgg .GBTemplate {case 0:if !_dgg .UseExtTemplates {return _dgg .decodeTemplate0a (_bec ,_befg ,_gdedg ,_cfbc ,_dfe );};return _dgg .decodeTemplate0b (_bec ,_befg ,_gdedg ,_cfbc ,_dfe );
case 1:return _dgg .decodeTemplate1 (_bec ,_befg ,_gdedg ,_cfbc ,_dfe );case 2:return _dgg .decodeTemplate2 (_bec ,_befg ,_gdedg ,_cfbc ,_dfe );case 3:return _dgg .decodeTemplate3 (_bec ,_befg ,_gdedg ,_cfbc ,_dfe );};return _cg .Errorf (_ggg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_dgg .GBTemplate );
};func (_adba *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_dedf ,_agb :=_adba ._eead .ReadBit ();if _agb !=nil {return _agb ;};if _dedf ==1{_adba ._bgef =true ;};return nil ;};func (_fefb *TextRegion )decodeDfs ()(int64 ,error ){if _fefb .IsHuffmanEncoded {if _fefb .SbHuffFS ==3{if _fefb ._fgga ==nil {var _agdb error ;
_fefb ._fgga ,_agdb =_fefb .getUserTable (0);if _agdb !=nil {return 0,_agdb ;};};return _fefb ._fgga .Decode (_fefb ._eadg );};_gbfc ,_gccd :=_ca .GetStandardTable (6+int (_fefb .SbHuffFS ));if _gccd !=nil {return 0,_gccd ;};return _gbfc .Decode (_fefb ._eadg );
};_fdecd ,_gcdg :=_fefb ._ggfc .DecodeInt (_fefb ._fcfa );if _gcdg !=nil {return 0,_gcdg ;};return int64 (_fdecd ),nil ;};func (_bba *Header )GetSegmentData ()(Segmenter ,error ){var _ccd Segmenter ;if _bba .SegmentData !=nil {_ccd =_bba .SegmentData ;
};if _ccd ==nil {_gbbcc ,_gdb :=_eeg [_bba .Type ];if !_gdb {return nil ,_ff .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bba .Type ,_bba .Type );
};_ccd =_gbbcc ();_caf .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bba .SegmentNumber ,_bba .SegmentDataStartOffset );
_cfaa ,_cgda :=_bba .subInputReader ();if _cgda !=nil {return nil ,_cgda ;};if _gfe :=_ccd .Init (_bba ,_cfaa );_gfe !=nil {_caf .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_gfe ,_ccd );
return nil ,_gfe ;};_bba .SegmentData =_ccd ;};return _ccd ,nil ;};func (_fgec *TextRegion )String ()string {_ebegf :=&_d .Builder {};_ebegf .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_ebegf .WriteString (_fgec .RegionInfo .String ()+"\u000a");
_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_fgec .SbrTemplate ));_ebegf .WriteString (_ff .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_fgec .SbDsOffset ));
_ebegf .WriteString (_ff .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_fgec .DefaultPixel ));_ebegf .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_fgec .CombinationOperator ));
_ebegf .WriteString (_ff .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_fgec .IsTransposed ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fgec .ReferenceCorner ));
_ebegf .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_fgec .UseRefinement ));_ebegf .WriteString (_ff .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_fgec .IsHuffmanEncoded ));
if _fgec .IsHuffmanEncoded {_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fgec .SbHuffRSize ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_fgec .SbHuffRDY ));
_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_fgec .SbHuffRDX ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_fgec .SbHuffRDHeight ));
_ebegf .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_fgec .SbHuffRDWidth ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_fgec .SbHuffDT ));
_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_fgec .SbHuffDS ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_fgec .SbHuffFS ));
};_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fgec .SbrATX ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_fgec .SbrATY ));
_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fgec .NumberOfSymbolInstances ));_ebegf .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fgec .SbrATX ));
return _ebegf .String ();};func (_gfeb *SymbolDictionary )setInSyms ()error {if _gfeb .Header .RTSegments !=nil {return _gfeb .retrieveImportSymbols ();};_gfeb ._fadf =make ([]*_e .Bitmap ,0);return nil ;};func (_cag *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_fecg :=range _cag .Header .RTSegments {if _fecg .Type ==0{_gedg ,_egca :=_fecg .GetSegmentData ();
if _egca !=nil {return _egca ;};_cdabd ,_eddaf :=_gedg .(*SymbolDictionary );if !_eddaf {return _ff .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gedg );
};_aeddd ,_egca :=_cdabd .GetDictionary ();if _egca !=nil {return _ff .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_fecg .SegmentNumber ,_egca .Error ());
};_cag ._fadf =append (_cag ._fadf ,_aeddd ...);_cag ._cgaa +=_cdabd .NumberOfExportedSymbols ;};};return nil ;};func (_bdea *HalftoneRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){if _bdea .HalftoneRegionBitmap !=nil {return _bdea .HalftoneRegionBitmap ,nil ;
};var _fcag error ;_bdea .HalftoneRegionBitmap =_e .New (int (_bdea .RegionSegment .BitmapWidth ),int (_bdea .RegionSegment .BitmapHeight ));if _bdea .Patterns ==nil ||len (_bdea .Patterns )==0{_bdea .Patterns ,_fcag =_bdea .GetPatterns ();if _fcag !=nil {return nil ,_fcag ;
};};if _bdea .HDefaultPixel ==1{_bdea .HalftoneRegionBitmap .SetDefaultPixel ();};_geag :=_cb .Ceil (_cb .Log (float64 (len (_bdea .Patterns )))/_cb .Log (2));_gfda :=int (_geag );var _ebgf [][]int ;_ebgf ,_fcag =_bdea .grayScaleDecoding (_gfda );if _fcag !=nil {return nil ,_fcag ;
};if _fcag =_bdea .renderPattern (_ebgf );_fcag !=nil {return nil ,_fcag ;};return _bdea .HalftoneRegionBitmap ,nil ;};func (_bdec *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bcfc ,_bgcd :=_bdec ._eead .ReadBit ();if _bgcd !=nil {return _bgcd ;
};if _bcfc ==1{_bdec ._efg =true ;};return nil ;};func (_bfgdf *TextRegion )GetRegionInfo ()*RegionSegment {return _bfgdf .RegionInfo };func (_fdcae *RegionSegment )String ()string {_bbbfd :=&_d .Builder {};_bbbfd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_bbbfd .WriteString (_ff .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_fdcae .BitmapWidth ,_fdcae .BitmapHeight ));
_bbbfd .WriteString (_ff .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_fdcae .XLocation ,_fdcae .YLocation ));_bbbfd .WriteString (_ff .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_fdcae .CombinaionOperator ));
return _bbbfd .String ();};var _ _ca .BasicTabler =&TableSegment {};func (_dcae *HalftoneRegion )grayScaleDecoding (_ddbg int )([][]int ,error ){var (_fee []int8 ;_cggff []int8 ;);if !_dcae .IsMMREncoded {_fee =make ([]int8 ,4);_cggff =make ([]int8 ,4);
if _dcae .HTemplate <=1{_fee [0]=3;}else if _dcae .HTemplate >=2{_fee [0]=2;};_cggff [0]=-1;_fee [1]=-3;_cggff [1]=-1;_fee [2]=2;_cggff [2]=-2;_fee [3]=-2;_cggff [3]=-2;};_ffgd :=make ([]*_e .Bitmap ,_ddbg );_acgd :=NewGenericRegion (_dcae ._ggab );_acgd .setParametersMMR (_dcae .IsMMREncoded ,_dcae .DataOffset ,_dcae .DataLength ,_dcae .HGridHeight ,_dcae .HGridWidth ,_dcae .HTemplate ,false ,_dcae .HSkipEnabled ,_fee ,_cggff );
_dabe :=_ddbg -1;var _ebge error ;_ffgd [_dabe ],_ebge =_acgd .GetRegionBitmap ();if _ebge !=nil {return nil ,_ebge ;};for _dabe > 0{_dabe --;_acgd .Bitmap =nil ;_ffgd [_dabe ],_ebge =_acgd .GetRegionBitmap ();if _ebge !=nil {return nil ,_ebge ;};if _ebge =_dcae .combineGrayscalePlanes (_ffgd ,_dabe );
_ebge !=nil {return nil ,_ebge ;};};return _dcae .computeGrayScalePlanes (_ffgd ,_ddbg );};func (_aebd *GenericRegion )InitEncode (bm *_e .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _fbf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cg .Error (_fbf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cg .Error (_fbf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_aebd .Bitmap =bm ;_aebd .GBTemplate =byte (template );switch _aebd .GBTemplate {case 0:_aebd .GBAtX =[]int8 {3,-3,2,-2};_aebd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_aebd .GBAtX =[]int8 {3};_aebd .GBAtY =[]int8 {-1};case 2,3:_aebd .GBAtX =[]int8 {2};_aebd .GBAtY =[]int8 {-1};
default:return _cg .Errorf (_fbf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_aebd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_aebd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_dag *GenericRefinementRegion )overrideAtTemplate0 (_beg ,_afbb ,_acgf ,_egba ,_dbg int )int {if _dag ._cac [0]{_beg &=0xfff7;
if _dag .GrAtY [0]==0&&int (_dag .GrAtX [0])>=-_dbg {_beg |=(_egba >>uint (7-(_dbg +int (_dag .GrAtX [0])))&0x1)<<3;}else {_beg |=_dag .getPixel (_dag .RegionBitmap ,_afbb +int (_dag .GrAtX [0]),_acgf +int (_dag .GrAtY [0]))<<3;};};if _dag ._cac [1]{_beg &=0xefff;
if _dag .GrAtY [1]==0&&int (_dag .GrAtX [1])>=-_dbg {_beg |=(_egba >>uint (7-(_dbg +int (_dag .GrAtX [1])))&0x1)<<12;}else {_beg |=_dag .getPixel (_dag .ReferenceBitmap ,_afbb +int (_dag .GrAtX [1]),_acgf +int (_dag .GrAtY [1]));};};return _beg ;};func (_af *EndOfStripe )parseHeader ()error {_g ,_ee :=_af ._ddb .ReadBits (32);
if _ee !=nil {return _ee ;};_af ._ab =int (_g &_cb .MaxInt32 );return nil ;};func (_egab *Header )Encode (w _fad .BinaryWriter )(_cdab int ,_fge error ){const _feae ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _fdd _fad .BinaryWriter ;
_caf .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fge !=nil {_caf .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_fge );
}else {_caf .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_egab );_caf .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _egab .SegmentData !=nil {_gdcg ,_bcdb :=_egab .SegmentData .(SegmentEncoder );if !_bcdb {return 0,_cg .Errorf (_feae ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_egab .SegmentData );
};_fdd =_fad .BufferedMSB ();_cdab ,_fge =_gdcg .Encode (_fdd );if _fge !=nil {return 0,_cg .Wrap (_fge ,_feae ,"");};_egab .SegmentDataLength =uint64 (_cdab );};if _egab .pageSize ()==4{_egab .PageAssociationFieldSize =true ;};var _dfec int ;_dfec ,_fge =_egab .writeSegmentNumber (w );
if _fge !=nil {return 0,_cg .Wrap (_fge ,_feae ,"");};_cdab +=_dfec ;if _fge =_egab .writeFlags (w );_fge !=nil {return _cdab ,_cg .Wrap (_fge ,_feae ,"");};_cdab ++;_dfec ,_fge =_egab .writeReferredToCount (w );if _fge !=nil {return 0,_cg .Wrap (_fge ,_feae ,"");
};_cdab +=_dfec ;_dfec ,_fge =_egab .writeReferredToSegments (w );if _fge !=nil {return 0,_cg .Wrap (_fge ,_feae ,"");};_cdab +=_dfec ;_dfec ,_fge =_egab .writeSegmentPageAssociation (w );if _fge !=nil {return 0,_cg .Wrap (_fge ,_feae ,"");};_cdab +=_dfec ;
_dfec ,_fge =_egab .writeSegmentDataLength (w );if _fge !=nil {return 0,_cg .Wrap (_fge ,_feae ,"");};_cdab +=_dfec ;_egab .HeaderLength =int64 (_cdab )-int64 (_egab .SegmentDataLength );if _fdd !=nil {if _ ,_fge =w .Write (_fdd .Data ());_fge !=nil {return _cdab ,_cg .Wrap (_fge ,_feae ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _cdab ,nil ;};type PageInformationSegment struct{_eead *_fad .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bgef bool ;_gdab _e .CombinationOperator ;_efg bool ;DefaultPixelValue uint8 ;_cbdc bool ;IsLossless bool ;
IsStripe bool ;MaxStripeSize uint16 ;};func (_geabg *TableSegment )HtRS ()int32 {return _geabg ._fcgb };func (_ggf *GenericRegion )decodeTemplate3 (_gdgc ,_aega ,_baa int ,_gdge ,_gcf int )(_deaa error ){const _fbcd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_bbb ,_eefb int ;_dafa int ;_dfg byte ;_ebb ,_fgc int ;);if _gdgc >=1{_dfg ,_deaa =_ggf .Bitmap .GetByte (_gcf );if _deaa !=nil {return _cg .Wrap (_deaa ,_fbcd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dafa =int (_dfg );};_bbb =(_dafa >>1)&0x70;
for _agg :=0;_agg < _baa ;_agg =_ebb {var (_dggf byte ;_aea int ;);_ebb =_agg +8;if _edbf :=_aega -_agg ;_edbf > 8{_aea =8;}else {_aea =_edbf ;};if _gdgc >=1{_dafa <<=8;if _ebb < _aega {_dfg ,_deaa =_ggf .Bitmap .GetByte (_gcf +1);if _deaa !=nil {return _cg .Wrap (_deaa ,_fbcd ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dafa |=int (_dfg );};};for _afd :=0;_afd < _aea ;_afd ++{if _ggf ._adb {_eefb =_ggf .overrideAtTemplate3 (_bbb ,_agg +_afd ,_gdgc ,int (_dggf ),_afd );_ggf ._geg .SetIndex (int32 (_eefb ));}else {_ggf ._geg .SetIndex (int32 (_bbb ));};_fgc ,_deaa =_ggf ._fbc .DecodeBit (_ggf ._geg );
if _deaa !=nil {return _cg .Wrap (_deaa ,_fbcd ,"");};_dggf |=byte (_fgc )<<byte (7-_afd );_bbb =((_bbb &0x1f7)<<1)|_fgc |((_dafa >>uint (8-_afd ))&0x010);};if _aggc :=_ggf .Bitmap .SetByte (_gdge ,_dggf );_aggc !=nil {return _cg .Wrap (_aggc ,_fbcd ,"");
};_gdge ++;_gcf ++;};return nil ;};func (_afde *HalftoneRegion )checkInput ()error {if _afde .IsMMREncoded {if _afde .HTemplate !=0{_caf .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_afde .HTemplate );
};if _afde .HSkipEnabled {_caf .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_afde .HSkipEnabled );
};};return nil ;};type EncodeInitializer interface{InitEncode ();};func NewRegionSegment (r *_fad .Reader )*RegionSegment {return &RegionSegment {_bead :r }};func (_dga *SymbolDictionary )GetDictionary ()([]*_e .Bitmap ,error ){_caf .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_caf .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_caf .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_dga ._bdaf ,_dga ._gcff );
}();if _dga ._bdaf ==nil {var _cfgd error ;if _dga .UseRefinementAggregation {_dga ._dbadb =_dga .getSbSymCodeLen ();};if !_dga .IsHuffmanEncoded {if _cfgd =_dga .setCodingStatistics ();_cfgd !=nil {return nil ,_cfgd ;};};_dga ._gcff =make ([]*_e .Bitmap ,_dga .NumberOfNewSymbols );
var _dgcb []int ;if _dga .IsHuffmanEncoded &&!_dga .UseRefinementAggregation {_dgcb =make ([]int ,_dga .NumberOfNewSymbols );};if _cfgd =_dga .setSymbolsArray ();_cfgd !=nil {return nil ,_cfgd ;};var _aced ,_edfea int64 ;_dga ._aaa =0;for _dga ._aaa < _dga .NumberOfNewSymbols {_edfea ,_cfgd =_dga .decodeHeightClassDeltaHeight ();
if _cfgd !=nil {return nil ,_cfgd ;};_aced +=_edfea ;var _dedg ,_cedb uint32 ;_eaea :=int64 (_dga ._aaa );for {var _edbff int64 ;_edbff ,_cfgd =_dga .decodeDifferenceWidth ();if _bb .Is (_cfgd ,_ffb .ErrOOB ){break ;};if _cfgd !=nil {return nil ,_cfgd ;
};if _dga ._aaa >=_dga .NumberOfNewSymbols {break ;};_dedg +=uint32 (_edbff );_cedb +=_dedg ;if !_dga .IsHuffmanEncoded ||_dga .UseRefinementAggregation {if !_dga .UseRefinementAggregation {_cfgd =_dga .decodeDirectlyThroughGenericRegion (_dedg ,uint32 (_aced ));
if _cfgd !=nil {return nil ,_cfgd ;};}else {_cfgd =_dga .decodeAggregate (_dedg ,uint32 (_aced ));if _cfgd !=nil {return nil ,_cfgd ;};};}else if _dga .IsHuffmanEncoded &&!_dga .UseRefinementAggregation {_dgcb [_dga ._aaa ]=int (_dedg );};_dga ._aaa ++;
};if _dga .IsHuffmanEncoded &&!_dga .UseRefinementAggregation {var _bfgg int64 ;if _dga .SdHuffBMSizeSelection ==0{var _ebeg _ca .Tabler ;_ebeg ,_cfgd =_ca .GetStandardTable (1);if _cfgd !=nil {return nil ,_cfgd ;};_bfgg ,_cfgd =_ebeg .Decode (_dga ._afcf );
if _cfgd !=nil {return nil ,_cfgd ;};}else {_bfgg ,_cfgd =_dga .huffDecodeBmSize ();if _cfgd !=nil {return nil ,_cfgd ;};};_dga ._afcf .Align ();var _dage *_e .Bitmap ;_dage ,_cfgd =_dga .decodeHeightClassCollectiveBitmap (_bfgg ,uint32 (_aced ),_cedb );
if _cfgd !=nil {return nil ,_cfgd ;};_cfgd =_dga .decodeHeightClassBitmap (_dage ,_eaea ,int (_aced ),_dgcb );if _cfgd !=nil {return nil ,_cfgd ;};};};_abee ,_cfgd :=_dga .getToExportFlags ();if _cfgd !=nil {return nil ,_cfgd ;};_dga .setExportedSymbols (_abee );
};return _dga ._bdaf ,nil ;};func (_cebd *TextRegion )encodeSymbols (_eagdb _fad .BinaryWriter )(_cdcbc int ,_ccbaa error ){const _fbeagb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_beda :=make ([]byte ,4);_fa .BigEndian .PutUint32 (_beda ,_cebd .NumberOfSymbols );
if _cdcbc ,_ccbaa =_eagdb .Write (_beda );_ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_fefba ,_ccbaa :=_e .NewClassedPoints (_cebd ._gegg ,_cebd ._bga );
if _ccbaa !=nil {return 0,_cg .Wrap (_ccbaa ,_fbeagb ,"");};var _acdc ,_aege int ;_afgc :=_dc .New ();_afgc .Init ();if _ccbaa =_afgc .EncodeInteger (_dc .IADT ,0);_ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_dde ,_ccbaa :=_fefba .GroupByY ();if _ccbaa !=nil {return 0,_cg .Wrap (_ccbaa ,_fbeagb ,"");};for _ ,_cgdd :=range _dde {_cgag :=int (_cgdd .YAtIndex (0));_abca :=_cgag -_acdc ;if _ccbaa =_afgc .EncodeInteger (_dc .IADT ,_abca );_ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"");
};var _gegfg int ;for _gbff ,_aaaf :=range _cgdd .IntSlice {switch _gbff {case 0:_ffaee :=int (_cgdd .XAtIndex (_gbff ))-_aege ;if _ccbaa =_afgc .EncodeInteger (_dc .IAFS ,_ffaee );_ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"");};_aege +=_ffaee ;
_gegfg =_aege ;default:_egbg :=int (_cgdd .XAtIndex (_gbff ))-_gegfg ;if _ccbaa =_afgc .EncodeInteger (_dc .IADS ,_egbg );_ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"");};_gegfg +=_egbg ;};_fdbg ,_cdbg :=_cebd ._ebfc .Get (_aaaf );if _cdbg !=nil {return _cdcbc ,_cg .Wrap (_cdbg ,_fbeagb ,"");
};_eeaf ,_dccf :=_cebd ._debdf [_fdbg ];if !_dccf {_eeaf ,_dccf =_cebd ._bcfe [_fdbg ];if !_dccf {return _cdcbc ,_cg .Errorf (_fbeagb ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fdbg );
};};if _cdbg =_afgc .EncodeIAID (_cebd ._ccgc ,_eeaf );_cdbg !=nil {return _cdcbc ,_cg .Wrap (_cdbg ,_fbeagb ,"");};};if _ccbaa =_afgc .EncodeOOB (_dc .IADS );_ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"");};};_afgc .Final ();_cdbe ,_ccbaa :=_afgc .WriteTo (_eagdb );
if _ccbaa !=nil {return _cdcbc ,_cg .Wrap (_ccbaa ,_fbeagb ,"");};_cdcbc +=int (_cdbe );return _cdcbc ,nil ;};func (_cgeg *GenericRefinementRegion )decodeTypicalPredictedLine (_fb ,_ba ,_gc ,_bff ,_gdf ,_ga int )error {_ac :=_fb -int (_cgeg .ReferenceDY );
_dec :=_cgeg .ReferenceBitmap .GetByteIndex (0,_ac );_fcf :=_cgeg .RegionBitmap .GetByteIndex (0,_fb );var _dbc error ;switch _cgeg .TemplateID {case 0:_dbc =_cgeg .decodeTypicalPredictedLineTemplate0 (_fb ,_ba ,_gc ,_bff ,_gdf ,_ga ,_fcf ,_ac ,_dec );
case 1:_dbc =_cgeg .decodeTypicalPredictedLineTemplate1 (_fb ,_ba ,_gc ,_bff ,_gdf ,_ga ,_fcf ,_ac ,_dec );};return _dbc ;};func (_eab *GenericRegion )decodeTemplate0b (_fde ,_begc ,_cfbe int ,_gfc ,_bdd int )(_ace error ){const _bgff ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_bgca ,_adc int ;_fegf ,_bgfa int ;_faf byte ;_abfa int ;);if _fde >=1{_faf ,_ace =_eab .Bitmap .GetByte (_bdd );if _ace !=nil {return _cg .Wrap (_ace ,_bgff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fegf =int (_faf );};if _fde >=2{_faf ,_ace =_eab .Bitmap .GetByte (_bdd -_eab .Bitmap .RowStride );
if _ace !=nil {return _cg .Wrap (_ace ,_bgff ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bgfa =int (_faf )<<6;};_bgca =(_fegf &0xf0)|(_bgfa &0x3800);for _bca :=0;_bca < _cfbe ;_bca =_abfa {var (_dcg byte ;_edbe int ;);_abfa =_bca +8;if _gbe :=_begc -_bca ;
_gbe > 8{_edbe =8;}else {_edbe =_gbe ;};if _fde > 0{_fegf <<=8;if _abfa < _begc {_faf ,_ace =_eab .Bitmap .GetByte (_bdd +1);if _ace !=nil {return _cg .Wrap (_ace ,_bgff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fegf |=int (_faf );};};if _fde > 1{_bgfa <<=8;
if _abfa < _begc {_faf ,_ace =_eab .Bitmap .GetByte (_bdd -_eab .Bitmap .RowStride +1);if _ace !=nil {return _cg .Wrap (_ace ,_bgff ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bgfa |=int (_faf )<<6;};};for _bdef :=0;_bdef < _edbe ;_bdef ++{_ded :=uint (7-_bdef );
if _eab ._adb {_adc =_eab .overrideAtTemplate0b (_bgca ,_bca +_bdef ,_fde ,int (_dcg ),_bdef ,int (_ded ));_eab ._geg .SetIndex (int32 (_adc ));}else {_eab ._geg .SetIndex (int32 (_bgca ));};var _fac int ;_fac ,_ace =_eab ._fbc .DecodeBit (_eab ._geg );
if _ace !=nil {return _cg .Wrap (_ace ,_bgff ,"");};_dcg |=byte (_fac <<_ded );_bgca =((_bgca &0x7bf7)<<1)|_fac |((_fegf >>_ded )&0x10)|((_bgfa >>_ded )&0x800);};if _efaf :=_eab .Bitmap .SetByte (_gfc ,_dcg );_efaf !=nil {return _cg .Wrap (_efaf ,_bgff ,"");
};_gfc ++;_bdd ++;};return nil ;};func (_fab *GenericRefinementRegion )getGrReference ()(*_e .Bitmap ,error ){segments :=_fab ._db .RTSegments ;if len (segments )==0{return nil ,_fc .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_ffbb ,_gfb :=segments [0].GetSegmentData ();if _gfb !=nil {return nil ,_gfb ;};_fadd ,_cef :=_ffbb .(Regioner );if !_cef {return nil ,_ff .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ffbb );
};return _fadd .GetRegionBitmap ();};func (_fcddc *Header )pageSize ()uint {if _fcddc .PageAssociation <=255{return 1;};return 4;};func (_agbf *SymbolDictionary )readNumberOfExportedSymbols ()error {_gdae ,_ffdfc :=_agbf ._afcf .ReadBits (32);if _ffdfc !=nil {return _ffdfc ;
};_agbf .NumberOfExportedSymbols =uint32 (_gdae &_cb .MaxUint32 );return nil ;};func (_eeae *Header )writeSegmentDataLength (_afeg _fad .BinaryWriter )(_dad int ,_cffc error ){_ecca :=make ([]byte ,4);_fa .BigEndian .PutUint32 (_ecca ,uint32 (_eeae .SegmentDataLength ));
if _dad ,_cffc =_afeg .Write (_ecca );_cffc !=nil {return 0,_cg .Wrap (_cffc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _dad ,nil ;
};func (_aca *PageInformationSegment )CombinationOperator ()_e .CombinationOperator {return _aca ._gdab };func NewHeader (d Documenter ,r *_fad .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bdefc :=&Header {Reader :r };if _eabg :=_bdefc .parse (d ,r ,offset ,organizationType );
_eabg !=nil {return nil ,_cg .Wrap (_eabg ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bdefc ,nil ;};func (_eeac *TextRegion )decodeRdx ()(int64 ,error ){const _gfdf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _eeac .IsHuffmanEncoded {if _eeac .SbHuffRDX ==3{if _eeac ._egfg ==nil {var (_gfae int ;
_dbfg error ;);if _eeac .SbHuffFS ==3{_gfae ++;};if _eeac .SbHuffDS ==3{_gfae ++;};if _eeac .SbHuffDT ==3{_gfae ++;};if _eeac .SbHuffRDWidth ==3{_gfae ++;};if _eeac .SbHuffRDHeight ==3{_gfae ++;};_eeac ._egfg ,_dbfg =_eeac .getUserTable (_gfae );if _dbfg !=nil {return 0,_cg .Wrap (_dbfg ,_gfdf ,"");
};};return _eeac ._egfg .Decode (_eeac ._eadg );};_ceefa ,_eedf :=_ca .GetStandardTable (14+int (_eeac .SbHuffRDX ));if _eedf !=nil {return 0,_cg .Wrap (_eedf ,_gfdf ,"");};return _ceefa .Decode (_eeac ._eadg );};_faff ,_gbgc :=_eeac ._ggfc .DecodeInt (_eeac ._caff );
if _gbgc !=nil {return 0,_cg .Wrap (_gbgc ,_gfdf ,"");};return int64 (_faff ),nil ;};func (_fggb *Header )readSegmentNumber (_aag *_fad .Reader )error {const _effc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_bad :=make ([]byte ,4);_ ,_efcd :=_aag .Read (_bad );if _efcd !=nil {return _cg .Wrap (_efcd ,_effc ,"");};_fggb .SegmentNumber =_fa .BigEndian .Uint32 (_bad );return nil ;};func (_bbfd *SymbolDictionary )setExportedSymbols (_bfdb []int ){for _dgfd :=uint32 (0);
_dgfd < _bbfd ._cgaa +_bbfd .NumberOfNewSymbols ;_dgfd ++{if _bfdb [_dgfd ]==1{var _caaa *_e .Bitmap ;if _dgfd < _bbfd ._cgaa {_caaa =_bbfd ._fadf [_dgfd ];}else {_caaa =_bbfd ._gcff [_dgfd -_bbfd ._cgaa ];};_caf .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_caaa );
_bbfd ._bdaf =append (_bbfd ._bdaf ,_caaa );};};};func (_dff *GenericRegion )overrideAtTemplate1 (_cccf ,_fadb ,_dfd ,_cegaa ,_eade int )int {_cccf &=0x1FF7;if _dff .GBAtY [0]==0&&_dff .GBAtX [0]>=-int8 (_eade ){_cccf |=(_cegaa >>uint (7-(int8 (_eade )+_dff .GBAtX [0]))&0x1)<<3;
}else {_cccf |=int (_dff .getPixel (_fadb +int (_dff .GBAtX [0]),_dfd +int (_dff .GBAtY [0])))<<3;};return _cccf ;};func (_ebafd *RegionSegment )Size ()int {return 17};func (_fcca *TextRegion )readRegionFlags ()error {var (_ccgee int ;_gebdf uint64 ;_cbbd error ;
);_ccgee ,_cbbd =_fcca ._eadg .ReadBit ();if _cbbd !=nil {return _cbbd ;};_fcca .SbrTemplate =int8 (_ccgee );_gebdf ,_cbbd =_fcca ._eadg .ReadBits (5);if _cbbd !=nil {return _cbbd ;};_fcca .SbDsOffset =int8 (_gebdf );if _fcca .SbDsOffset > 0x0f{_fcca .SbDsOffset -=0x20;
};_ccgee ,_cbbd =_fcca ._eadg .ReadBit ();if _cbbd !=nil {return _cbbd ;};_fcca .DefaultPixel =int8 (_ccgee );_gebdf ,_cbbd =_fcca ._eadg .ReadBits (2);if _cbbd !=nil {return _cbbd ;};_fcca .CombinationOperator =_e .CombinationOperator (int (_gebdf )&0x3);
_ccgee ,_cbbd =_fcca ._eadg .ReadBit ();if _cbbd !=nil {return _cbbd ;};_fcca .IsTransposed =int8 (_ccgee );_gebdf ,_cbbd =_fcca ._eadg .ReadBits (2);if _cbbd !=nil {return _cbbd ;};_fcca .ReferenceCorner =int16 (_gebdf )&0x3;_gebdf ,_cbbd =_fcca ._eadg .ReadBits (2);
if _cbbd !=nil {return _cbbd ;};_fcca .LogSBStrips =int16 (_gebdf )&0x3;_fcca .SbStrips =1<<uint (_fcca .LogSBStrips );_ccgee ,_cbbd =_fcca ._eadg .ReadBit ();if _cbbd !=nil {return _cbbd ;};if _ccgee ==1{_fcca .UseRefinement =true ;};_ccgee ,_cbbd =_fcca ._eadg .ReadBit ();
if _cbbd !=nil {return _cbbd ;};if _ccgee ==1{_fcca .IsHuffmanEncoded =true ;};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_gefa *Header )writeFlags (_aedc _fad .BinaryWriter )(_cbde error ){const _cbbb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_eaff :=byte (_gefa .Type );if _cbde =_aedc .WriteByte (_eaff );_cbde !=nil {return _cg .Wrap (_cbde ,_cbbb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_gefa .RetainFlag &&!_gefa .PageAssociationFieldSize {return nil ;};if _cbde =_aedc .SkipBits (-8);_cbde !=nil {return _cg .Wrap (_cbde ,_cbbb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _gafb int ;if _gefa .RetainFlag {_gafb =1;};if _cbde =_aedc .WriteBit (_gafb );_cbde !=nil {return _cg .Wrap (_cbde ,_cbbb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_gafb =0;if _gefa .PageAssociationFieldSize {_gafb =1;
};if _cbde =_aedc .WriteBit (_gafb );_cbde !=nil {return _cg .Wrap (_cbde ,_cbbb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_aedc .FinishByte ();return nil ;};func (_dabb *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _dabb .SdHuffDecodeHeightSelection {case 0:_cbge ,_beag :=_ca .GetStandardTable (4);
if _beag !=nil {return 0,_beag ;};return _cbge .Decode (_dabb ._afcf );case 1:_aecc ,_abfe :=_ca .GetStandardTable (5);if _abfe !=nil {return 0,_abfe ;};return _aecc .Decode (_dabb ._afcf );case 3:if _dabb ._bdad ==nil {_cadf ,_fccf :=_ca .GetStandardTable (0);
if _fccf !=nil {return 0,_fccf ;};_dabb ._bdad =_cadf ;};return _dabb ._bdad .Decode (_dabb ._afcf );};return 0,nil ;};func (_fgdf *GenericRegion )overrideAtTemplate0b (_cegad ,_adbb ,_cgd ,_eaeb ,_bfacg ,_gagg int )int {if _fgdf .GBAtOverride [0]{_cegad &=0xFFFD;
if _fgdf .GBAtY [0]==0&&_fgdf .GBAtX [0]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [0]&0x1))<<1;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [0]),_cgd +int (_fgdf .GBAtY [0])))<<1;};};if _fgdf .GBAtOverride [1]{_cegad &=0xDFFF;
if _fgdf .GBAtY [1]==0&&_fgdf .GBAtX [1]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [1]&0x1))<<13;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [1]),_cgd +int (_fgdf .GBAtY [1])))<<13;};};if _fgdf .GBAtOverride [2]{_cegad &=0xFDFF;
if _fgdf .GBAtY [2]==0&&_fgdf .GBAtX [2]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [2]&0x1))<<9;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [2]),_cgd +int (_fgdf .GBAtY [2])))<<9;};};if _fgdf .GBAtOverride [3]{_cegad &=0xBFFF;
if _fgdf .GBAtY [3]==0&&_fgdf .GBAtX [3]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [3]&0x1))<<14;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [3]),_cgd +int (_fgdf .GBAtY [3])))<<14;};};if _fgdf .GBAtOverride [4]{_cegad &=0xEFFF;
if _fgdf .GBAtY [4]==0&&_fgdf .GBAtX [4]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [4]&0x1))<<12;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [4]),_cgd +int (_fgdf .GBAtY [4])))<<12;};};if _fgdf .GBAtOverride [5]{_cegad &=0xFFDF;
if _fgdf .GBAtY [5]==0&&_fgdf .GBAtX [5]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [5]&0x1))<<5;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [5]),_cgd +int (_fgdf .GBAtY [5])))<<5;};};if _fgdf .GBAtOverride [6]{_cegad &=0xFFFB;
if _fgdf .GBAtY [6]==0&&_fgdf .GBAtX [6]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [6]&0x1))<<2;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [6]),_cgd +int (_fgdf .GBAtY [6])))<<2;};};if _fgdf .GBAtOverride [7]{_cegad &=0xFFF7;
if _fgdf .GBAtY [7]==0&&_fgdf .GBAtX [7]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [7]&0x1))<<3;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [7]),_cgd +int (_fgdf .GBAtY [7])))<<3;};};if _fgdf .GBAtOverride [8]{_cegad &=0xF7FF;
if _fgdf .GBAtY [8]==0&&_fgdf .GBAtX [8]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [8]&0x1))<<11;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [8]),_cgd +int (_fgdf .GBAtY [8])))<<11;};};if _fgdf .GBAtOverride [9]{_cegad &=0xFFEF;
if _fgdf .GBAtY [9]==0&&_fgdf .GBAtX [9]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [9]&0x1))<<4;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [9]),_cgd +int (_fgdf .GBAtY [9])))<<4;};};if _fgdf .GBAtOverride [10]{_cegad &=0x7FFF;
if _fgdf .GBAtY [10]==0&&_fgdf .GBAtX [10]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [10]&0x1))<<15;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [10]),_cgd +int (_fgdf .GBAtY [10])))<<15;};};if _fgdf .GBAtOverride [11]{_cegad &=0xFDFF;
if _fgdf .GBAtY [11]==0&&_fgdf .GBAtX [11]>=-int8 (_bfacg ){_cegad |=(_eaeb >>uint (int8 (_gagg )-_fgdf .GBAtX [11]&0x1))<<10;}else {_cegad |=int (_fgdf .getPixel (_adbb +int (_fgdf .GBAtX [11]),_cgd +int (_fgdf .GBAtY [11])))<<10;};};return _cegad ;};
func (_gaed *SymbolDictionary )InitEncode (symbols *_e .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _cdgg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_gaed .SdATX =[]int8 {3,-3,2,-2};_gaed .SdATY =[]int8 {-1,-1,-2,-2};_gaed ._fbdf =symbols ;_gaed ._adcd =make ([]int ,len (symbolList ));copy (_gaed ._adcd ,symbolList );if len (_gaed ._adcd )!=_gaed ._fbdf .Size (){return _cg .Error (_cdgg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_gaed .NumberOfNewSymbols =uint32 (symbols .Size ());_gaed .NumberOfExportedSymbols =uint32 (symbols .Size ());_gaed ._cafe =symbolMap ;_gaed ._caag =unborderSymbols ;return nil ;};func (_cbfa *PageInformationSegment )String ()string {_bbac :=&_d .Builder {};
_bbac .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_bbac .WriteString (_ff .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cbfa .PageBMHeight ));
_bbac .WriteString (_ff .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cbfa .PageBMWidth ));_bbac .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cbfa .ResolutionX ));
_bbac .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cbfa .ResolutionY ));_bbac .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cbfa ._gdab ));
_bbac .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cbfa ._bgef ));_bbac .WriteString (_ff .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cbfa .IsLossless ));
_bbac .WriteString (_ff .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cbfa ._efg ));_bbac .WriteString (_ff .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cbfa ._cbdc ));
_bbac .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cbfa .IsStripe ));_bbac .WriteString (_ff .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cbfa .MaxStripeSize ));
return _bbac .String ();};func (_fcgc *GenericRegion )decodeTemplate0a (_dbad ,_abac ,_ebg int ,_fcdd ,_ffcg int )(_gdfa error ){const _cbea ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_cfde ,_abaca int ;
_bag ,_afba int ;_aad byte ;_deag int ;);if _dbad >=1{_aad ,_gdfa =_fcgc .Bitmap .GetByte (_ffcg );if _gdfa !=nil {return _cg .Wrap (_gdfa ,_cbea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bag =int (_aad );};if _dbad >=2{_aad ,_gdfa =_fcgc .Bitmap .GetByte (_ffcg -_fcgc .Bitmap .RowStride );
if _gdfa !=nil {return _cg .Wrap (_gdfa ,_cbea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_afba =int (_aad )<<6;};_cfde =(_bag &0xf0)|(_afba &0x3800);for _ged :=0;_ged < _ebg ;_ged =_deag {var (_aegbf byte ;_abg int ;);_deag =_ged +8;if _bgf :=_abac -_ged ;
_bgf > 8{_abg =8;}else {_abg =_bgf ;};if _dbad > 0{_bag <<=8;if _deag < _abac {_aad ,_gdfa =_fcgc .Bitmap .GetByte (_ffcg +1);if _gdfa !=nil {return _cg .Wrap (_gdfa ,_cbea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bag |=int (_aad );};};if _dbad > 1{_ddbe :=_ffcg -_fcgc .Bitmap .RowStride +1;
_afba <<=8;if _deag < _abac {_aad ,_gdfa =_fcgc .Bitmap .GetByte (_ddbe );if _gdfa !=nil {return _cg .Wrap (_gdfa ,_cbea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_afba |=int (_aad )<<6;}else {_afba |=0;};};for _egbc :=0;_egbc < _abg ;_egbc ++{_dfb :=uint (7-_egbc );
if _fcgc ._adb {_abaca =_fcgc .overrideAtTemplate0a (_cfde ,_ged +_egbc ,_dbad ,int (_aegbf ),_egbc ,int (_dfb ));_fcgc ._geg .SetIndex (int32 (_abaca ));}else {_fcgc ._geg .SetIndex (int32 (_cfde ));};var _eed int ;_eed ,_gdfa =_fcgc ._fbc .DecodeBit (_fcgc ._geg );
if _gdfa !=nil {return _cg .Wrap (_gdfa ,_cbea ,"");};_aegbf |=byte (_eed )<<_dfb ;_cfde =((_cfde &0x7bf7)<<1)|_eed |((_bag >>_dfb )&0x10)|((_afba >>_dfb )&0x800);};if _ffgae :=_fcgc .Bitmap .SetByte (_fcdd ,_aegbf );_ffgae !=nil {return _cg .Wrap (_ffgae ,_cbea ,"");
};_fcdd ++;_ffcg ++;};return nil ;};func (_cbdd *PatternDictionary )checkInput ()error {if _cbdd .HdpHeight < 1||_cbdd .HdpWidth < 1{return _fc .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _cbdd .IsMMREncoded {if _cbdd .HDTemplate !=0{_caf .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_bcda *Header )readReferredToSegmentNumbers (_add *_fad .Reader ,_bbeb int )([]int ,error ){const _bcbe ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_dee :=make ([]int ,_bbeb );if _bbeb > 0{_bcda .RTSegments =make ([]*Header ,_bbeb );var (_bbab uint64 ;_bfc error ;);for _beegc :=0;_beegc < _bbeb ;_beegc ++{_bbab ,_bfc =_add .ReadBits (byte (_bcda .referenceSize ())<<3);if _bfc !=nil {return nil ,_cg .Wrapf (_bfc ,_bcbe ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_beegc );
};_dee [_beegc ]=int (_bbab &_cb .MaxInt32 );};};return _dee ,nil ;};func (_fadbc *PageInformationSegment )parseHeader ()(_debd error ){_caf .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _gaef ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _debd !=nil {_gaef +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_debd .Error ();}else {_gaef +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_caf .Log .Trace (_gaef );}();if _debd =_fadbc .readWidthAndHeight ();
_debd !=nil {return _debd ;};if _debd =_fadbc .readResolution ();_debd !=nil {return _debd ;};_ ,_debd =_fadbc ._eead .ReadBit ();if _debd !=nil {return _debd ;};if _debd =_fadbc .readCombinationOperatorOverrideAllowed ();_debd !=nil {return _debd ;};if _debd =_fadbc .readRequiresAuxiliaryBuffer ();
_debd !=nil {return _debd ;};if _debd =_fadbc .readCombinationOperator ();_debd !=nil {return _debd ;};if _debd =_fadbc .readDefaultPixelValue ();_debd !=nil {return _debd ;};if _debd =_fadbc .readContainsRefinement ();_debd !=nil {return _debd ;};if _debd =_fadbc .readIsLossless ();
_debd !=nil {return _debd ;};if _debd =_fadbc .readIsStriped ();_debd !=nil {return _debd ;};if _debd =_fadbc .readMaxStripeSize ();_debd !=nil {return _debd ;};if _debd =_fadbc .checkInput ();_debd !=nil {return _debd ;};_caf .Log .Trace ("\u0025\u0073",_fadbc );
return nil ;};func (_daeca Type )String ()string {switch _daeca {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_bdgf *RegionSegment )Encode (w _fad .BinaryWriter )(_cefb int ,_agca error ){const _eabe ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_agbec :=make ([]byte ,4);_fa .BigEndian .PutUint32 (_agbec ,_bdgf .BitmapWidth );_cefb ,_agca =w .Write (_agbec );if _agca !=nil {return 0,_cg .Wrap (_agca ,_eabe ,"\u0057\u0069\u0064t\u0068");};_fa .BigEndian .PutUint32 (_agbec ,_bdgf .BitmapHeight );
var _ecgbc int ;_ecgbc ,_agca =w .Write (_agbec );if _agca !=nil {return 0,_cg .Wrap (_agca ,_eabe ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_cefb +=_ecgbc ;_fa .BigEndian .PutUint32 (_agbec ,_bdgf .XLocation );_ecgbc ,_agca =w .Write (_agbec );if _agca !=nil {return 0,_cg .Wrap (_agca ,_eabe ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_cefb +=_ecgbc ;_fa .BigEndian .PutUint32 (_agbec ,_bdgf .YLocation );_ecgbc ,_agca =w .Write (_agbec );if _agca !=nil {return 0,_cg .Wrap (_agca ,_eabe ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_cefb +=_ecgbc ;if _agca =w .WriteByte (byte (_bdgf .CombinaionOperator )&0x07);
_agca !=nil {return 0,_cg .Wrap (_agca ,_eabe ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_cefb ++;return _cefb ,nil ;};func (_cabb *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bbcd int64 ,_bfgd ,_dgbe uint32 )(*_e .Bitmap ,error ){if _bbcd ==0{_cdeeb :=_e .New (int (_dgbe ),int (_bfgd ));
var (_adbd byte ;_bcbg error ;);for _daaab :=0;_daaab < len (_cdeeb .Data );_daaab ++{_adbd ,_bcbg =_cabb ._afcf .ReadByte ();if _bcbg !=nil {return nil ,_bcbg ;};if _bcbg =_cdeeb .SetByte (_daaab ,_adbd );_bcbg !=nil {return nil ,_bcbg ;};};return _cdeeb ,nil ;
};if _cabb ._daaa ==nil {_cabb ._daaa =NewGenericRegion (_cabb ._afcf );};_cabb ._daaa .setParameters (true ,_cabb ._afcf .AbsolutePosition (),_bbcd ,_bfgd ,_dgbe );_fgfc ,_cefab :=_cabb ._daaa .GetRegionBitmap ();if _cefab !=nil {return nil ,_cefab ;};
return _fgfc ,nil ;};func (_eaa *GenericRefinementRegion )setParameters (_ccf *_dd .DecoderStats ,_dbcd *_dd .Decoder ,_bbc int8 ,_cacd ,_abc uint32 ,_ffa *_e .Bitmap ,_bde ,_beb int32 ,_gde bool ,_afbe []int8 ,_gcd []int8 ){_caf .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ccf !=nil {_eaa ._ae =_ccf ;};if _dbcd !=nil {_eaa ._cda =_dbcd ;};_eaa .TemplateID =_bbc ;_eaa .RegionInfo .BitmapWidth =_cacd ;_eaa .RegionInfo .BitmapHeight =_abc ;_eaa .ReferenceBitmap =_ffa ;_eaa .ReferenceDX =_bde ;_eaa .ReferenceDY =_beb ;_eaa .IsTPGROn =_gde ;
_eaa .GrAtX =_afbe ;_eaa .GrAtY =_gcd ;_eaa .RegionBitmap =nil ;_caf .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_eaa );
};func (_bfce *PatternDictionary )setGbAtPixels (){if _bfce .HDTemplate ==0{_bfce .GBAtX =make ([]int8 ,4);_bfce .GBAtY =make ([]int8 ,4);_bfce .GBAtX [0]=-int8 (_bfce .HdpWidth );_bfce .GBAtY [0]=0;_bfce .GBAtX [1]=-3;_bfce .GBAtY [1]=-1;_bfce .GBAtX [2]=2;
_bfce .GBAtY [2]=-2;_bfce .GBAtX [3]=-2;_bfce .GBAtY [3]=-2;}else {_bfce .GBAtX =[]int8 {-int8 (_bfce .HdpWidth )};_bfce .GBAtY =[]int8 {0};};};type SymbolDictionary struct{_afcf *_fad .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_fcdc bool ;_ggca bool ;
SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;
NumberOfNewSymbols uint32 ;Header *Header ;_cgaa uint32 ;_fadf []*_e .Bitmap ;_aaa uint32 ;_gcff []*_e .Bitmap ;_bdad _ca .Tabler ;_gaea _ca .Tabler ;_bfg _ca .Tabler ;_ddaef _ca .Tabler ;_bdaf []*_e .Bitmap ;_gebe []*_e .Bitmap ;_fbb *_dd .Decoder ;_dggff *TextRegion ;
_daaa *GenericRegion ;_faga *GenericRefinementRegion ;_bfde *_dd .DecoderStats ;_dagb *_dd .DecoderStats ;_afeb *_dd .DecoderStats ;_fbag *_dd .DecoderStats ;_bfcea *_dd .DecoderStats ;_eeag *_dd .DecoderStats ;_eeeg *_dd .DecoderStats ;_bfdd *_dd .DecoderStats ;
_age *_dd .DecoderStats ;_dbadb int8 ;_fbdf *_e .Bitmaps ;_adcd []int ;_cafe map[int ]int ;_caag bool ;};func (_egfc *PageInformationSegment )readDefaultPixelValue ()error {_fef ,_cgfc :=_egfc ._eead .ReadBit ();if _cgfc !=nil {return _cgfc ;};_egfc .DefaultPixelValue =uint8 (_fef &0xf);
return nil ;};func (_abegg *Header )readNumberOfReferredToSegments (_fdafe *_fad .Reader )(uint64 ,error ){const _dgdd ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_beae ,_egcd :=_fdafe .ReadBits (3);if _egcd !=nil {return 0,_cg .Wrap (_egcd ,_dgdd ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_beae &=0xf;var _fdaa []byte ;if _beae <=4{_fdaa =make ([]byte ,5);for _dcd :=0;_dcd <=4;_dcd ++{_ccde ,_fdae :=_fdafe .ReadBit ();
if _fdae !=nil {return 0,_cg .Wrap (_fdae ,_dgdd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fdaa [_dcd ]=byte (_ccde );};}else {_beae ,_egcd =_fdafe .ReadBits (29);if _egcd !=nil {return 0,_egcd ;};_beae &=_cb .MaxInt32 ;
_egff :=(_beae +8)>>3;_egff <<=3;_fdaa =make ([]byte ,_egff );var _efca uint64 ;for _efca =0;_efca < _egff ;_efca ++{_fbfa ,_ccef :=_fdafe .ReadBit ();if _ccef !=nil {return 0,_cg .Wrap (_ccef ,_dgdd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_fdaa [_efca ]=byte (_fbfa );};};return _beae ,nil ;};type GenericRegion struct{_edg *_fad .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;
GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_adb bool ;Bitmap *_e .Bitmap ;_fbc *_dd .Decoder ;_geg *_dd .DecoderStats ;_gdg *_cd .Decoder ;};func (_fcg *GenericRefinementRegion )parseHeader ()(_ddc error ){_caf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_fed :=_b .Now ();defer func (){if _ddc ==nil {_caf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_b .Since (_fed ).Nanoseconds ());
}else {_caf .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ddc );
};}();if _ddc =_fcg .RegionInfo .parseHeader ();_ddc !=nil {return _ddc ;};_ ,_ddc =_fcg ._cf .ReadBits (6);if _ddc !=nil {return _ddc ;};_fcg .IsTPGROn ,_ddc =_fcg ._cf .ReadBool ();if _ddc !=nil {return _ddc ;};var _gcb int ;_gcb ,_ddc =_fcg ._cf .ReadBit ();
if _ddc !=nil {return _ddc ;};_fcg .TemplateID =int8 (_gcb );switch _fcg .TemplateID {case 0:_fcg .Template =_fcg ._faa ;if _ddc =_fcg .readAtPixels ();_ddc !=nil {return ;};case 1:_fcg .Template =_fcg ._gf ;};return nil ;};func (_dcc *GenericRegion )GetRegionBitmap ()(_cggf *_e .Bitmap ,_gbbc error ){if _dcc .Bitmap !=nil {return _dcc .Bitmap ,nil ;
};if _dcc .IsMMREncoded {if _dcc ._gdg ==nil {_dcc ._gdg ,_gbbc =_cd .New (_dcc ._edg ,int (_dcc .RegionSegment .BitmapWidth ),int (_dcc .RegionSegment .BitmapHeight ),_dcc .DataOffset ,_dcc .DataLength );if _gbbc !=nil {return nil ,_gbbc ;};};_dcc .Bitmap ,_gbbc =_dcc ._gdg .UncompressMMR ();
return _dcc .Bitmap ,_gbbc ;};if _gbbc =_dcc .updateOverrideFlags ();_gbbc !=nil {return nil ,_gbbc ;};var _eeea int ;if _dcc ._fbc ==nil {_dcc ._fbc ,_gbbc =_dd .New (_dcc ._edg );if _gbbc !=nil {return nil ,_gbbc ;};};if _dcc ._geg ==nil {_dcc ._geg =_dd .NewStats (65536,1);
};_dcc .Bitmap =_e .New (int (_dcc .RegionSegment .BitmapWidth ),int (_dcc .RegionSegment .BitmapHeight ));_edd :=int (uint32 (_dcc .Bitmap .Width +7)&(^uint32 (7)));for _bdc :=0;_bdc < _dcc .Bitmap .Height ;_bdc ++{if _dcc .IsTPGDon {var _abeg int ;_abeg ,_gbbc =_dcc .decodeSLTP ();
if _gbbc !=nil {return nil ,_gbbc ;};_eeea ^=_abeg ;};if _eeea ==1{if _bdc > 0{if _gbbc =_dcc .copyLineAbove (_bdc );_gbbc !=nil {return nil ,_gbbc ;};};}else {if _gbbc =_dcc .decodeLine (_bdc ,_dcc .Bitmap .Width ,_edd );_gbbc !=nil {return nil ,_gbbc ;
};};};return _dcc .Bitmap ,nil ;};func (_eagd *GenericRegion )writeGBAtPixels (_ggcc _fad .BinaryWriter )(_bdce int ,_fedc error ){const _afae ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _eagd .UseMMR {return 0,nil ;
};_gebd :=1;if _eagd .GBTemplate ==0{_gebd =4;}else if _eagd .UseExtTemplates {_gebd =12;};if len (_eagd .GBAtX )!=_gebd {return 0,_cg .Errorf (_afae ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_eagd .GBAtY )!=_gebd {return 0,_cg .Errorf (_afae ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _bcd :=0;_bcd < _gebd ;_bcd ++{if _fedc =_ggcc .WriteByte (byte (_eagd .GBAtX [_bcd ]));_fedc !=nil {return _bdce ,_cg .Wrap (_fedc ,_afae ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bdce ++;if _fedc =_ggcc .WriteByte (byte (_eagd .GBAtY [_bcd ]));
_fedc !=nil {return _bdce ,_cg .Wrap (_fedc ,_afae ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bdce ++;};return _bdce ,nil ;};func (_eaab *SymbolDictionary )Encode (w _fad .BinaryWriter )(_gcab int ,_cbba error ){const _dcafa ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _eaab ==nil {return 0,_cg .Error (_dcafa ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _gcab ,_cbba =_eaab .encodeFlags (w );_cbba !=nil {return _gcab ,_cg .Wrap (_cbba ,_dcafa ,"");
};_abcfg ,_cbba :=_eaab .encodeATFlags (w );if _cbba !=nil {return _gcab ,_cg .Wrap (_cbba ,_dcafa ,"");};_gcab +=_abcfg ;if _abcfg ,_cbba =_eaab .encodeRefinementATFlags (w );_cbba !=nil {return _gcab ,_cg .Wrap (_cbba ,_dcafa ,"");};_gcab +=_abcfg ;if _abcfg ,_cbba =_eaab .encodeNumSyms (w );
_cbba !=nil {return _gcab ,_cg .Wrap (_cbba ,_dcafa ,"");};_gcab +=_abcfg ;if _abcfg ,_cbba =_eaab .encodeSymbols (w );_cbba !=nil {return _gcab ,_cg .Wrap (_cbba ,_dcafa ,"");};_gcab +=_abcfg ;return _gcab ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_eagf *TextRegion )encodeFlags (_faaa _fad .BinaryWriter )(_acaa int ,_edfg error ){const _bfgad ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _edfg =_faaa .WriteBit (int (_eagf .SbrTemplate ));
_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_edfg =_faaa .WriteBits (uint64 (_eagf .SbDsOffset ),5);_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _edfg =_faaa .WriteBit (int (_eagf .DefaultPixel ));_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_edfg =_faaa .WriteBits (uint64 (_eagf .CombinationOperator ),2);
_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _edfg =_faaa .WriteBit (int (_eagf .IsTransposed ));_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_edfg =_faaa .WriteBits (uint64 (_eagf .ReferenceCorner ),2);_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_edfg =_faaa .WriteBits (uint64 (_eagf .LogSBStrips ),2);
_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _cccb int ;if _eagf .UseRefinement {_cccb =1;};if _edfg =_faaa .WriteBit (_cccb );_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_cccb =0;if _eagf .IsHuffmanEncoded {_cccb =1;};if _edfg =_faaa .WriteBit (_cccb );_edfg !=nil {return _acaa ,_cg .Wrap (_edfg ,_bfgad ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_acaa =2;return _acaa ,nil ;};func (_gbg *template1 )form (_ega ,_bcb ,_dbd ,_faac ,_cbgg int16 )int16 {return ((_ega &0x02)<<8)|(_bcb <<6)|((_dbd &0x03)<<4)|(_faac <<1)|_cbgg ;
};func (_gce *Header )parse (_eabc Documenter ,_egc *_fad .Reader ,_ddae int64 ,_edc OrganizationType )(_ebab error ){const _gaec ="\u0070\u0061\u0072s\u0065";_caf .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _ebab !=nil {_caf .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ebab );}else {_caf .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_ebab =_egc .Seek (_ddae ,_a .SeekStart );if _ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ebab =_gce .readSegmentNumber (_egc );_ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"");
};if _ebab =_gce .readHeaderFlags ();_ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"");};var _cdeea uint64 ;_cdeea ,_ebab =_gce .readNumberOfReferredToSegments (_egc );if _ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"");};_gce .RTSNumbers ,_ebab =_gce .readReferredToSegmentNumbers (_egc ,int (_cdeea ));
if _ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"");};_ebab =_gce .readSegmentPageAssociation (_eabc ,_egc ,_cdeea ,_gce .RTSNumbers ...);if _ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"");};if _gce .Type !=TEndOfFile {if _ebab =_gce .readSegmentDataLength (_egc );
_ebab !=nil {return _cg .Wrap (_ebab ,_gaec ,"");};};_gce .readDataStartOffset (_egc ,_edc );_gce .readHeaderLength (_egc ,_ddae );_caf .Log .Trace ("\u0025\u0073",_gce );return nil ;};func (_dge *PageInformationSegment )readCombinationOperator ()error {_bbef ,_eddg :=_dge ._eead .ReadBits (2);
if _eddg !=nil {return _eddg ;};_dge ._gdab =_e .CombinationOperator (int (_bbef ));return nil ;};var (_bebg Segmenter ;_eeg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bebg },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bebg },TProfiles :func ()Segmenter {return _bebg },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bebg },TBitmap :func ()Segmenter {return _bebg }};
);func (_addb *SymbolDictionary )decodeDirectlyThroughGenericRegion (_addg ,_gggd uint32 )error {if _addb ._daaa ==nil {_addb ._daaa =NewGenericRegion (_addb ._afcf );};_addb ._daaa .setParametersWithAt (false ,byte (_addb .SdTemplate ),false ,false ,_addb .SdATX ,_addb .SdATY ,_addg ,_gggd ,_addb ._bfde ,_addb ._fbb );
return _addb .addSymbol (_addb ._daaa );};func (_cddea *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _cddea ._bgef };func (_bf *GenericRefinementRegion )GetRegionBitmap ()(*_e .Bitmap ,error ){var _cbf error ;_caf .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _cbf !=nil {_caf .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cbf );
}else {_caf .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bf .RegionBitmap !=nil {return _bf .RegionBitmap ,nil ;};_afg :=0;if _bf .ReferenceBitmap ==nil {_bf .ReferenceBitmap ,_cbf =_bf .getGrReference ();if _cbf !=nil {return nil ,_cbf ;};};if _bf ._cda ==nil {_bf ._cda ,_cbf =_dd .New (_bf ._cf );
if _cbf !=nil {return nil ,_cbf ;};};if _bf ._ae ==nil {_bf ._ae =_dd .NewStats (8192,1);};_bf .RegionBitmap =_e .New (int (_bf .RegionInfo .BitmapWidth ),int (_bf .RegionInfo .BitmapHeight ));if _bf .TemplateID ==0{if _cbf =_bf .updateOverride ();_cbf !=nil {return nil ,_cbf ;
};};_cdf :=(_bf .RegionBitmap .Width +7)&-8;var _be int ;if _bf .IsTPGROn {_be =int (-_bf .ReferenceDY )*_bf .ReferenceBitmap .RowStride ;};_ef :=_be +1;for _da :=0;_da < _bf .RegionBitmap .Height ;_da ++{if _bf .IsTPGROn {_ffg ,_ad :=_bf .decodeSLTP ();
if _ad !=nil {return nil ,_ad ;};_afg ^=_ffg ;};if _afg ==0{_cbf =_bf .decodeOptimized (_da ,_bf .RegionBitmap .Width ,_bf .RegionBitmap .RowStride ,_bf .ReferenceBitmap .RowStride ,_cdf ,_be ,_ef );if _cbf !=nil {return nil ,_cbf ;};}else {_cbf =_bf .decodeTypicalPredictedLine (_da ,_bf .RegionBitmap .Width ,_bf .RegionBitmap .RowStride ,_bf .ReferenceBitmap .RowStride ,_cdf ,_be );
if _cbf !=nil {return nil ,_cbf ;};};};return _bf .RegionBitmap ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_eafa *TextRegion )decodeSymbolInstances ()error {_egad ,_aeec :=_eafa .decodeStripT ();if _aeec !=nil {return _aeec ;};var (_dccd int64 ;
_gafa uint32 ;);for _gafa < _eafa .NumberOfSymbolInstances {_ceag ,_bdab :=_eafa .decodeDT ();if _bdab !=nil {return _bdab ;};_egad +=_ceag ;var _ccbd int64 ;_fgbc :=true ;_eafa ._gggf =0;for {if _fgbc {_ccbd ,_bdab =_eafa .decodeDfs ();if _bdab !=nil {return _bdab ;
};_dccd +=_ccbd ;_eafa ._gggf =_dccd ;_fgbc =false ;}else {_ceba ,_edbgf :=_eafa .decodeIds ();if _bb .Is (_edbgf ,_ffb .ErrOOB ){break ;};if _edbgf !=nil {return _edbgf ;};if _gafa >=_eafa .NumberOfSymbolInstances {break ;};_eafa ._gggf +=_ceba +int64 (_eafa .SbDsOffset );
};_cegf ,_egae :=_eafa .decodeCurrentT ();if _egae !=nil {return _egae ;};_bcdc :=_egad +_cegf ;_bbbg ,_egae :=_eafa .decodeID ();if _egae !=nil {return _egae ;};_gccf ,_egae :=_eafa .decodeRI ();if _egae !=nil {return _egae ;};_gdag ,_egae :=_eafa .decodeIb (_gccf ,_bbbg );
if _egae !=nil {return _egae ;};if _egae =_eafa .blit (_gdag ,_bcdc );_egae !=nil {return _egae ;};_gafa ++;};};return nil ;};func (_ecgd *SymbolDictionary )addSymbol (_daba Regioner )error {_gbcg ,_cbgb :=_daba .GetRegionBitmap ();if _cbgb !=nil {return _cbgb ;
};_ecgd ._gcff [_ecgd ._aaa ]=_gbcg ;_ecgd ._gebe =append (_ecgd ._gebe ,_gbcg );_caf .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gbcg );
return nil ;};func (_fgaa *RegionSegment )readCombinationOperator ()error {_bcg ,_gfbf :=_fgaa ._bead .ReadBits (3);if _gfbf !=nil {return _gfbf ;};_fgaa .CombinaionOperator =_e .CombinationOperator (_bcg &0xF);return nil ;};func _bgeg (_adef *_fad .Reader ,_ggba *Header )*TextRegion {_geacc :=&TextRegion {_eadg :_adef ,Header :_ggba ,RegionInfo :NewRegionSegment (_adef )};
return _geacc ;};func (_fbca *SymbolDictionary )checkInput ()error {if _fbca .SdHuffDecodeHeightSelection ==2{_caf .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_fbca .SdHuffDecodeHeightSelection );
};if _fbca .SdHuffDecodeWidthSelection ==2{_caf .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_fbca .SdHuffDecodeWidthSelection );
};if _fbca .IsHuffmanEncoded {if _fbca .SdTemplate !=0{_caf .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_fbca .SdTemplate );
};if !_fbca .UseRefinementAggregation {if !_fbca .UseRefinementAggregation {if _fbca ._fcdc {_caf .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_fbca ._fcdc =false ;};if _fbca ._ggca {_caf .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_fbca ._ggca =false ;};};};}else {if _fbca .SdHuffBMSizeSelection !=0{_caf .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fbca .SdHuffBMSizeSelection =0;};if _fbca .SdHuffDecodeWidthSelection !=0{_caf .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_fbca .SdHuffDecodeWidthSelection =0;};if _fbca .SdHuffDecodeHeightSelection !=0{_caf .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_fbca .SdHuffDecodeHeightSelection =0;};};if !_fbca .UseRefinementAggregation {if _fbca .SdrTemplate !=0{_caf .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fbca .SdrTemplate );
_fbca .SdrTemplate =0;};};if !_fbca .IsHuffmanEncoded ||!_fbca .UseRefinementAggregation {if _fbca .SdHuffAggInstanceSelection {_caf .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_fbca .SdHuffAggInstanceSelection );
};};return nil ;};type EndOfStripe struct{_ddb *_fad .Reader ;_ab int ;};func (_accd *SymbolDictionary )decodeAggregate (_fbea ,_fege uint32 )error {var (_aedde int64 ;_gecd error ;);if _accd .IsHuffmanEncoded {_aedde ,_gecd =_accd .huffDecodeRefAggNInst ();
if _gecd !=nil {return _gecd ;};}else {_cgbb ,_fbeag :=_accd ._fbb .DecodeInt (_accd ._fbag );if _fbeag !=nil {return _fbeag ;};_aedde =int64 (_cgbb );};if _aedde > 1{return _accd .decodeThroughTextRegion (_fbea ,_fege ,uint32 (_aedde ));}else if _aedde ==1{return _accd .decodeRefinedSymbol (_fbea ,_fege );
};return nil ;};func (_gdeb *PatternDictionary )readGrayMax ()error {_ebedb ,_abab :=_gdeb ._ddgc .ReadBits (32);if _abab !=nil {return _abab ;};_gdeb .GrayMax =uint32 (_ebedb &_cb .MaxUint32 );return nil ;};func (_cgaf *SymbolDictionary )encodeNumSyms (_gage _fad .BinaryWriter )(_acad int ,_ebfb error ){const _eeed ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_daffd :=make ([]byte ,4);_fa .BigEndian .PutUint32 (_daffd ,_cgaf .NumberOfExportedSymbols );if _acad ,_ebfb =_gage .Write (_daffd );_ebfb !=nil {return _acad ,_cg .Wrap (_ebfb ,_eeed ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_fa .BigEndian .PutUint32 (_daffd ,_cgaf .NumberOfNewSymbols );_dggeb ,_ebfb :=_gage .Write (_daffd );if _ebfb !=nil {return _acad ,_cg .Wrap (_ebfb ,_eeed ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _acad +_dggeb ,nil ;
};func (_gbcf *PageInformationSegment )readResolution ()error {_bda ,_ffbg :=_gbcf ._eead .ReadBits (32);if _ffbg !=nil {return _ffbg ;};_gbcf .ResolutionX =int (_bda &_cb .MaxInt32 );_bda ,_ffbg =_gbcf ._eead .ReadBits (32);if _ffbg !=nil {return _ffbg ;
};_gbcf .ResolutionY =int (_bda &_cb .MaxInt32 );return nil ;};type Regioner interface{GetRegionBitmap ()(*_e .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_gfa *template0 )setIndex (_gbb *_dd .DecoderStats ){_gbb .SetIndex (0x100)};type HalftoneRegion struct{_ggab *_fad .Reader ;
_cdd *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_e .Bitmap ;Patterns []*_e .Bitmap ;};func (_dgf *PageInformationSegment )readContainsRefinement ()error {_ddcag ,_dgff :=_dgf ._eead .ReadBit ();if _dgff !=nil {return _dgff ;
};if _ddcag ==1{_dgf ._cbdc =true ;};return nil ;};func NewGenericRegion (r *_fad .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_edg :r };};type TableSegment struct{_dedb *_fad .Reader ;_dafd int32 ;_eeega int32 ;
_fcgb int32 ;_deea int32 ;_cdcb int32 ;};func (_gad *Header )readHeaderFlags ()error {const _cdca ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_dfdb ,_dfbe :=_gad .Reader .ReadBit ();if _dfbe !=nil {return _cg .Wrap (_dfbe ,_cdca ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _dfdb !=0{_gad .RetainFlag =true ;};_dfdb ,_dfbe =_gad .Reader .ReadBit ();if _dfbe !=nil {return _cg .Wrap (_dfbe ,_cdca ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _dfdb !=0{_gad .PageAssociationFieldSize =true ;
};_dfdd ,_dfbe :=_gad .Reader .ReadBits (6);if _dfbe !=nil {return _cg .Wrap (_dfbe ,_cdca ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_gad .Type =Type (int (_dfdd ));return nil ;};func (_abacab *RegionSegment )parseHeader ()error {const _dfcc ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_caf .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_caf .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_aeba ,_ebcca :=_abacab ._bead .ReadBits (32);if _ebcca !=nil {return _cg .Wrap (_ebcca ,_dfcc ,"\u0077\u0069\u0064t\u0068");};_abacab .BitmapWidth =uint32 (_aeba &_cb .MaxUint32 );_aeba ,_ebcca =_abacab ._bead .ReadBits (32);if _ebcca !=nil {return _cg .Wrap (_ebcca ,_dfcc ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_abacab .BitmapHeight =uint32 (_aeba &_cb .MaxUint32 );_aeba ,_ebcca =_abacab ._bead .ReadBits (32);if _ebcca !=nil {return _cg .Wrap (_ebcca ,_dfcc ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_abacab .XLocation =uint32 (_aeba &_cb .MaxUint32 );
_aeba ,_ebcca =_abacab ._bead .ReadBits (32);if _ebcca !=nil {return _cg .Wrap (_ebcca ,_dfcc ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_abacab .YLocation =uint32 (_aeba &_cb .MaxUint32 );if _ ,_ebcca =_abacab ._bead .ReadBits (5);
_ebcca !=nil {return _cg .Wrap (_ebcca ,_dfcc ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _ebcca =_abacab .readCombinationOperator ();_ebcca !=nil {return _cg .Wrap (_ebcca ,_dfcc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};return nil ;};func (_dbbf *Header )writeSegmentNumber (_decg _fad .BinaryWriter )(_cbggc int ,_gecfg error ){_egacd :=make ([]byte ,4);_fa .BigEndian .PutUint32 (_egacd ,_dbbf .SegmentNumber );if _cbggc ,_gecfg =_decg .Write (_egacd );_gecfg !=nil {return 0,_cg .Wrap (_gecfg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _cbggc ,nil ;};func (_gaee *TableSegment )HtHigh ()int32 {return _gaee ._cdcb };func (_gdbg *TextRegion )setParameters (_efdc *_dd .Decoder ,_efac ,_dbba bool ,_bfdef ,_fgbce uint32 ,_ggcd uint32 ,_gbcgb int8 ,_dbcc uint32 ,_edbd int8 ,_fafbg _e .CombinationOperator ,_ddf int8 ,_dede int16 ,_edga ,_fcab ,_dcaa ,_egbd ,_ggfce ,_adac ,_eeeaa ,_adacf ,_bfbba ,_fdda int8 ,_cdbeb ,_dgcf []int8 ,_geacg []*_e .Bitmap ,_afebd int8 ){_gdbg ._ggfc =_efdc ;
_gdbg .IsHuffmanEncoded =_efac ;_gdbg .UseRefinement =_dbba ;_gdbg .RegionInfo .BitmapWidth =_bfdef ;_gdbg .RegionInfo .BitmapHeight =_fgbce ;_gdbg .NumberOfSymbolInstances =_ggcd ;_gdbg .SbStrips =_gbcgb ;_gdbg .NumberOfSymbols =_dbcc ;_gdbg .DefaultPixel =_edbd ;
_gdbg .CombinationOperator =_fafbg ;_gdbg .IsTransposed =_ddf ;_gdbg .ReferenceCorner =_dede ;_gdbg .SbDsOffset =_edga ;_gdbg .SbHuffFS =_fcab ;_gdbg .SbHuffDS =_dcaa ;_gdbg .SbHuffDT =_egbd ;_gdbg .SbHuffRDWidth =_ggfce ;_gdbg .SbHuffRDHeight =_adac ;
_gdbg .SbHuffRSize =_bfbba ;_gdbg .SbHuffRDX =_eeeaa ;_gdbg .SbHuffRDY =_adacf ;_gdbg .SbrTemplate =_fdda ;_gdbg .SbrATX =_cdbeb ;_gdbg .SbrATY =_dgcf ;_gdbg .Symbols =_geacg ;_gdbg ._bafc =_afebd ;};func (_bfac *template1 )setIndex (_dege *_dd .DecoderStats ){_dege .SetIndex (0x080)};
func (_dca *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _dca .RegionInfo };func (_ecbgd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ecbgd .IsHuffmanEncoded {switch _ecbgd .SdHuffDecodeWidthSelection {case 0:_bbabc ,_dgce :=_ca .GetStandardTable (2);
if _dgce !=nil {return 0,_dgce ;};return _bbabc .Decode (_ecbgd ._afcf );case 1:_dagba ,_eedg :=_ca .GetStandardTable (3);if _eedg !=nil {return 0,_eedg ;};return _dagba .Decode (_ecbgd ._afcf );case 3:if _ecbgd ._gaea ==nil {var _gaaa int ;if _ecbgd .SdHuffDecodeHeightSelection ==3{_gaaa ++;
};_abbf ,_dffd :=_ecbgd .getUserTable (_gaaa );if _dffd !=nil {return 0,_dffd ;};_ecbgd ._gaea =_abbf ;};return _ecbgd ._gaea .Decode (_ecbgd ._afcf );};}else {_ggcg ,_dfdg :=_ecbgd ._fbb .DecodeInt (_ecbgd ._afeb );if _dfdg !=nil {return 0,_dfdg ;};return int64 (_ggcg ),nil ;
};return 0,nil ;};func (_fbcdf *TableSegment )HtLow ()int32 {return _fbcdf ._deea };func (_ebed *HalftoneRegion )Init (hd *Header ,r *_fad .Reader )error {_ebed ._ggab =r ;_ebed ._cdd =hd ;_ebed .RegionSegment =NewRegionSegment (r );return _ebed .parseHeader ();
};func (_gacg *GenericRegion )setParametersMMR (_cdee bool ,_fca ,_edfe int64 ,_aabc ,_ecgb uint32 ,_dcf byte ,_gdac ,_ebe bool ,_abegb ,_efad []int8 ){_gacg .DataOffset =_fca ;_gacg .DataLength =_edfe ;_gacg .RegionSegment =&RegionSegment {};_gacg .RegionSegment .BitmapHeight =_aabc ;
_gacg .RegionSegment .BitmapWidth =_ecgb ;_gacg .GBTemplate =_dcf ;_gacg .IsMMREncoded =_cdee ;_gacg .IsTPGDon =_gdac ;_gacg .GBAtX =_abegb ;_gacg .GBAtY =_efad ;};func (_gg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_gg .Template .setIndex (_gg ._ae );
return _gg ._cda .DecodeBit (_gg ._ae );};type PatternDictionary struct{_ddgc *_fad .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;
HdpHeight byte ;Patterns []*_e .Bitmap ;GrayMax uint32 ;};func (_ddcc *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_e .Points ,symbols *_e .Bitmaps ,classIDs *_ce .IntSlice ,boxes *_e .Boxes ,width ,height ,symBits int ){_ddcc .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_ddcc ._debdf =globalSymbolsMap ;_ddcc ._bcfe =localSymbolsMap ;_ddcc ._bga =comps ;_ddcc ._gegg =inLL ;_ddcc ._bece =symbols ;_ddcc ._ebfc =classIDs ;_ddcc ._eggfc =boxes ;_ddcc ._ccgc =symBits ;};func (_abag *TextRegion )symbolIDCodeLengths ()error {var (_feeb []*_ca .Code ;
_edbee uint64 ;_fabf _ca .Tabler ;_bcad error ;);for _fbcaf :=0;_fbcaf < 35;_fbcaf ++{_edbee ,_bcad =_abag ._eadg .ReadBits (4);if _bcad !=nil {return _bcad ;};_defg :=int (_edbee &0xf);if _defg > 0{_feeb =append (_feeb ,_ca .NewCode (int32 (_defg ),0,int32 (_fbcaf ),false ));
};};_fabf ,_bcad =_ca .NewFixedSizeTable (_feeb );if _bcad !=nil {return _bcad ;};var (_cbbba int64 ;_ecba uint32 ;_aaag []*_ca .Code ;_eecfb int64 ;);for _ecba < _abag .NumberOfSymbols {_eecfb ,_bcad =_fabf .Decode (_abag ._eadg );if _bcad !=nil {return _bcad ;
};if _eecfb < 32{if _eecfb > 0{_aaag =append (_aaag ,_ca .NewCode (int32 (_eecfb ),0,int32 (_ecba ),false ));};_cbbba =_eecfb ;_ecba ++;}else {var _eddfa ,_bbcbe int64 ;switch _eecfb {case 32:_edbee ,_bcad =_abag ._eadg .ReadBits (2);if _bcad !=nil {return _bcad ;
};_eddfa =3+int64 (_edbee );if _ecba > 0{_bbcbe =_cbbba ;};case 33:_edbee ,_bcad =_abag ._eadg .ReadBits (3);if _bcad !=nil {return _bcad ;};_eddfa =3+int64 (_edbee );case 34:_edbee ,_bcad =_abag ._eadg .ReadBits (7);if _bcad !=nil {return _bcad ;};_eddfa =11+int64 (_edbee );
};for _ggded :=0;_ggded < int (_eddfa );_ggded ++{if _bbcbe > 0{_aaag =append (_aaag ,_ca .NewCode (int32 (_bbcbe ),0,int32 (_ecba ),false ));};_ecba ++;};};};_abag ._eadg .Align ();_abag ._dbdc ,_bcad =_ca .NewFixedSizeTable (_aaag );return _bcad ;};func (_aebdgg *SymbolDictionary )encodeFlags (_fbdb _fad .BinaryWriter )(_fabe int ,_ceae error ){const _dbcf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ceae =_fbdb .SkipBits (3);_ceae !=nil {return 0,_cg .Wrap (_ceae ,_dbcf ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dffc int ;if _aebdgg .SdrTemplate > 0{_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dffc =0;if _aebdgg .SdTemplate > 1{_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dffc =0;if _aebdgg .SdTemplate ==1||_aebdgg .SdTemplate ==3{_dffc =1;
};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dffc =0;if _aebdgg ._fcdc {_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dffc =0;if _aebdgg ._ggca {_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dffc =0;if _aebdgg .SdHuffAggInstanceSelection {_dffc =1;
};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dffc =int (_aebdgg .SdHuffBMSizeSelection );if _ceae =_fbdb .WriteBit (_dffc );
_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_dffc =0;if _aebdgg .SdHuffDecodeWidthSelection > 1{_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_dffc =0;switch _aebdgg .SdHuffDecodeWidthSelection {case 1,3:_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dffc =0;if _aebdgg .SdHuffDecodeHeightSelection > 1{_dffc =1;
};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dffc =0;switch _aebdgg .SdHuffDecodeHeightSelection {case 1,3:_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );
_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dffc =0;if _aebdgg .UseRefinementAggregation {_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_dffc =0;if _aebdgg .IsHuffmanEncoded {_dffc =1;};if _ceae =_fbdb .WriteBit (_dffc );_ceae !=nil {return _fabe ,_cg .Wrap (_ceae ,_dbcf ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_cegb *TextRegion )decodeStripT ()(_fdcf int64 ,_aedca error ){if _cegb .IsHuffmanEncoded {if _cegb .SbHuffDT ==3{if _cegb ._ccbf ==nil {var _ecad int ;
if _cegb .SbHuffFS ==3{_ecad ++;};if _cegb .SbHuffDS ==3{_ecad ++;};_cegb ._ccbf ,_aedca =_cegb .getUserTable (_ecad );if _aedca !=nil {return 0,_aedca ;};};_fdcf ,_aedca =_cegb ._ccbf .Decode (_cegb ._eadg );if _aedca !=nil {return 0,_aedca ;};}else {var _ddccb _ca .Tabler ;
_ddccb ,_aedca =_ca .GetStandardTable (11+int (_cegb .SbHuffDT ));if _aedca !=nil {return 0,_aedca ;};_fdcf ,_aedca =_ddccb .Decode (_cegb ._eadg );if _aedca !=nil {return 0,_aedca ;};};}else {var _ceaa int32 ;_ceaa ,_aedca =_cegb ._ggfc .DecodeInt (_cegb ._egaga );
if _aedca !=nil {return 0,_aedca ;};_fdcf =int64 (_ceaa );};_fdcf *=int64 (-_cegb .SbStrips );return _fdcf ,nil ;};func (_dcafae *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _feed ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _dcafae .SbHuffRSize ==0{_fcde ,_fabg :=_ca .GetStandardTable (1);if _fabg !=nil {return 0,_cg .Wrap (_fabg ,_feed ,"");};return _fcde .Decode (_dcafae ._eadg );};if _dcafae ._gbae ==nil {var (_bfffb int ;_ecaf error ;);if _dcafae .SbHuffFS ==3{_bfffb ++;
};if _dcafae .SbHuffDS ==3{_bfffb ++;};if _dcafae .SbHuffDT ==3{_bfffb ++;};if _dcafae .SbHuffRDWidth ==3{_bfffb ++;};if _dcafae .SbHuffRDHeight ==3{_bfffb ++;};if _dcafae .SbHuffRDX ==3{_bfffb ++;};if _dcafae .SbHuffRDY ==3{_bfffb ++;};_dcafae ._gbae ,_ecaf =_dcafae .getUserTable (_bfffb );
if _ecaf !=nil {return 0,_cg .Wrap (_ecaf ,_feed ,"");};};_cabbd ,_ffab :=_dcafae ._gbae .Decode (_dcafae ._eadg );if _ffab !=nil {return 0,_cg .Wrap (_ffab ,_feed ,"");};return _cabbd ,nil ;};func (_dbb *Header )writeReferredToSegments (_fbdc _fad .BinaryWriter )(_gedd int ,_gaa error ){const _cdef ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cccag uint16 ;_bbca uint32 ;);_fedf :=_dbb .referenceSize ();_affc :=1;_adgdf :=make ([]byte ,_fedf );for _ ,_cbded :=range _dbb .RTSNumbers {switch _fedf {case 4:_bbca =uint32 (_cbded );_fa .BigEndian .PutUint32 (_adgdf ,_bbca );_affc ,_gaa =_fbdc .Write (_adgdf );
if _gaa !=nil {return 0,_cg .Wrap (_gaa ,_cdef ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cccag =uint16 (_cbded );_fa .BigEndian .PutUint16 (_adgdf ,_cccag );_affc ,_gaa =_fbdc .Write (_adgdf );if _gaa !=nil {return 0,_cg .Wrap (_gaa ,_cdef ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _gaa =_fbdc .WriteByte (byte (_cbded ));_gaa !=nil {return 0,_cg .Wrap (_gaa ,_cdef ,"\u0075\u0069\u006et\u0038");};};_gedd +=_affc ;};return _gedd ,nil ;};func (_ag *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ggd ,_bfe ,_eef ,_cfd ,_fgg ,_agd ,_bg ,_bef ,_abf int )error {var (_ffga ,_eb ,_bfa ,_eec ,_bfd ,_bc int ;
_dcaf byte ;_cff error ;);if _ggd > 0{_dcaf ,_cff =_ag .RegionBitmap .GetByte (_bg -_eef );if _cff !=nil {return _cff ;};_bfa =int (_dcaf );};if _bef > 0&&_bef <=_ag .ReferenceBitmap .Height {_dcaf ,_cff =_ag .ReferenceBitmap .GetByte (_abf -_cfd +_agd );
if _cff !=nil {return _cff ;};_eec =int (_dcaf )<<4;};if _bef >=0&&_bef < _ag .ReferenceBitmap .Height {_dcaf ,_cff =_ag .ReferenceBitmap .GetByte (_abf +_agd );if _cff !=nil {return _cff ;};_bfd =int (_dcaf )<<1;};if _bef > -2&&_bef < _ag .ReferenceBitmap .Height -1{_dcaf ,_cff =_ag .ReferenceBitmap .GetByte (_abf +_cfd +_agd );
if _cff !=nil {return _cff ;};_bc =int (_dcaf );};_ffga =((_bfa >>5)&0x6)|((_bc >>2)&0x30)|(_bfd &0x180)|(_eec &0xc00);var _gag int ;for _eff :=0;_eff < _fgg ;_eff =_gag {var _gec int ;_gag =_eff +8;var _ecb int ;if _ecb =_bfe -_eff ;_ecb > 8{_ecb =8;};
_ea :=_gag < _bfe ;_ead :=_gag < _ag .ReferenceBitmap .Width ;_daa :=_agd +1;if _ggd > 0{_dcaf =0;if _ea {_dcaf ,_cff =_ag .RegionBitmap .GetByte (_bg -_eef +1);if _cff !=nil {return _cff ;};};_bfa =(_bfa <<8)|int (_dcaf );};if _bef > 0&&_bef <=_ag .ReferenceBitmap .Height {var _efa int ;
if _ead {_dcaf ,_cff =_ag .ReferenceBitmap .GetByte (_abf -_cfd +_daa );if _cff !=nil {return _cff ;};_efa =int (_dcaf )<<4;};_eec =(_eec <<8)|_efa ;};if _bef >=0&&_bef < _ag .ReferenceBitmap .Height {var _cde int ;if _ead {_dcaf ,_cff =_ag .ReferenceBitmap .GetByte (_abf +_daa );
if _cff !=nil {return _cff ;};_cde =int (_dcaf )<<1;};_bfd =(_bfd <<8)|_cde ;};if _bef > -2&&_bef < (_ag .ReferenceBitmap .Height -1){_dcaf =0;if _ead {_dcaf ,_cff =_ag .ReferenceBitmap .GetByte (_abf +_cfd +_daa );if _cff !=nil {return _cff ;};};_bc =(_bc <<8)|int (_dcaf );
};for _ebf :=0;_ebf < _ecb ;_ebf ++{var _aeb int ;_efe :=false ;_aeg :=(_ffga >>4)&0x1ff;if _aeg ==0x1ff{_efe =true ;_aeb =1;}else if _aeg ==0x00{_efe =true ;};if !_efe {if _ag ._gd {_eb =_ag .overrideAtTemplate0 (_ffga ,_eff +_ebf ,_ggd ,_gec ,_ebf );
_ag ._ae .SetIndex (int32 (_eb ));}else {_ag ._ae .SetIndex (int32 (_ffga ));};_aeb ,_cff =_ag ._cda .DecodeBit (_ag ._ae );if _cff !=nil {return _cff ;};};_fba :=uint (7-_ebf );_gec |=_aeb <<_fba ;_ffga =((_ffga &0xdb6)<<1)|_aeb |(_bfa >>_fba +5)&0x002|((_bc >>_fba +2)&0x010)|((_bfd >>_fba )&0x080)|((_eec >>_fba )&0x400);
};_cff =_ag .RegionBitmap .SetByte (_bg ,byte (_gec ));if _cff !=nil {return _cff ;};_bg ++;_abf ++;};return nil ;};func (_eecf *TableSegment )HtPS ()int32 {return _eecf ._eeega };func (_cfe *HalftoneRegion )GetPatterns ()([]*_e .Bitmap ,error ){var (_egf []*_e .Bitmap ;
_gcde error ;);for _ ,_eaf :=range _cfe ._cdd .RTSegments {var _cbgf Segmenter ;_cbgf ,_gcde =_eaf .GetSegmentData ();if _gcde !=nil {_caf .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_gcde );
return nil ,_gcde ;};_aabce ,_bbbf :=_cbgf .(*PatternDictionary );if !_bbbf {_gcde =_ff .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cbgf );
return nil ,_gcde ;};var _dda []*_e .Bitmap ;_dda ,_gcde =_aabce .GetDictionary ();if _gcde !=nil {_caf .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gcde );
return nil ,_gcde ;};_egf =append (_egf ,_dda ...);};return _egf ,nil ;};func (_eg *GenericRefinementRegion )decodeOptimized (_cbc ,_cad ,_afc ,_ge ,_cge ,_dae ,_cbe int )error {var (_daf error ;_aa int ;_de int ;);_ege :=_cbc -int (_eg .ReferenceDY );
if _ceg :=int (-_eg .ReferenceDX );_ceg > 0{_aa =_ceg ;};_ec :=_eg .ReferenceBitmap .GetByteIndex (_aa ,_ege );if _eg .ReferenceDX > 0{_de =int (_eg .ReferenceDX );};_ed :=_eg .RegionBitmap .GetByteIndex (_de ,_cbc );switch _eg .TemplateID {case 0:_daf =_eg .decodeTemplate (_cbc ,_cad ,_afc ,_ge ,_cge ,_dae ,_cbe ,_ed ,_ege ,_ec ,_eg ._faa );
case 1:_daf =_eg .decodeTemplate (_cbc ,_cad ,_afc ,_ge ,_cge ,_dae ,_cbe ,_ed ,_ege ,_ec ,_eg ._gf );};return _daf ;};func (_gbee *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gbee .SdHuffAggInstanceSelection {_abegge ,_dcdf :=_ca .GetStandardTable (1);
if _dcdf !=nil {return 0,_dcdf ;};return _abegge .Decode (_gbee ._afcf );};if _gbee ._ddaef ==nil {var (_degg int ;_ggaf error ;);if _gbee .SdHuffDecodeHeightSelection ==3{_degg ++;};if _gbee .SdHuffDecodeWidthSelection ==3{_degg ++;};if _gbee .SdHuffBMSizeSelection ==3{_degg ++;
};_gbee ._ddaef ,_ggaf =_gbee .getUserTable (_degg );if _ggaf !=nil {return 0,_ggaf ;};};return _gbee ._ddaef .Decode (_gbee ._afcf );};func (_cdb *GenericRegion )decodeSLTP ()(int ,error ){switch _cdb .GBTemplate {case 0:_cdb ._geg .SetIndex (0x9B25);
case 1:_cdb ._geg .SetIndex (0x795);case 2:_cdb ._geg .SetIndex (0xE5);case 3:_cdb ._geg .SetIndex (0x195);};return _cdb ._fbc .DecodeBit (_cdb ._geg );};func (_feab *SymbolDictionary )encodeSymbols (_dfbg _fad .BinaryWriter )(_afebf int ,_dfab error ){const _cbff ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_cffg :=_dc .New ();_cffg .Init ();_gddb ,_dfab :=_feab ._fbdf .SelectByIndexes (_feab ._adcd );if _dfab !=nil {return 0,_cg .Wrap (_dfab ,_cbff ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_ada :=map[*_e .Bitmap ]int {};for _fcfb ,_afac :=range _gddb .Values {_ada [_afac ]=_fcfb ;
};_gddb .SortByHeight ();var _ced ,_gabab int ;_eggf ,_dfab :=_gddb .GroupByHeight ();if _dfab !=nil {return 0,_cg .Wrap (_dfab ,_cbff ,"");};for _ ,_bebga :=range _eggf .Values {_aaad :=_bebga .Values [0].Height ;_bdda :=_aaad -_ced ;if _dfab =_cffg .EncodeInteger (_dc .IADH ,_bdda );
_dfab !=nil {return 0,_cg .Wrapf (_dfab ,_cbff ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bdda );};_ced =_aaad ;_geba ,_aaea :=_bebga .GroupByWidth ();if _aaea !=nil {return 0,_cg .Wrapf (_aaea ,_cbff ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_aaad );
};var _dfff int ;for _ ,_eecd :=range _geba .Values {for _ ,_gceg :=range _eecd .Values {_eefa :=_gceg .Width ;_bcff :=_eefa -_dfff ;if _aaea =_cffg .EncodeInteger (_dc .IADW ,_bcff );_aaea !=nil {return 0,_cg .Wrapf (_aaea ,_cbff ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bcff );
};_dfff +=_bcff ;if _aaea =_cffg .EncodeBitmap (_gceg ,false );_aaea !=nil {return 0,_cg .Wrapf (_aaea ,_cbff ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_aaad ,_eefa );};_accc :=_ada [_gceg ];_feab ._cafe [_accc ]=_gabab ;
_gabab ++;};};if _aaea =_cffg .EncodeOOB (_dc .IADW );_aaea !=nil {return 0,_cg .Wrap (_aaea ,_cbff ,"\u0049\u0041\u0044\u0057");};};if _dfab =_cffg .EncodeInteger (_dc .IAEX ,0);_dfab !=nil {return 0,_cg .Wrap (_dfab ,_cbff ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _dfab =_cffg .EncodeInteger (_dc .IAEX ,len (_feab ._adcd ));_dfab !=nil {return 0,_cg .Wrap (_dfab ,_cbff ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_cffg .Final ();_eeff ,_dfab :=_cffg .WriteTo (_dfbg );
if _dfab !=nil {return 0,_cg .Wrap (_dfab ,_cbff ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_eeff ),nil ;};func (_bdg *Header )referenceSize ()uint {switch {case _bdg .SegmentNumber <=255:return 1;case _bdg .SegmentNumber <=65535:return 2;default:return 4;};};type RegionSegment struct{_bead *_fad .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;
XLocation uint32 ;YLocation uint32 ;CombinaionOperator _e .CombinationOperator ;};func (_deb *HalftoneRegion )combineGrayscalePlanes (_abbb []*_e .Bitmap ,_dbfd int )error {_fff :=0;for _bbeg :=0;_bbeg < _abbb [_dbfd ].Height ;_bbeg ++{for _eaef :=0;_eaef < _abbb [_dbfd ].Width ;
_eaef +=8{_efada ,_fdcd :=_abbb [_dbfd +1].GetByte (_fff );if _fdcd !=nil {return _fdcd ;};_abd ,_fdcd :=_abbb [_dbfd ].GetByte (_fff );if _fdcd !=nil {return _fdcd ;};_fdcd =_abbb [_dbfd ].SetByte (_fff ,_e .CombineBytes (_abd ,_efada ,_e .CmbOpXor ));
if _fdcd !=nil {return _fdcd ;};_fff ++;};};return nil ;};type GenericRefinementRegion struct{_faa templater ;_gf templater ;_cf *_fad .Reader ;_db *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;
RegionBitmap *_e .Bitmap ;ReferenceBitmap *_e .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_cda *_dd .Decoder ;_ae *_dd .DecoderStats ;_gd bool ;_cac []bool ;};func (_efcb *TextRegion )getUserTable (_aage int )(_ca .Tabler ,error ){const _eagc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _adfb int ;for _ ,_fbaf :=range _efcb .Header .RTSegments {if _fbaf .Type ==53{if _adfb ==_aage {_dabgc ,_dbeg :=_fbaf .GetSegmentData ();if _dbeg !=nil {return nil ,_dbeg ;};_begg ,_abed :=_dabgc .(*TableSegment );if !_abed {_caf .Log .Debug (_ff .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_fbaf .SegmentNumber ));
return nil ,_cg .Error (_eagc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ca .NewEncodedTable (_begg );};_adfb ++;};};return nil ,nil ;};func (_efaee *TextRegion )parseHeader ()error {var _cada error ;_caf .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _cada !=nil {_caf .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cada );
}else {_caf .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cada =_efaee .RegionInfo .parseHeader ();
_cada !=nil {return _cada ;};if _cada =_efaee .readRegionFlags ();_cada !=nil {return _cada ;};if _efaee .IsHuffmanEncoded {if _cada =_efaee .readHuffmanFlags ();_cada !=nil {return _cada ;};};if _cada =_efaee .readUseRefinement ();_cada !=nil {return _cada ;
};if _cada =_efaee .readAmountOfSymbolInstances ();_cada !=nil {return _cada ;};if _cada =_efaee .getSymbols ();_cada !=nil {return _cada ;};if _cada =_efaee .computeSymbolCodeLength ();_cada !=nil {return _cada ;};if _cada =_efaee .checkInput ();_cada !=nil {return _cada ;
};_caf .Log .Trace ("\u0025\u0073",_efaee .String ());return nil ;};func (_afcb *PatternDictionary )computeSegmentDataStructure ()error {_afcb .DataOffset =_afcb ._ddgc .AbsolutePosition ();_afcb .DataHeaderLength =_afcb .DataOffset -_afcb .DataHeaderOffset ;
_afcb .DataLength =int64 (_afcb ._ddgc .AbsoluteLength ())-_afcb .DataHeaderLength ;return nil ;};func (_ecc *Header )String ()string {_gbgb :=&_d .Builder {};_gbgb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_gbgb .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_ecc .SegmentNumber ));_gbgb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_ecc .Type ));
_gbgb .WriteString (_ff .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_ecc .RetainFlag ));_gbgb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ecc .PageAssociation ));
_gbgb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_ecc .PageAssociationFieldSize ));
_gbgb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_gafd :=range _ecc .RTSNumbers {_gbgb .WriteString (_ff .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_gafd ));};_gbgb .WriteString (_ff .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_ecc .HeaderLength ));
_gbgb .WriteString (_ff .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_ecc .SegmentDataLength ));_gbgb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_ecc .SegmentDataStartOffset ));
return _gbgb .String ();};func (_fdag *SymbolDictionary )String ()string {_addd :=&_d .Builder {};_addd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_addd .WriteString (_ff .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_fdag .SdrTemplate ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_fdag .SdTemplate ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_fdag ._fcdc ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_fdag ._ggca ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fdag .SdHuffAggInstanceSelection ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_fdag .SdHuffBMSizeSelection ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_fdag .SdHuffDecodeWidthSelection ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fdag .SdHuffDecodeHeightSelection ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_fdag .UseRefinementAggregation ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_fdag .IsHuffmanEncoded ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fdag .SdATX ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fdag .SdATY ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_fdag .SdrATX ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_fdag .SdrATY ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fdag .NumberOfExportedSymbols ));
_addd .WriteString (_ff .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_fdag .NumberOfNewSymbols ));_addd .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_fdag ._cgaa ));
_addd .WriteString (_ff .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_fdag ._aaa ));return _addd .String ();};func (_cbg *EndOfStripe )Init (h *Header ,r *_fad .Reader )error {_cbg ._ddb =r ;
return _cbg .parseHeader ();};func (_bgba *SymbolDictionary )getSbSymCodeLen ()int8 {_cfbce :=int8 (_cb .Ceil (_cb .Log (float64 (_bgba ._cgaa +_bgba .NumberOfNewSymbols ))/_cb .Log (2)));if _bgba .IsHuffmanEncoded &&_cfbce < 1{return 1;};return _cfbce ;
};func (_fcb *GenericRegion )overrideAtTemplate0a (_fdaf ,_gfcc ,_gfbb ,_ecaa ,_cbcc ,_dgb int )int {if _fcb .GBAtOverride [0]{_fdaf &=0xFFEF;if _fcb .GBAtY [0]==0&&_fcb .GBAtX [0]>=-int8 (_cbcc ){_fdaf |=(_ecaa >>uint (int8 (_dgb )-_fcb .GBAtX [0]&0x1))<<4;
}else {_fdaf |=int (_fcb .getPixel (_gfcc +int (_fcb .GBAtX [0]),_gfbb +int (_fcb .GBAtY [0])))<<4;};};if _fcb .GBAtOverride [1]{_fdaf &=0xFBFF;if _fcb .GBAtY [1]==0&&_fcb .GBAtX [1]>=-int8 (_cbcc ){_fdaf |=(_ecaa >>uint (int8 (_dgb )-_fcb .GBAtX [1]&0x1))<<10;
}else {_fdaf |=int (_fcb .getPixel (_gfcc +int (_fcb .GBAtX [1]),_gfbb +int (_fcb .GBAtY [1])))<<10;};};if _fcb .GBAtOverride [2]{_fdaf &=0xF7FF;if _fcb .GBAtY [2]==0&&_fcb .GBAtX [2]>=-int8 (_cbcc ){_fdaf |=(_ecaa >>uint (int8 (_dgb )-_fcb .GBAtX [2]&0x1))<<11;
}else {_fdaf |=int (_fcb .getPixel (_gfcc +int (_fcb .GBAtX [2]),_gfbb +int (_fcb .GBAtY [2])))<<11;};};if _fcb .GBAtOverride [3]{_fdaf &=0x7FFF;if _fcb .GBAtY [3]==0&&_fcb .GBAtX [3]>=-int8 (_cbcc ){_fdaf |=(_ecaa >>uint (int8 (_dgb )-_fcb .GBAtX [3]&0x1))<<15;
}else {_fdaf |=int (_fcb .getPixel (_gfcc +int (_fcb .GBAtX [3]),_gfbb +int (_fcb .GBAtY [3])))<<15;};};return _fdaf ;};func (_bcf *template0 )form (_cefge ,_ebdc ,_gdd ,_cga ,_cgae int16 )int16 {return (_cefge <<10)|(_ebdc <<7)|(_gdd <<4)|(_cga <<1)|_cgae ;
};func (_bbefc *PageInformationSegment )readWidthAndHeight ()error {_bebda ,_eddag :=_bbefc ._eead .ReadBits (32);if _eddag !=nil {return _eddag ;};_bbefc .PageBMWidth =int (_bebda &_cb .MaxInt32 );_bebda ,_eddag =_bbefc ._eead .ReadBits (32);if _eddag !=nil {return _eddag ;
};_bbefc .PageBMHeight =int (_bebda &_cb .MaxInt32 );return nil ;};func (_cdgf *SymbolDictionary )encodeATFlags (_fafb _fad .BinaryWriter )(_gagd int ,_fdeg error ){const _fdb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _cdgf .IsHuffmanEncoded ||_cdgf .SdTemplate !=0{return 0,nil ;};_bbag :=4;if _cdgf .SdTemplate !=0{_bbag =1;};for _gefc :=0;_gefc < _bbag ;_gefc ++{if _fdeg =_fafb .WriteByte (byte (_cdgf .SdATX [_gefc ]));_fdeg !=nil {return _gagd ,_cg .Wrapf (_fdeg ,_fdb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_gefc );
};_gagd ++;if _fdeg =_fafb .WriteByte (byte (_cdgf .SdATY [_gefc ]));_fdeg !=nil {return _gagd ,_cg .Wrapf (_fdeg ,_fdb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_gefc );};_gagd ++;};return _gagd ,nil ;};func (_gga *GenericRegion )setParametersWithAt (_eaec bool ,_cba byte ,_ebde ,_gdgeg bool ,_fcbd ,_ddcd []int8 ,_beeg ,_cccfb uint32 ,_bebd *_dd .DecoderStats ,_fcff *_dd .Decoder ){_gga .IsMMREncoded =_eaec ;
_gga .GBTemplate =_cba ;_gga .IsTPGDon =_ebde ;_gga .GBAtX =_fcbd ;_gga .GBAtY =_ddcd ;_gga .RegionSegment .BitmapHeight =_cccfb ;_gga .RegionSegment .BitmapWidth =_beeg ;_gga ._gdg =nil ;_gga .Bitmap =nil ;if _bebd !=nil {_gga ._geg =_bebd ;};if _fcff !=nil {_gga ._fbc =_fcff ;
};_caf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_gga );};func (_degef *HalftoneRegion )computeY (_gae ,_dagd int )int {return _degef .shiftAndFill (int (_degef .HGridY )+_gae *int (_degef .HRegionX )-_dagd *int (_degef .HRegionY ));
};func (_dcfd *TextRegion )decodeCurrentT ()(int64 ,error ){if _dcfd .SbStrips !=1{if _dcfd .IsHuffmanEncoded {_gaeae ,_bac :=_dcfd ._eadg .ReadBits (byte (_dcfd .LogSBStrips ));return int64 (_gaeae ),_bac ;};_dgag ,_ggfb :=_dcfd ._ggfc .DecodeInt (_dcfd ._efee );
if _ggfb !=nil {return 0,_ggfb ;};return int64 (_dgag ),nil ;};return 0,nil ;};func (_ebgb *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _ebgb .IsHuffmanEncoded {return _ebgb .decodeHeightClassDeltaHeightWithHuffman ();};_ecfg ,_cecc :=_ebgb ._fbb .DecodeInt (_ebgb ._dagb );
if _cecc !=nil {return 0,_cecc ;};return int64 (_ecfg ),nil ;};func (_cdec *PageInformationSegment )encodeFlags (_fcc _fad .BinaryWriter )(_eedc error ){const _abcf ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _eedc =_fcc .SkipBits (1);
_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _bcae int ;if _cdec .CombinationOperatorOverrideAllowed (){_bcae =1;};if _eedc =_fcc .WriteBit (_bcae );_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_bcae =0;if _cdec ._efg {_bcae =1;};if _eedc =_fcc .WriteBit (_bcae );_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eedc =_fcc .WriteBit ((int (_cdec ._gdab )>>1)&0x01);
_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eedc =_fcc .WriteBit (int (_cdec ._gdab )&0x01);
_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_bcae =int (_cdec .DefaultPixelValue );
if _eedc =_fcc .WriteBit (_bcae );_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_bcae =0;if _cdec ._cbdc {_bcae =1;
};if _eedc =_fcc .WriteBit (_bcae );_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_bcae =0;if _cdec .IsLossless {_bcae =1;};if _eedc =_fcc .WriteBit (_bcae );
_eedc !=nil {return _cg .Wrap (_eedc ,_abcf ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_dbee *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _dbee ._bfg ==nil {var (_ede int ;
_ecbc error ;);if _dbee .SdHuffDecodeHeightSelection ==3{_ede ++;};if _dbee .SdHuffDecodeWidthSelection ==3{_ede ++;};_dbee ._bfg ,_ecbc =_dbee .getUserTable (_ede );if _ecbc !=nil {return 0,_ecbc ;};};return _dbee ._bfg .Decode (_dbee ._afcf );};func (_gdca *HalftoneRegion )renderPattern (_abbd [][]int )(_ceca error ){var _ddca ,_fbeg int ;
for _defb :=0;_defb < int (_gdca .HGridHeight );_defb ++{for _ffd :=0;_ffd < int (_gdca .HGridWidth );_ffd ++{_ddca =_gdca .computeX (_defb ,_ffd );_fbeg =_gdca .computeY (_defb ,_ffd );_gdcf :=_gdca .Patterns [_abbd [_defb ][_ffd ]];if _ceca =_e .Blit (_gdcf ,_gdca .HalftoneRegionBitmap ,_ddca +int (_gdca .HGridX ),_fbeg +int (_gdca .HGridY ),_gdca .CombinationOperator );
_ceca !=nil {return _ceca ;};};};return nil ;};type SegmentEncoder interface{Encode (_gdfe _fad .BinaryWriter )(_begf int ,_bbcf error );};func (_eefe *TableSegment )HtOOB ()int32 {return _eefe ._dafd };func (_gfbe *TextRegion )checkInput ()error {const _egagc ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_gfbe .UseRefinement {if _gfbe .SbrTemplate !=0{_caf .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gfbe .SbrTemplate =0;};};if _gfbe .SbHuffFS ==2||_gfbe .SbHuffRDWidth ==2||_gfbe .SbHuffRDHeight ==2||_gfbe .SbHuffRDX ==2||_gfbe .SbHuffRDY ==2{return _cg .Error (_egagc ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_gfbe .UseRefinement {if _gfbe .SbHuffRSize !=0{_caf .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gfbe .SbHuffRSize =0;};if _gfbe .SbHuffRDY !=0{_caf .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_gfbe .SbHuffRDY =0;};if _gfbe .SbHuffRDX !=0{_caf .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gfbe .SbHuffRDX =0;};if _gfbe .SbHuffRDWidth !=0{_caf .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_gfbe .SbHuffRDWidth =0;};if _gfbe .SbHuffRDHeight !=0{_caf .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gfbe .SbHuffRDHeight =0;};};
return nil ;};func (_ecfd *SymbolDictionary )getUserTable (_ddcda int )(_ca .Tabler ,error ){var _eecdd int ;for _ ,_bgdg :=range _ecfd .Header .RTSegments {if _bgdg .Type ==53{if _eecdd ==_ddcda {_fccfa ,_daegd :=_bgdg .GetSegmentData ();if _daegd !=nil {return nil ,_daegd ;
};_dece :=_fccfa .(_ca .BasicTabler );return _ca .NewEncodedTable (_dece );};_eecdd ++;};};return nil ,nil ;};type TextRegion struct{_eadg *_fad .Reader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _e .CombinationOperator ;
IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;
SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_gggf int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_e .Bitmap ;Symbols []*_e .Bitmap ;_ggfc *_dd .Decoder ;_gebec *GenericRefinementRegion ;_egaga *_dd .DecoderStats ;_fcfa *_dd .DecoderStats ;
_gcec *_dd .DecoderStats ;_efee *_dd .DecoderStats ;_befb *_dd .DecoderStats ;_dgcg *_dd .DecoderStats ;_fcfg *_dd .DecoderStats ;_gff *_dd .DecoderStats ;_caff *_dd .DecoderStats ;_eebd *_dd .DecoderStats ;_gcca *_dd .DecoderStats ;_bafc int8 ;_dbdc *_ca .FixedSizeTable ;
Header *Header ;_fgga _ca .Tabler ;_dgda _ca .Tabler ;_ccbf _ca .Tabler ;_dbgd _ca .Tabler ;_gdee _ca .Tabler ;_egfg _ca .Tabler ;_babf _ca .Tabler ;_gbae _ca .Tabler ;_debdf ,_bcfe map[int ]int ;_bga []int ;_gegg *_e .Points ;_bece *_e .Bitmaps ;_ebfc *_ce .IntSlice ;
_eefd ,_ccgc int ;_eggfc *_e .Boxes ;};func (_cfb *GenericRegion )Encode (w _fad .BinaryWriter )(_ecg int ,_cdc error ){const _cged ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _cfb .Bitmap ==nil {return 0,_cg .Error (_cged ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_cadd ,_cdc :=_cfb .RegionSegment .Encode (w );if _cdc !=nil {return 0,_cg .Wrap (_cdc ,_cged ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_ecg +=_cadd ;if _cdc =w .SkipBits (4);_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _abe int ;if _cfb .IsTPGDon {_abe =1;};if _cdc =w .WriteBit (_abe );_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_abe =0;if _cdc =w .WriteBit (int (_cfb .GBTemplate >>1)&0x01);_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cdc =w .WriteBit (int (_cfb .GBTemplate )&0x01);_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cfb .UseMMR {_abe =1;};if _cdc =w .WriteBit (_abe );
_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ecg ++;if _cadd ,_cdc =_cfb .writeGBAtPixels (w );_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"");};_ecg +=_cadd ;_bcc :=_dc .New ();
if _cdc =_bcc .EncodeBitmap (_cfb .Bitmap ,_cfb .IsTPGDon );_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"");};_bcc .Final ();var _gab int64 ;if _gab ,_cdc =_bcc .WriteTo (w );_cdc !=nil {return _ecg ,_cg .Wrap (_cdc ,_cged ,"");};_ecg +=int (_gab );
return _ecg ,nil ;};type templater interface{form (_adgd ,_bed ,_def ,_dcbg ,_aec int16 )int16 ;setIndex (_eae *_dd .DecoderStats );};func (_gcfg *PageInformationSegment )checkInput ()error {if _gcfg .PageBMHeight ==_cb .MaxInt32 {if !_gcfg .IsStripe {_caf .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_fbdd *TextRegion )createRegionBitmap ()error {_fbdd .RegionBitmap =_e .New (int (_fbdd .RegionInfo .BitmapWidth ),int (_fbdd .RegionInfo .BitmapHeight ));if _fbdd .DefaultPixel !=0{_fbdd .RegionBitmap .SetDefaultPixel ();};return nil ;
};func (_bbdf *TableSegment )Init (h *Header ,r *_fad .Reader )error {_bbdf ._dedb =r ;return _bbdf .parseHeader ();};func (_edb *GenericRegion )parseHeader ()(_aegb error ){_caf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _aegb !=nil {_caf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_aegb );
}else {_caf .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_eea int ;_cbb uint64 ;);if _aegb =_edb .RegionSegment .parseHeader ();_aegb !=nil {return _aegb ;};if _ ,_aegb =_edb ._edg .ReadBits (3);_aegb !=nil {return _aegb ;};_eea ,_aegb =_edb ._edg .ReadBit ();if _aegb !=nil {return _aegb ;};if _eea ==1{_edb .UseExtTemplates =true ;
};_eea ,_aegb =_edb ._edg .ReadBit ();if _aegb !=nil {return _aegb ;};if _eea ==1{_edb .IsTPGDon =true ;};_cbb ,_aegb =_edb ._edg .ReadBits (2);if _aegb !=nil {return _aegb ;};_edb .GBTemplate =byte (_cbb &0xf);_eea ,_aegb =_edb ._edg .ReadBit ();if _aegb !=nil {return _aegb ;
};if _eea ==1{_edb .IsMMREncoded =true ;};if !_edb .IsMMREncoded {_cefc :=1;if _edb .GBTemplate ==0{_cefc =4;if _edb .UseExtTemplates {_cefc =12;};};if _aegb =_edb .readGBAtPixels (_cefc );_aegb !=nil {return _aegb ;};};if _aegb =_edb .computeSegmentDataStructure ();
_aegb !=nil {return _aegb ;};_caf .Log .Trace ("\u0025\u0073",_edb );return nil ;};func (_fg *GenericRefinementRegion )Init (header *Header ,r *_fad .Reader )error {_fg ._db =header ;_fg ._cf =r ;_fg .RegionInfo =NewRegionSegment (r );return _fg .parseHeader ();
};func (_deff *PageInformationSegment )readIsLossless ()error {_agbe ,_fag :=_deff ._eead .ReadBit ();if _fag !=nil {return _fag ;};if _agbe ==1{_deff .IsLossless =true ;};return nil ;};func (_ddge *SymbolDictionary )decodeNewSymbols (_cfcf ,_bcge uint32 ,_gada *_e .Bitmap ,_fdegd ,_aga int32 )error {if _ddge ._faga ==nil {_ddge ._faga =_efff (_ddge ._afcf ,nil );
if _ddge ._fbb ==nil {var _aaadg error ;_ddge ._fbb ,_aaadg =_dd .New (_ddge ._afcf );if _aaadg !=nil {return _aaadg ;};};if _ddge ._bfde ==nil {_ddge ._bfde =_dd .NewStats (65536,1);};};_ddge ._faga .setParameters (_ddge ._bfde ,_ddge ._fbb ,_ddge .SdrTemplate ,_cfcf ,_bcge ,_gada ,_fdegd ,_aga ,false ,_ddge .SdrATX ,_ddge .SdrATY );
return _ddge .addSymbol (_ddge ._faga );};func (_cbead *TextRegion )computeSymbolCodeLength ()error {if _cbead .IsHuffmanEncoded {return _cbead .symbolIDCodeLengths ();};_cbead ._bafc =int8 (_cb .Ceil (_cb .Log (float64 (_cbead .NumberOfSymbols ))/_cb .Log (2)));
return nil ;};func (_eeead *PageInformationSegment )Init (h *Header ,r *_fad .Reader )(_abgc error ){_eeead ._eead =r ;if _abgc =_eeead .parseHeader ();_abgc !=nil {return _cg .Wrap (_abgc ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_bcgb *SymbolDictionary )encodeRefinementATFlags (_geab _fad .BinaryWriter )(_aadf int ,_ecgaf error ){const _decf ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bcgb .UseRefinementAggregation ||_bcgb .SdrTemplate !=0{return 0,nil ;};for _gfgc :=0;_gfgc < 2;_gfgc ++{if _ecgaf =_geab .WriteByte (byte (_bcgb .SdrATX [_gfgc ]));_ecgaf !=nil {return _aadf ,_cg .Wrapf (_ecgaf ,_decf ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gfgc );
};_aadf ++;if _ecgaf =_geab .WriteByte (byte (_bcgb .SdrATY [_gfgc ]));_ecgaf !=nil {return _aadf ,_cg .Wrapf (_ecgaf ,_decf ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gfgc );};_aadf ++;};return _aadf ,nil ;};func (_egebd *TextRegion )decodeRI ()(int64 ,error ){if !_egebd .UseRefinement {return 0,nil ;
};if _egebd .IsHuffmanEncoded {_ebedc ,_egfd :=_egebd ._eadg .ReadBit ();return int64 (_ebedc ),_egfd ;};_edfd ,_eefbe :=_egebd ._ggfc .DecodeInt (_egebd ._befb );return int64 (_edfd ),_eefbe ;};func (_deba *Header )writeSegmentPageAssociation (_cbbbe _fad .BinaryWriter )(_abdb int ,_fga error ){const _bada ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _deba .pageSize ()!=4{if _fga =_cbbbe .WriteByte (byte (_deba .PageAssociation ));_fga !=nil {return 0,_cg .Wrap (_fga ,_bada ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_fdec :=make ([]byte ,4);
_fa .BigEndian .PutUint32 (_fdec ,uint32 (_deba .PageAssociation ));if _abdb ,_fga =_cbbbe .Write (_fdec );_fga !=nil {return 0,_cg .Wrap (_fga ,_bada ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _abdb ,nil ;
};func (_bbgf *SymbolDictionary )setSymbolsArray ()error {if _bbgf ._fadf ==nil {if _gecc :=_bbgf .retrieveImportSymbols ();_gecc !=nil {return _gecc ;};};if _bbgf ._gebe ==nil {_bbgf ._gebe =append (_bbgf ._gebe ,_bbgf ._fadf ...);};return nil ;};func (_fddc *Header )readDataStartOffset (_acba *_fad .Reader ,_cgcb OrganizationType ){if _cgcb ==OSequential {_fddc .SegmentDataStartOffset =uint64 (_acba .AbsolutePosition ());
};};func (_feea *TextRegion )decodeIb (_gecda ,_bcbcg int64 )(*_e .Bitmap ,error ){const _ggcb ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_acfg error ;_dce *_e .Bitmap ;);if _gecda ==0{if int (_bcbcg )> len (_feea .Symbols )-1{return nil ,_cg .Error (_ggcb ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _feea .Symbols [int (_bcbcg )],nil ;};var _bcdcb ,_beee ,_abdff ,_eeca int64 ;_bcdcb ,_acfg =_feea .decodeRdw ();if _acfg !=nil {return nil ,_cg .Wrap (_acfg ,_ggcb ,"");};_beee ,_acfg =_feea .decodeRdh ();if _acfg !=nil {return nil ,_cg .Wrap (_acfg ,_ggcb ,"");
};_abdff ,_acfg =_feea .decodeRdx ();if _acfg !=nil {return nil ,_cg .Wrap (_acfg ,_ggcb ,"");};_eeca ,_acfg =_feea .decodeRdy ();if _acfg !=nil {return nil ,_cg .Wrap (_acfg ,_ggcb ,"");};if _feea .IsHuffmanEncoded {if _ ,_acfg =_feea .decodeSymInRefSize ();
_acfg !=nil {return nil ,_cg .Wrap (_acfg ,_ggcb ,"");};_feea ._eadg .Align ();};_dagf :=_feea .Symbols [_bcbcg ];_gabee :=uint32 (_dagf .Width );_ecgbe :=uint32 (_dagf .Height );_gfcg :=int32 (uint32 (_bcdcb )>>1)+int32 (_abdff );_efgg :=int32 (uint32 (_beee )>>1)+int32 (_eeca );
if _feea ._gebec ==nil {_feea ._gebec =_efff (_feea ._eadg ,nil );};_feea ._gebec .setParameters (_feea ._gcca ,_feea ._ggfc ,_feea .SbrTemplate ,_gabee +uint32 (_bcdcb ),_ecgbe +uint32 (_beee ),_dagf ,_gfcg ,_efgg ,false ,_feea .SbrATX ,_feea .SbrATY );
_dce ,_acfg =_feea ._gebec .GetRegionBitmap ();if _acfg !=nil {return nil ,_cg .Wrap (_acfg ,_ggcb ,"\u0067\u0072\u0066");};if _feea .IsHuffmanEncoded {_feea ._eadg .Align ();};return _dce ,nil ;};func (_egbe *HalftoneRegion )computeSegmentDataStructure ()error {_egbe .DataOffset =_egbe ._ggab .AbsolutePosition ();
_egbe .DataHeaderLength =_egbe .DataOffset -_egbe .DataHeaderOffset ;_egbe .DataLength =int64 (_egbe ._ggab .AbsoluteLength ())-_egbe .DataHeaderLength ;return nil ;};func (_aabd *SymbolDictionary )setAtPixels ()error {if _aabd .IsHuffmanEncoded {return nil ;
};_aadcb :=1;if _aabd .SdTemplate ==0{_aadcb =4;};if _bgbab :=_aabd .readAtPixels (_aadcb );_bgbab !=nil {return _bgbab ;};return nil ;};func (_aaf *SymbolDictionary )decodeHeightClassBitmap (_adaf *_e .Bitmap ,_eagdd int64 ,_gddbb int ,_gegdb []int )error {for _fbcc :=_eagdd ;
_fbcc < int64 (_aaf ._aaa );_fbcc ++{var _dbgf int ;for _bfcc :=_eagdd ;_bfcc <=_fbcc -1;_bfcc ++{_dbgf +=_gegdb [_bfcc ];};_agfe :=_f .Rect (_dbgf ,0,_dbgf +_gegdb [_fbcc ],_gddbb );_cdgc ,_agcd :=_e .Extract (_agfe ,_adaf );if _agcd !=nil {return _agcd ;
};_aaf ._gcff [_fbcc ]=_cdgc ;_aaf ._gebe =append (_aaf ._gebe ,_cdgc );};return nil ;};func (_effe *Header )readSegmentDataLength (_acc *_fad .Reader )(_abfb error ){_effe .SegmentDataLength ,_abfb =_acc .ReadBits (32);if _abfb !=nil {return _abfb ;};
_effe .SegmentDataLength &=_cb .MaxInt32 ;return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_e .Bitmap ,error );};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_cca *GenericRefinementRegion )String ()string {_bee :=&_d .Builder {};
_bee .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bee .WriteString (_cca .RegionInfo .String ()+"\u000a");_bee .WriteString (_ff .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cca .IsTPGROn ));
_bee .WriteString (_ff .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cca .TemplateID ));_bee .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cca .GrAtX ));
_bee .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cca .GrAtY ));_bee .WriteString (_ff .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cca .ReferenceDX ));
_bee .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cca .ReferenceDY ));return _bee .String ();};func (_cfdec *Header )CleanSegmentData (){if _cfdec .SegmentData !=nil {_cfdec .SegmentData =nil ;
};};func (_geda *TextRegion )decodeRdy ()(int64 ,error ){const _aggcc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _geda .IsHuffmanEncoded {if _geda .SbHuffRDY ==3{if _geda ._babf ==nil {var (_ceeg int ;_gbaef error ;);if _geda .SbHuffFS ==3{_ceeg ++;
};if _geda .SbHuffDS ==3{_ceeg ++;};if _geda .SbHuffDT ==3{_ceeg ++;};if _geda .SbHuffRDWidth ==3{_ceeg ++;};if _geda .SbHuffRDHeight ==3{_ceeg ++;};if _geda .SbHuffRDX ==3{_ceeg ++;};_geda ._babf ,_gbaef =_geda .getUserTable (_ceeg );if _gbaef !=nil {return 0,_cg .Wrap (_gbaef ,_aggcc ,"");
};};return _geda ._babf .Decode (_geda ._eadg );};_fdac ,_gbca :=_ca .GetStandardTable (14+int (_geda .SbHuffRDY ));if _gbca !=nil {return 0,_gbca ;};return _fdac .Decode (_geda ._eadg );};_ggabf ,_fffa :=_geda ._ggfc .DecodeInt (_geda ._eebd );if _fffa !=nil {return 0,_cg .Wrap (_fffa ,_aggcc ,"");
};return int64 (_ggabf ),nil ;};func (_cbdcf *PatternDictionary )parseHeader ()error {_caf .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_caf .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_gegf :=_cbdcf ._ddgc .ReadBits (5);if _gegf !=nil {return _gegf ;};if _gegf =_cbdcf .readTemplate ();_gegf !=nil {return _gegf ;};if _gegf =_cbdcf .readIsMMREncoded ();_gegf !=nil {return _gegf ;};if _gegf =_cbdcf .readPatternWidthAndHeight ();
_gegf !=nil {return _gegf ;};if _gegf =_cbdcf .readGrayMax ();_gegf !=nil {return _gegf ;};if _gegf =_cbdcf .computeSegmentDataStructure ();_gegf !=nil {return _gegf ;};return _cbdcf .checkInput ();};func (_acfa *GenericRegion )overrideAtTemplate3 (_ggceb ,_dac ,_edbg ,_gda ,_fcgcd int )int {_ggceb &=0x3EF;
if _acfa .GBAtY [0]==0&&_acfa .GBAtX [0]>=-int8 (_fcgcd ){_ggceb |=(_gda >>uint (7-(int8 (_fcgcd )+_acfa .GBAtX [0]))&0x1)<<4;}else {_ggceb |=int (_acfa .getPixel (_dac +int (_acfa .GBAtX [0]),_edbg +int (_acfa .GBAtY [0])))<<4;};return _ggceb ;};func (_cdecg *PatternDictionary )readIsMMREncoded ()error {_bfff ,_deaab :=_cdecg ._ddgc .ReadBit ();
if _deaab !=nil {return _deaab ;};if _bfff !=0{_cdecg .IsMMREncoded =true ;};return nil ;};func (_dg *EndOfStripe )LineNumber ()int {return _dg ._ab };func (_dgffe *SymbolDictionary )setRetainedCodingContexts (_fdaed *SymbolDictionary ){_dgffe ._fbb =_fdaed ._fbb ;
_dgffe .IsHuffmanEncoded =_fdaed .IsHuffmanEncoded ;_dgffe .UseRefinementAggregation =_fdaed .UseRefinementAggregation ;_dgffe .SdTemplate =_fdaed .SdTemplate ;_dgffe .SdrTemplate =_fdaed .SdrTemplate ;_dgffe .SdATX =_fdaed .SdATX ;_dgffe .SdATY =_fdaed .SdATY ;
_dgffe .SdrATX =_fdaed .SdrATX ;_dgffe .SdrATY =_fdaed .SdrATY ;_dgffe ._bfde =_fdaed ._bfde ;};type template1 struct{};func (_fbfc *TextRegion )decodeRdw ()(int64 ,error ){const _aefa ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _fbfc .IsHuffmanEncoded {if _fbfc .SbHuffRDWidth ==3{if _fbfc ._dbgd ==nil {var (_dbaa int ;
_bdfc error ;);if _fbfc .SbHuffFS ==3{_dbaa ++;};if _fbfc .SbHuffDS ==3{_dbaa ++;};if _fbfc .SbHuffDT ==3{_dbaa ++;};_fbfc ._dbgd ,_bdfc =_fbfc .getUserTable (_dbaa );if _bdfc !=nil {return 0,_cg .Wrap (_bdfc ,_aefa ,"");};};return _fbfc ._dbgd .Decode (_fbfc ._eadg );
};_ggdg ,_cbfd :=_ca .GetStandardTable (14+int (_fbfc .SbHuffRDWidth ));if _cbfd !=nil {return 0,_cg .Wrap (_cbfd ,_aefa ,"");};return _ggdg .Decode (_fbfc ._eadg );};_cddf ,_gafe :=_fbfc ._ggfc .DecodeInt (_fbfc ._dgcg );if _gafe !=nil {return 0,_cg .Wrap (_gafe ,_aefa ,"");
};return int64 (_cddf ),nil ;};type OrganizationType uint8 ;func (_cfc *Header )readHeaderLength (_ccge *_fad .Reader ,_aadd int64 ){_cfc .HeaderLength =_ccge .AbsolutePosition ()-_aadd ;};func (_eeaef *TextRegion )setCodingStatistics ()error {if _eeaef ._egaga ==nil {_eeaef ._egaga =_dd .NewStats (512,1);
};if _eeaef ._fcfa ==nil {_eeaef ._fcfa =_dd .NewStats (512,1);};if _eeaef ._gcec ==nil {_eeaef ._gcec =_dd .NewStats (512,1);};if _eeaef ._efee ==nil {_eeaef ._efee =_dd .NewStats (512,1);};if _eeaef ._befb ==nil {_eeaef ._befb =_dd .NewStats (512,1);
};if _eeaef ._dgcg ==nil {_eeaef ._dgcg =_dd .NewStats (512,1);};if _eeaef ._fcfg ==nil {_eeaef ._fcfg =_dd .NewStats (512,1);};if _eeaef ._gff ==nil {_eeaef ._gff =_dd .NewStats (1<<uint (_eeaef ._bafc ),1);};if _eeaef ._caff ==nil {_eeaef ._caff =_dd .NewStats (512,1);
};if _eeaef ._eebd ==nil {_eeaef ._eebd =_dd .NewStats (512,1);};if _eeaef ._ggfc ==nil {var _agga error ;_eeaef ._ggfc ,_agga =_dd .New (_eeaef ._eadg );if _agga !=nil {return _agga ;};};return nil ;};func (_efggd *TextRegion )getSymbols ()error {if _efggd .Header .RTSegments !=nil {return _efggd .initSymbols ();
};return nil ;};func (_begd *Header )subInputReader ()(*_fad .Reader ,error ){_gfcd :=int (_begd .SegmentDataLength );if _begd .SegmentDataLength ==_cb .MaxInt32 {_gfcd =-1;};return _begd .Reader .NewPartialReader (int (_begd .SegmentDataStartOffset ),_gfcd ,false );
};func (_ddgb *TextRegion )setContexts (_dfddc *_dd .DecoderStats ,_bcdcc *_dd .DecoderStats ,_affga *_dd .DecoderStats ,_ccac *_dd .DecoderStats ,_bcdba *_dd .DecoderStats ,_agbg *_dd .DecoderStats ,_bcde *_dd .DecoderStats ,_dgbea *_dd .DecoderStats ,_ggge *_dd .DecoderStats ,_ggde *_dd .DecoderStats ){_ddgb ._egaga =_bcdcc ;
_ddgb ._fcfa =_affga ;_ddgb ._gcec =_ccac ;_ddgb ._efee =_bcdba ;_ddgb ._dgcg =_bcde ;_ddgb ._fcfg =_dgbea ;_ddgb ._gff =_agbg ;_ddgb ._caff =_ggge ;_ddgb ._eebd =_ggde ;_ddgb ._gcca =_dfddc ;};var _ templater =&template1 {};func (_bae *GenericRefinementRegion )getPixel (_bge *_e .Bitmap ,_fgd ,_abb int )int {if _fgd < 0||_fgd >=_bge .Width {return 0;
};if _abb < 0||_abb >=_bge .Height {return 0;};if _bge .GetPixel (_fgd ,_abb ){return 1;};return 0;};func (_ggb *GenericRegion )overrideAtTemplate2 (_gbc ,_gfdd ,_dbf ,_dab ,_ecga int )int {_gbc &=0x3FB;if _ggb .GBAtY [0]==0&&_ggb .GBAtX [0]>=-int8 (_ecga ){_gbc |=(_dab >>uint (7-(int8 (_ecga )+_ggb .GBAtX [0]))&0x1)<<2;
}else {_gbc |=int (_ggb .getPixel (_gfdd +int (_ggb .GBAtX [0]),_dbf +int (_ggb .GBAtY [0])))<<2;};return _gbc ;};func (_fcgce *TextRegion )decodeIds ()(int64 ,error ){const _dafb ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fcgce .IsHuffmanEncoded {if _fcgce .SbHuffDS ==3{if _fcgce ._dgda ==nil {_fgecg :=0;
if _fcgce .SbHuffFS ==3{_fgecg ++;};var _ggac error ;_fcgce ._dgda ,_ggac =_fcgce .getUserTable (_fgecg );if _ggac !=nil {return 0,_cg .Wrap (_ggac ,_dafb ,"");};};return _fcgce ._dgda .Decode (_fcgce ._eadg );};_acadf ,_agfd :=_ca .GetStandardTable (8+int (_fcgce .SbHuffDS ));
if _agfd !=nil {return 0,_cg .Wrap (_agfd ,_dafb ,"");};return _acadf .Decode (_fcgce ._eadg );};_gfdc ,_ggga :=_fcgce ._ggfc .DecodeInt (_fcgce ._gcec );if _ggga !=nil {return 0,_cg .Wrap (_ggga ,_dafb ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_gfdc ),nil ;
};func (_ceef *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gdcb int ;_bgecd int32 ;_cddb error ;_bgfb =int32 (_ceef ._cgaa +_ceef .NumberOfNewSymbols );_abdf =make ([]int ,_bgfb ););for _effg :=int32 (0);_effg < _bgfb ;_effg +=_bgecd {if _ceef .IsHuffmanEncoded {_gefcd ,_acdg :=_ca .GetStandardTable (1);
if _acdg !=nil {return nil ,_acdg ;};_fcge ,_acdg :=_gefcd .Decode (_ceef ._afcf );if _acdg !=nil {return nil ,_acdg ;};_bgecd =int32 (_fcge );}else {_bgecd ,_cddb =_ceef ._fbb .DecodeInt (_ceef ._bfcea );if _cddb !=nil {return nil ,_cddb ;};};if _bgecd !=0{if _effg +_bgecd > _bgfb {return nil ,_cg .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _adbc :=_effg ;_adbc < _effg +_bgecd ;_adbc ++{_abdf [_adbc ]=_gdcb ;};};if _gdcb ==0{_gdcb =1;}else {_gdcb =0;};};return _abdf ,nil ;};type Segmenter interface{Init (_dadb *Header ,_ffed *_fad .Reader )error ;};func (_cdfd *TextRegion )Encode (w _fad .BinaryWriter )(_ggaa int ,_eddf error ){const _fdg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _ggaa ,_eddf =_cdfd .RegionInfo .Encode (w );_eddf !=nil {return _ggaa ,_cg .Wrap (_eddf ,_fdg ,"");};var _fcgcc int ;if _fcgcc ,_eddf =_cdfd .encodeFlags (w );_eddf !=nil {return _ggaa ,_cg .Wrap (_eddf ,_fdg ,"");};_ggaa +=_fcgcc ;if _fcgcc ,_eddf =_cdfd .encodeSymbols (w );
_eddf !=nil {return _ggaa ,_cg .Wrap (_eddf ,_fdg ,"");};_ggaa +=_fcgcc ;return _ggaa ,nil ;};type template0 struct{};func (_dfca *SymbolDictionary )Init (h *Header ,r *_fad .Reader )error {_dfca .Header =h ;_dfca ._afcf =r ;return _dfca .parseHeader ();
};type Type int ;func (_cafd *TableSegment )StreamReader ()*_fad .Reader {return _cafd ._dedb };func (_aee *PatternDictionary )readPatternWidthAndHeight ()error {_fdca ,_eece :=_aee ._ddgc .ReadByte ();if _eece !=nil {return _eece ;};_aee .HdpWidth =_fdca ;
_fdca ,_eece =_aee ._ddgc .ReadByte ();if _eece !=nil {return _eece ;};_aee .HdpHeight =_fdca ;return nil ;};func (_dfc *PatternDictionary )readTemplate ()error {_ddba ,_acd :=_dfc ._ddgc .ReadBits (2);if _acd !=nil {return _acd ;};_dfc .HDTemplate =byte (_ddba );
return nil ;};func (_gabag *HalftoneRegion )computeGrayScalePlanes (_egbf []*_e .Bitmap ,_efba int )([][]int ,error ){_ffbe :=make ([][]int ,_gabag .HGridHeight );for _baea :=0;_baea < len (_ffbe );_baea ++{_ffbe [_baea ]=make ([]int ,_gabag .HGridWidth );
};for _gebf :=0;_gebf < int (_gabag .HGridHeight );_gebf ++{for _bggg :=0;_bggg < int (_gabag .HGridWidth );_bggg +=8{var _gaf int ;if _eadf :=int (_gabag .HGridWidth )-_bggg ;_eadf > 8{_gaf =8;}else {_gaf =_eadf ;};_fae :=_egbf [0].GetByteIndex (_bggg ,_gebf );
for _adcg :=0;_adcg < _gaf ;_adcg ++{_geaa :=_adcg +_bggg ;_ffbe [_gebf ][_geaa ]=0;for _feac :=0;_feac < _efba ;_feac ++{_fbfd ,_ebaf :=_egbf [_feac ].GetByte (_fae );if _ebaf !=nil {return nil ,_ebaf ;};_gbf :=_fbfd >>uint (7-_geaa &7);_bab :=_gbf &1;
_edggf :=1<<uint (_feac );_abcg :=int (_bab )*_edggf ;_ffbe [_gebf ][_geaa ]+=_abcg ;};};};};return _ffbe ,nil ;};func (_aba *GenericRegion )copyLineAbove (_bdf int )error {_dbe :=_bdf *_aba .Bitmap .RowStride ;_egeb :=_dbe -_aba .Bitmap .RowStride ;for _aed :=0;
_aed < _aba .Bitmap .RowStride ;_aed ++{_daab ,_fda :=_aba .Bitmap .GetByte (_egeb );if _fda !=nil {return _fda ;};_egeb ++;if _fda =_aba .Bitmap .SetByte (_dbe ,_daab );_fda !=nil {return _fda ;};_dbe ++;};return nil ;};func (_abef *PatternDictionary )Init (h *Header ,r *_fad .Reader )error {_abef ._ddgc =r ;
return _abef .parseHeader ();};func (_fbcce *TextRegion )readHuffmanFlags ()error {var (_ebgba int ;_fddb uint64 ;_fbddd error ;);_ ,_fbddd =_fbcce ._eadg .ReadBit ();if _fbddd !=nil {return _fbddd ;};_ebgba ,_fbddd =_fbcce ._eadg .ReadBit ();if _fbddd !=nil {return _fbddd ;
};_fbcce .SbHuffRSize =int8 (_ebgba );_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);if _fbddd !=nil {return _fbddd ;};_fbcce .SbHuffRDY =int8 (_fddb )&0xf;_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);if _fbddd !=nil {return _fbddd ;};_fbcce .SbHuffRDX =int8 (_fddb )&0xf;
_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);if _fbddd !=nil {return _fbddd ;};_fbcce .SbHuffRDHeight =int8 (_fddb )&0xf;_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);if _fbddd !=nil {return _fbddd ;};_fbcce .SbHuffRDWidth =int8 (_fddb )&0xf;_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);
if _fbddd !=nil {return _fbddd ;};_fbcce .SbHuffDT =int8 (_fddb )&0xf;_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);if _fbddd !=nil {return _fbddd ;};_fbcce .SbHuffDS =int8 (_fddb )&0xf;_fddb ,_fbddd =_fbcce ._eadg .ReadBits (2);if _fbddd !=nil {return _fbddd ;
};_fbcce .SbHuffFS =int8 (_fddb )&0xf;return nil ;};func (_bgc *GenericRefinementRegion )decodeTemplate (_eee ,_bd ,_deg ,_bbd ,_fbe ,_acf ,_fgb ,_bgbd ,_bffg ,_bfeb int ,_fgf templater )(_cfda error ){var (_gb ,_cega ,_dea ,_dcafd ,_dgc int16 ;_cec ,_fe ,_ade ,_dgd int ;
_cc byte ;);if _bffg >=1&&(_bffg -1)< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb -_bbd );if _cfda !=nil {return ;};_cec =int (_cc );};if _bffg >=0&&(_bffg )< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb );
if _cfda !=nil {return ;};_fe =int (_cc );};if _bffg >=-1&&(_bffg +1)< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb +_bbd );if _cfda !=nil {return ;};_ade =int (_cc );};_bfeb ++;if _eee >=1{_cc ,_cfda =_bgc .RegionBitmap .GetByte (_bgbd -_deg );
if _cfda !=nil {return ;};_dgd =int (_cc );};_bgbd ++;_gdff :=_bgc .ReferenceDX %8;_fcd :=6+_gdff ;_feg :=_bfeb %_bbd ;if _fcd >=0{if _fcd < 8{_gb =int16 (_cec >>uint (_fcd ))&0x07;};if _fcd < 8{_cega =int16 (_fe >>uint (_fcd ))&0x07;};if _fcd < 8{_dea =int16 (_ade >>uint (_fcd ))&0x07;
};if _fcd ==6&&_feg > 1{if _bffg >=1&&(_bffg -1)< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb -_bbd -2);if _cfda !=nil {return _cfda ;};_gb |=int16 (_cc <<2)&0x04;};if _bffg >=0&&_bffg < _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb -2);
if _cfda !=nil {return _cfda ;};_cega |=int16 (_cc <<2)&0x04;};if _bffg >=-1&&_bffg +1< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb +_bbd -2);if _cfda !=nil {return _cfda ;};_dea |=int16 (_cc <<2)&0x04;};};if _fcd ==0{_cec =0;
_fe =0;_ade =0;if _feg < _bbd -1{if _bffg >=1&&_bffg -1< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb -_bbd );if _cfda !=nil {return _cfda ;};_cec =int (_cc );};if _bffg >=0&&_bffg < _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb );
if _cfda !=nil {return _cfda ;};_fe =int (_cc );};if _bffg >=-1&&_bffg +1< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb +_bbd );if _cfda !=nil {return _cfda ;};_ade =int (_cc );};};_bfeb ++;};}else {_gb =int16 (_cec <<1)&0x07;
_cega =int16 (_fe <<1)&0x07;_dea =int16 (_ade <<1)&0x07;_cec =0;_fe =0;_ade =0;if _feg < _bbd -1{if _bffg >=1&&_bffg -1< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb -_bbd );if _cfda !=nil {return _cfda ;};_cec =int (_cc );
};if _bffg >=0&&_bffg < _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb );if _cfda !=nil {return _cfda ;};_fe =int (_cc );};if _bffg >=-1&&_bffg +1< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb +_bbd );
if _cfda !=nil {return _cfda ;};_ade =int (_cc );};_bfeb ++;};_gb |=int16 ((_cec >>7)&0x07);_cega |=int16 ((_fe >>7)&0x07);_dea |=int16 ((_ade >>7)&0x07);};_dcafd =int16 (_dgd >>6);_dgc =0;_ceb :=(2-_gdff )%8;_cec <<=uint (_ceb );_fe <<=uint (_ceb );_ade <<=uint (_ceb );
_dgd <<=2;var _ccc int ;for _ffe :=0;_ffe < _bd ;_ffe ++{_egb :=_ffe &0x07;_adg :=_fgf .form (_gb ,_cega ,_dea ,_dcafd ,_dgc );if _bgc ._gd {_cc ,_cfda =_bgc .RegionBitmap .GetByte (_bgc .RegionBitmap .GetByteIndex (_ffe ,_eee ));if _cfda !=nil {return _cfda ;
};_bgc ._ae .SetIndex (int32 (_bgc .overrideAtTemplate0 (int (_adg ),_ffe ,_eee ,int (_cc ),_egb )));}else {_bgc ._ae .SetIndex (int32 (_adg ));};_ccc ,_cfda =_bgc ._cda .DecodeBit (_bgc ._ae );if _cfda !=nil {return _cfda ;};if _cfda =_bgc .RegionBitmap .SetPixel (_ffe ,_eee ,byte (_ccc ));
_cfda !=nil {return _cfda ;};_gb =((_gb <<1)|0x01&int16 (_cec >>7))&0x07;_cega =((_cega <<1)|0x01&int16 (_fe >>7))&0x07;_dea =((_dea <<1)|0x01&int16 (_ade >>7))&0x07;_dcafd =((_dcafd <<1)|0x01&int16 (_dgd >>7))&0x07;_dgc =int16 (_ccc );if (_ffe -int (_bgc .ReferenceDX ))%8==5{_cec =0;
_fe =0;_ade =0;if ((_ffe -int (_bgc .ReferenceDX ))/8)+1< _bgc .ReferenceBitmap .RowStride {if _bffg >=1&&(_bffg -1)< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb -_bbd );if _cfda !=nil {return _cfda ;};_cec =int (_cc );
};if _bffg >=0&&_bffg < _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb );if _cfda !=nil {return _cfda ;};_fe =int (_cc );};if _bffg >=-1&&(_bffg +1)< _bgc .ReferenceBitmap .Height {_cc ,_cfda =_bgc .ReferenceBitmap .GetByte (_bfeb +_bbd );
if _cfda !=nil {return _cfda ;};_ade =int (_cc );};};_bfeb ++;}else {_cec <<=1;_fe <<=1;_ade <<=1;};if _egb ==5&&_eee >=1{if ((_ffe >>3)+1)>=_bgc .RegionBitmap .RowStride {_dgd =0;}else {_cc ,_cfda =_bgc .RegionBitmap .GetByte (_bgbd -_deg );if _cfda !=nil {return _cfda ;
};_dgd =int (_cc );};_bgbd ++;}else {_dgd <<=1;};};return nil ;};func (_edf *GenericRegion )getPixel (_eaag ,_egac int )int8 {if _eaag < 0||_eaag >=_edf .Bitmap .Width {return 0;};if _egac < 0||_egac >=_edf .Bitmap .Height {return 0;};if _edf .Bitmap .GetPixel (_eaag ,_egac ){return 1;
};return 0;};func (_adbg *SymbolDictionary )readRegionFlags ()error {var (_adec uint64 ;_bggff int ;);_ ,_fcbe :=_adbg ._afcf .ReadBits (3);if _fcbe !=nil {return _fcbe ;};_bggff ,_fcbe =_adbg ._afcf .ReadBit ();if _fcbe !=nil {return _fcbe ;};_adbg .SdrTemplate =int8 (_bggff );
_adec ,_fcbe =_adbg ._afcf .ReadBits (2);if _fcbe !=nil {return _fcbe ;};_adbg .SdTemplate =int8 (_adec &0xf);_bggff ,_fcbe =_adbg ._afcf .ReadBit ();if _fcbe !=nil {return _fcbe ;};if _bggff ==1{_adbg ._fcdc =true ;};_bggff ,_fcbe =_adbg ._afcf .ReadBit ();
if _fcbe !=nil {return _fcbe ;};if _bggff ==1{_adbg ._ggca =true ;};_bggff ,_fcbe =_adbg ._afcf .ReadBit ();if _fcbe !=nil {return _fcbe ;};if _bggff ==1{_adbg .SdHuffAggInstanceSelection =true ;};_bggff ,_fcbe =_adbg ._afcf .ReadBit ();if _fcbe !=nil {return _fcbe ;
};_adbg .SdHuffBMSizeSelection =int8 (_bggff );_adec ,_fcbe =_adbg ._afcf .ReadBits (2);if _fcbe !=nil {return _fcbe ;};_adbg .SdHuffDecodeWidthSelection =int8 (_adec &0xf);_adec ,_fcbe =_adbg ._afcf .ReadBits (2);if _fcbe !=nil {return _fcbe ;};_adbg .SdHuffDecodeHeightSelection =int8 (_adec &0xf);
_bggff ,_fcbe =_adbg ._afcf .ReadBit ();if _fcbe !=nil {return _fcbe ;};if _bggff ==1{_adbg .UseRefinementAggregation =true ;};_bggff ,_fcbe =_adbg ._afcf .ReadBit ();if _fcbe !=nil {return _fcbe ;};if _bggff ==1{_adbg .IsHuffmanEncoded =true ;};return nil ;
};func (_gbcb *GenericRegion )setOverrideFlag (_dafg int ){_gbcb .GBAtOverride [_dafg ]=true ;_gbcb ._adb =true ;};func (_afe *Header )readSegmentPageAssociation (_daff Documenter ,_deaag *_fad .Reader ,_daec uint64 ,_bebde ...int )(_fdab error ){const _agfb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_afe .PageAssociationFieldSize {_aegc ,_fffb :=_deaag .ReadBits (8);if _fffb !=nil {return _cg .Wrap (_fffb ,_agfb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afe .PageAssociation =int (_aegc &0xFF);}else {_dcbge ,_gbfe :=_deaag .ReadBits (32);
if _gbfe !=nil {return _cg .Wrap (_gbfe ,_agfb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_afe .PageAssociation =int (_dcbge &_cb .MaxInt32 );};if _daec ==0{return nil ;};if _afe .PageAssociation !=0{_gbbd ,_cbca :=_daff .GetPage (_afe .PageAssociation );
if _cbca !=nil {return _cg .Wrap (_cbca ,_agfb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _babe int ;for _ebdd :=uint64 (0);_ebdd < _daec ;_ebdd ++{_babe =_bebde [_ebdd ];
_afe .RTSegments [_ebdd ],_cbca =_gbbd .GetSegment (_babe );if _cbca !=nil {var _deca error ;_afe .RTSegments [_ebdd ],_deca =_daff .GetGlobalSegment (_babe );if _deca !=nil {return _cg .Wrapf (_cbca ,_agfb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_afe .PageAssociation );
};};};return nil ;};for _gcbc :=uint64 (0);_gcbc < _daec ;_gcbc ++{_afe .RTSegments [_gcbc ],_fdab =_daff .GetGlobalSegment (_bebde [_gcbc ]);if _fdab !=nil {return _cg .Wrapf (_fdab ,_agfb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_bebde [_gcbc ]);
};};return nil ;};func (_egag *GenericRegion )GetRegionInfo ()*RegionSegment {return _egag .RegionSegment };func (_babb *TextRegion )decodeID ()(int64 ,error ){if _babb .IsHuffmanEncoded {if _babb ._dbdc ==nil {_gaecf ,_affb :=_babb ._eadg .ReadBits (byte (_babb ._bafc ));
return int64 (_gaecf ),_affb ;};return _babb ._dbdc .Decode (_babb ._eadg );};return _babb ._ggfc .DecodeIAID (uint64 (_babb ._bafc ),_babb ._gff );};func (_bdcd *GenericRegion )String ()string {_cege :=&_d .Builder {};_cege .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_cege .WriteString (_bdcd .RegionSegment .String ()+"\u000a");_cege .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bdcd .UseExtTemplates ));
_cege .WriteString (_ff .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bdcd .IsTPGDon ));_cege .WriteString (_ff .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bdcd .GBTemplate ));
_cege .WriteString (_ff .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bdcd .IsMMREncoded ));_cege .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bdcd .GBAtX ));
_cege .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bdcd .GBAtY ));_cege .WriteString (_ff .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bdcd .GBAtOverride ));
return _cege .String ();};func (_edda *PageInformationSegment )Size ()int {return 19};func (_bgbb *TableSegment )parseHeader ()error {var (_abcb int ;_acab uint64 ;_cgge error ;);_abcb ,_cgge =_bgbb ._dedb .ReadBit ();if _cgge !=nil {return _cgge ;};if _abcb ==1{return _ff .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_abcb );
};if _acab ,_cgge =_bgbb ._dedb .ReadBits (3);_cgge !=nil {return _cgge ;};_bgbb ._fcgb =(int32 (_acab )+1)&0xf;if _acab ,_cgge =_bgbb ._dedb .ReadBits (3);_cgge !=nil {return _cgge ;};_bgbb ._eeega =(int32 (_acab )+1)&0xf;if _acab ,_cgge =_bgbb ._dedb .ReadBits (32);
_cgge !=nil {return _cgge ;};_bgbb ._deea =int32 (_acab &_cb .MaxInt32 );if _acab ,_cgge =_bgbb ._dedb .ReadBits (32);_cgge !=nil {return _cgge ;};_bgbb ._cdcb =int32 (_acab &_cb .MaxInt32 );return nil ;};func (_fcbc *PageInformationSegment )Encode (w _fad .BinaryWriter )(_bfbd int ,_geaaf error ){const _egeg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_bedf :=make ([]byte ,4);_fa .BigEndian .PutUint32 (_bedf ,uint32 (_fcbc .PageBMWidth ));_bfbd ,_geaaf =w .Write (_bedf );if _geaaf !=nil {return _bfbd ,_cg .Wrap (_geaaf ,_egeg ,"\u0077\u0069\u0064t\u0068");};_fa .BigEndian .PutUint32 (_bedf ,uint32 (_fcbc .PageBMHeight ));
var _gbab int ;_gbab ,_geaaf =w .Write (_bedf );if _geaaf !=nil {return _gbab +_bfbd ,_cg .Wrap (_geaaf ,_egeg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_bfbd +=_gbab ;_fa .BigEndian .PutUint32 (_bedf ,uint32 (_fcbc .ResolutionX ));_gbab ,_geaaf =w .Write (_bedf );
if _geaaf !=nil {return _gbab +_bfbd ,_cg .Wrap (_geaaf ,_egeg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bfbd +=_gbab ;_fa .BigEndian .PutUint32 (_bedf ,uint32 (_fcbc .ResolutionY ));if _gbab ,_geaaf =w .Write (_bedf );
_geaaf !=nil {return _gbab +_bfbd ,_cg .Wrap (_geaaf ,_egeg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_bfbd +=_gbab ;if _geaaf =_fcbc .encodeFlags (w );_geaaf !=nil {return _bfbd ,_cg .Wrap (_geaaf ,_egeg ,"");};_bfbd ++;
if _gbab ,_geaaf =_fcbc .encodeStripingInformation (w );_geaaf !=nil {return _bfbd ,_cg .Wrap (_geaaf ,_egeg ,"");};_bfbd +=_gbab ;return _bfbd ,nil ;};func (_aac *TextRegion )decodeDT ()(_fefc int64 ,_gdba error ){if _aac .IsHuffmanEncoded {if _aac .SbHuffDT ==3{_fefc ,_gdba =_aac ._ccbf .Decode (_aac ._eadg );
if _gdba !=nil {return 0,_gdba ;};}else {var _daaac _ca .Tabler ;_daaac ,_gdba =_ca .GetStandardTable (11+int (_aac .SbHuffDT ));if _gdba !=nil {return 0,_gdba ;};_fefc ,_gdba =_daaac .Decode (_aac ._eadg );if _gdba !=nil {return 0,_gdba ;};};}else {var _afca int32 ;
_afca ,_gdba =_aac ._ggfc .DecodeInt (_aac ._egaga );if _gdba !=nil {return ;};_fefc =int64 (_afca );};_fefc *=int64 (_aac .SbStrips );return _fefc ,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );
};func (_aecb *TextRegion )Init (header *Header ,r *_fad .Reader )error {_aecb .Header =header ;_aecb ._eadg =r ;_aecb .RegionInfo =NewRegionSegment (_aecb ._eadg );return _aecb .parseHeader ();};func (_gead *SymbolDictionary )readAtPixels (_aadg int )error {_gead .SdATX =make ([]int8 ,_aadg );
_gead .SdATY =make ([]int8 ,_aadg );var (_gdaa byte ;_agaa error ;);for _adeb :=0;_adeb < _aadg ;_adeb ++{_gdaa ,_agaa =_gead ._afcf .ReadByte ();if _agaa !=nil {return _agaa ;};_gead .SdATX [_adeb ]=int8 (_gdaa );_gdaa ,_agaa =_gead ._afcf .ReadByte ();
if _agaa !=nil {return _agaa ;};_gead .SdATY [_adeb ]=int8 (_gdaa );};return nil ;};