//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_c "golang/unipdf/common";_ee "golang/unipdf/internal/jbig2/basic";_ef "golang/unipdf/internal/jbig2/bitmap";_df "golang/unipdf/internal/jbig2/errors";_d "image";_g "math";
);func (_a *Classer )ComputeLLCorners ()(_db error ){const _f ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _a .PtaUL ==nil {return _df .Error (_f ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_ae :=len (*_a .PtaUL );_a .PtaLL =&_ef .Points {};var (_dd ,_de float32 ;_bc ,_ge int ;_bd *_ef .Bitmap ;);for _dcc :=0;_dcc < _ae ;_dcc ++{_dd ,_de ,_db =_a .PtaUL .GetGeometry (_dcc );if _db !=nil {_c .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_db );
return _df .Wrap (_db ,_f ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_bc ,_db =_a .ClassIDs .Get (_dcc );if _db !=nil {_c .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_db );
return _df .Wrap (_db ,_f ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_bd ,_db =_a .UndilatedTemplates .GetBitmap (_bc );if _db !=nil {_c .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_db );
return _df .Wrap (_db ,_f ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ge =_bd .Height ;_a .PtaLL .AddPoint (_dd ,_de +float32 (_ge ));};return nil ;};func (_cefaa *Classer )classifyRankHouseNonOne (_daag *_ef .Boxes ,_gadd ,_bcb ,_ece *_ef .Bitmaps ,_ddec *_ef .Points ,_fcc *_ee .NumSlice ,_afa int )(_cecf error ){const _gbg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dead ,_bgaf ,_ecd ,_aea float32 ;_fbg ,_cdbd ,_dee int ;_eed ,_egg ,_aggb ,_gaa ,_cegc *_ef .Bitmap ;_ebg ,_age bool ;);_fgf :=_ef .MakePixelSumTab8 ();for _dfd :=0;_dfd < len (_gadd .Values );_dfd ++{if _egg ,_cecf =_bcb .GetBitmap (_dfd );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _fbg ,_cecf =_fcc .GetInt (_dfd );_cecf !=nil {_c .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dfd ,_cecf );
};if _aggb ,_cecf =_ece .GetBitmap (_dfd );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dead ,_bgaf ,_cecf =_ddec .GetGeometry (_dfd );_cecf !=nil {return _df .Wrapf (_cecf ,_gbg ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_eef :=len (_cefaa .UndilatedTemplates .Values );_ebg =false ;_aca :=_bac (_cefaa ,_egg );for _dee =_aca .Next ();_dee > -1;{if _gaa ,_cecf =_cefaa .UndilatedTemplates .GetBitmap (_dee );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _cdbd ,_cecf =_cefaa .FgTemplates .GetInt (_dee );_cecf !=nil {_c .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_dee ,_cecf );
};if _cegc ,_cecf =_cefaa .DilatedTemplates .GetBitmap (_dee );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _ecd ,_aea ,_cecf =_cefaa .CentroidPointsTemplates .GetGeometry (_dee );
_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_age ,_cecf =_ef .RankHausTest (_egg ,_aggb ,_gaa ,_cegc ,_dead -_ecd ,_bgaf -_aea ,MaxDiffWidth ,MaxDiffHeight ,_fbg ,_cdbd ,float32 (_cefaa .Settings .RankHaus ),_fgf );
if _cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"");};if _age {_ebg =true ;if _cecf =_cefaa .ClassIDs .Add (_dee );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"");};if _cecf =_cefaa .ComponentPageNumbers .Add (_afa );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"");
};if _cefaa .Settings .KeepClassInstances {_cfce ,_cfe :=_cefaa .ClassInstances .GetBitmaps (_dee );if _cfe !=nil {return _df .Wrap (_cfe ,_gbg ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _eed ,_cfe =_gadd .GetBitmap (_dfd );_cfe !=nil {return _df .Wrap (_cfe ,_gbg ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_cfce .Values =append (_cfce .Values ,_eed );_eeb ,_cfe :=_daag .Get (_dfd );if _cfe !=nil {return _df .Wrap (_cfe ,_gbg ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_cfce .Boxes =append (_cfce .Boxes ,_eeb );};break ;};};if !_ebg {if _cecf =_cefaa .ClassIDs .Add (_eef );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cecf =_cefaa .ComponentPageNumbers .Add (_afa );_cecf !=nil {return _df .Wrap (_cecf ,_gbg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gdff :=&_ef .Bitmaps {};_eed =_gadd .Values [_dfd ];_gdff .AddBitmap (_eed );_agd ,_bebe :=_eed .Width ,_eed .Height ;_cefaa .TemplatesSize .Add (uint64 (_agd )*uint64 (_bebe ),_eef );_bbac ,_fda :=_daag .Get (_dfd );if _fda !=nil {return _df .Wrap (_fda ,_gbg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gdff .AddBox (_bbac );_cefaa .ClassInstances .AddBitmaps (_gdff );_cefaa .CentroidPointsTemplates .AddPoint (_dead ,_bgaf );_cefaa .UndilatedTemplates .AddBitmap (_egg );_cefaa .DilatedTemplates .AddBitmap (_aggb );_cefaa .FgTemplates .AddInt (_fbg );
};};_cefaa .NumberOfClasses =len (_cefaa .UndilatedTemplates .Values );return nil ;};func (_ddcg *Classer )classifyRankHouseOne (_dea *_ef .Boxes ,_efb ,_edc ,_ffa *_ef .Bitmaps ,_eabg *_ef .Points ,_fdgf int )(_dcfc error ){const _ccb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_fdea ,_gdde ,_eeef ,_fdeb float32 ;_dbe int ;_dfb ,_geeg ,_eafe ,_beb ,_baef *_ef .Bitmap ;_dab ,_agg bool ;);for _cge :=0;_cge < len (_efb .Values );_cge ++{_geeg =_edc .Values [_cge ];_eafe =_ffa .Values [_cge ];_fdea ,_gdde ,_dcfc =_eabg .GetGeometry (_cge );
if _dcfc !=nil {return _df .Wrapf (_dcfc ,_ccb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_dde :=len (_ddcg .UndilatedTemplates .Values );_dab =false ;_edgb :=_bac (_ddcg ,_geeg );for _dbe =_edgb .Next ();_dbe > -1;
{_beb ,_dcfc =_ddcg .UndilatedTemplates .GetBitmap (_dbe );if _dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"\u0062\u006d\u0033");};_baef ,_dcfc =_ddcg .DilatedTemplates .GetBitmap (_dbe );if _dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"\u0062\u006d\u0034");
};_eeef ,_fdeb ,_dcfc =_ddcg .CentroidPointsTemplates .GetGeometry (_dbe );if _dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_agg ,_dcfc =_ef .HausTest (_geeg ,_eafe ,_beb ,_baef ,_fdea -_eeef ,_gdde -_fdeb ,MaxDiffWidth ,MaxDiffHeight );
if _dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"");};if _agg {_dab =true ;if _dcfc =_ddcg .ClassIDs .Add (_dbe );_dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"");};if _dcfc =_ddcg .ComponentPageNumbers .Add (_fdgf );_dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"");
};if _ddcg .Settings .KeepClassInstances {_baa ,_gad :=_ddcg .ClassInstances .GetBitmaps (_dbe );if _gad !=nil {return _df .Wrap (_gad ,_ccb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dfb ,_gad =_efb .GetBitmap (_cge );if _gad !=nil {return _df .Wrap (_gad ,_ccb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_baa .AddBitmap (_dfb );_ggfc ,_gad :=_dea .Get (_cge );if _gad !=nil {return _df .Wrap (_gad ,_ccb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_baa .AddBox (_ggfc );};break ;};};if !_dab {if _dcfc =_ddcg .ClassIDs .Add (_dde );_dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"");
};if _dcfc =_ddcg .ComponentPageNumbers .Add (_fdgf );_dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"");};_agc :=&_ef .Bitmaps {};_dfb ,_dcfc =_efb .GetBitmap (_cge );if _dcfc !=nil {return _df .Wrap (_dcfc ,_ccb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_agc .Values =append (_agc .Values ,_dfb );_caf ,_gbe :=_dfb .Width ,_dfb .Height ;_ddcg .TemplatesSize .Add (uint64 (_gbe )*uint64 (_caf ),_dde );_fed ,_ffe :=_dea .Get (_cge );if _ffe !=nil {return _df .Wrap (_ffe ,_ccb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_agc .AddBox (_fed );_ddcg .ClassInstances .AddBitmaps (_agc );_ddcg .CentroidPointsTemplates .AddPoint (_fdea ,_gdde );_ddcg .UndilatedTemplates .AddBitmap (_geeg );_ddcg .DilatedTemplates .AddBitmap (_eafe );};};return nil ;};const (MaxConnCompWidth =350;
MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_eag *Classer )classifyCorrelation (_fde *_ef .Boxes ,_gb *_ef .Bitmaps ,_be int )error {const _eagf ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _fde ==nil {return _df .Error (_eagf ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _gb ==nil {return _df .Error (_eagf ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_ddf :=len (_gb .Values );if _ddf ==0{_c .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_gdd ,_fe *_ef .Bitmap ;_cdc error ;);_bbe :=&_ef .Bitmaps {Values :make ([]*_ef .Bitmap ,_ddf )};for _dbfd ,_ebc :=range _gb .Values {_fe ,_cdc =_ebc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"");};_bbe .Values [_dbfd ]=_fe ;};_cec :=_eag .FgTemplates ;_bgg :=_ef .MakePixelSumTab8 ();_cef :=_ef .MakePixelCentroidTab8 ();_cdd :=make ([]int ,_ddf );_ccf :=make ([][]int ,_ddf );_dba :=_ef .Points (make ([]_ef .Point ,_ddf ));
_geeb :=&_dba ;var (_bea ,_dac int ;_gdf ,_cbc ,_acd int ;_cgg ,_deg int ;_ecc byte ;);for _eba ,_gfe :=range _bbe .Values {_ccf [_eba ]=make ([]int ,_gfe .Height );_bea =0;_dac =0;_cbc =(_gfe .Height -1)*_gfe .RowStride ;_gdf =0;for _deg =_gfe .Height -1;
_deg >=0;_deg ,_cbc =_deg -1,_cbc -_gfe .RowStride {_ccf [_eba ][_deg ]=_gdf ;_acd =0;for _cgg =0;_cgg < _gfe .RowStride ;_cgg ++{_ecc =_gfe .Data [_cbc +_cgg ];_acd +=_bgg [_ecc ];_bea +=_cef [_ecc ]+_cgg *8*_bgg [_ecc ];};_gdf +=_acd ;_dac +=_acd *_deg ;
};_cdd [_eba ]=_gdf ;if _gdf > 0{(*_geeb )[_eba ]=_ef .Point {X :float32 (_bea )/float32 (_gdf ),Y :float32 (_dac )/float32 (_gdf )};}else {(*_geeb )[_eba ]=_ef .Point {X :float32 (_gfe .Width )/float32 (2),Y :float32 (_gfe .Height )/float32 (2)};};};if _cdc =_eag .CentroidPoints .Add (_geeb );
_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_af ,_dbfe ,_cdb int ;_dga float64 ;_ddc ,_cgf ,_bgeg ,_bdg float32 ;_gbf ,_eab _ef .Point ;_ggb bool ;_aef *similarTemplatesFinder ;
_fb int ;_cefa *_ef .Bitmap ;_bggg *_d .Rectangle ;_fea *_ef .Bitmaps ;);for _fb ,_fe =range _bbe .Values {_dbfe =_cdd [_fb ];if _ddc ,_cgf ,_cdc =_geeb .GetGeometry (_fb );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_ggb =false ;_ca :=len (_eag .UndilatedTemplates .Values );_aef =_bac (_eag ,_fe );for _fac :=_aef .Next ();_fac > -1;{if _cefa ,_cdc =_eag .UndilatedTemplates .GetBitmap (_fac );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _cdb ,_cdc =_cec .GetInt (_fac );_cdc !=nil {_c .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cdc );};if _bgeg ,_bdg ,_cdc =_eag .CentroidPointsTemplates .GetGeometry (_fac );
_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _eag .Settings .WeightFactor > 0.0{if _af ,_cdc =_eag .TemplateAreas .Get (_fac );_cdc !=nil {_c .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_cdc );
};_dga =_eag .Settings .Thresh +(1.0-_eag .Settings .Thresh )*_eag .Settings .WeightFactor *float64 (_cdb )/float64 (_af );}else {_dga =_eag .Settings .Thresh ;};_cfc ,_gdb :=_ef .CorrelationScoreThresholded (_fe ,_cefa ,_dbfe ,_cdb ,_gbf .X -_eab .X ,_gbf .Y -_eab .Y ,MaxDiffWidth ,MaxDiffHeight ,_bgg ,_ccf [_fb ],float32 (_dga ));
if _gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"");};if _gfd {var (_add ,_aedf float64 ;_ag ,_gdfe int ;);_add ,_gdb =_ef .CorrelationScore (_fe ,_cefa ,_dbfe ,_cdb ,_ddc -_bgeg ,_cgf -_bdg ,MaxDiffWidth ,MaxDiffHeight ,_bgg );if _gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_aedf ,_gdb =_ef .CorrelationScoreSimple (_fe ,_cefa ,_dbfe ,_cdb ,_ddc -_bgeg ,_cgf -_bdg ,MaxDiffWidth ,MaxDiffHeight ,_bgg );if _gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ag =int (_g .Sqrt (_add *float64 (_dbfe )*float64 (_cdb )));_gdfe =int (_g .Sqrt (_aedf *float64 (_dbfe )*float64 (_cdb )));if (_add >=_dga )!=(_aedf >=_dga ){return _df .Errorf (_eagf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ag ,_add ,_add >=_dga ,_gdfe ,_aedf ,_aedf >=_dga ,_add -_aedf );
};if _add >=_dga !=_cfc {return _df .Errorf (_eagf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_add ,_add *float64 (_dbfe )*float64 (_cdb ),_ag ,_dga ,float32 (_dga )*float32 (_dbfe )*float32 (_cdb ),_cfc );
};};if _cfc {_ggb =true ;if _gdb =_eag .ClassIDs .Add (_fac );_gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _gdb =_eag .ComponentPageNumbers .Add (_be );_gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _eag .Settings .KeepClassInstances {if _gdd ,_gdb =_gb .GetBitmap (_fb );_gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _fea ,_gdb =_eag .ClassInstances .GetBitmaps (_fac );
_gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_fea .AddBitmap (_gdd );if _bggg ,_gdb =_fde .Get (_fb );_gdb !=nil {return _df .Wrap (_gdb ,_eagf ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_fea .AddBox (_bggg );};break ;};};if !_ggb {if _cdc =_eag .ClassIDs .Add (_ca );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cdc =_eag .ComponentPageNumbers .Add (_be );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_fea =&_ef .Bitmaps {};if _gdd ,_cdc =_gb .GetBitmap (_fb );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fea .AddBitmap (_gdd );_gdc ,_bgc :=_gdd .Width ,_gdd .Height ;_gddg :=uint64 (_bgc )*uint64 (_gdc );_eag .TemplatesSize .Add (_gddg ,_ca );
if _bggg ,_cdc =_fde .Get (_fb );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fea .AddBox (_bggg );_eag .ClassInstances .AddBitmaps (_fea );_eag .CentroidPointsTemplates .AddPoint (_ddc ,_cgf );_eag .FgTemplates .AddInt (_dbfe );
_eag .UndilatedTemplates .AddBitmap (_gdd );_af =(_fe .Width -2*JbAddedPixels )*(_fe .Height -2*JbAddedPixels );if _cdc =_eag .TemplateAreas .Add (_af );_cdc !=nil {return _df .Wrap (_cdc ,_eagf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_eag .NumberOfClasses =len (_eag .UndilatedTemplates .Values );
return nil ;};func (_cba *Classer )addPageComponents (_da *_ef .Bitmap ,_dcf *_ef .Boxes ,_bg *_ef .Bitmaps ,_fc int ,_ad Method )error {const _ddg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _da ==nil {return _df .Error (_ddg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dcf ==nil ||_bg ==nil ||len (*_dcf )==0{_c .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_da );
return nil ;};var _bb error ;switch _ad {case RankHaus :_bb =_cba .classifyRankHaus (_dcf ,_bg ,_fc );case Correlation :_bb =_cba .classifyCorrelation (_dcf ,_bg ,_fc );default:_c .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ad );
return _df .Error (_ddg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _bb !=nil {return _df .Wrap (_bb ,_ddg ,"");};if _bb =_cba .getULCorners (_da ,_dcf );_bb !=nil {return _df .Wrap (_bb ,_ddg ,"");
};_ga :=len (*_dcf );_cba .BaseIndex +=_ga ;if _bb =_cba .ComponentsNumber .Add (_ga );_bb !=nil {return _df .Wrap (_bb ,_ddg ,"");};return nil ;};func (_aad *Settings )SetDefault (){if _aad .MaxCompWidth ==0{switch _aad .Components {case _ef .ComponentConn :_aad .MaxCompWidth =MaxConnCompWidth ;
case _ef .ComponentCharacters :_aad .MaxCompWidth =MaxCharCompWidth ;case _ef .ComponentWords :_aad .MaxCompWidth =MaxWordCompWidth ;};};if _aad .MaxCompHeight ==0{_aad .MaxCompHeight =MaxCompHeight ;};if _aad .Thresh ==0.0{_aad .Thresh =0.9;};if _aad .WeightFactor ==0.0{_aad .WeightFactor =0.75;
};if _aad .RankHaus ==0.0{_aad .RankHaus =0.97;};if _aad .SizeHaus ==0{_aad .SizeHaus =2;};};func (_gddb *Classer )classifyRankHaus (_bae *_ef .Boxes ,_ed *_ef .Bitmaps ,_ecg int )error {const _dacd ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _bae ==nil {return _df .Error (_dacd ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _ed ==nil {return _df .Error (_dacd ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_adgg :=len (_ed .Values );if _adgg ==0{return _df .Error (_dacd ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_dfa :=_ed .CountPixels ();_eee :=_gddb .Settings .SizeHaus ;_daf :=_ef .SelCreateBrick (_eee ,_eee ,_eee /2,_eee /2,_ef .SelHit );
_ecgd :=&_ef .Bitmaps {Values :make ([]*_ef .Bitmap ,_adgg )};_fgab :=&_ef .Bitmaps {Values :make ([]*_ef .Bitmap ,_adgg )};var (_fdg ,_dccd ,_aa *_ef .Bitmap ;_gga error ;);for _edg :=0;_edg < _adgg ;_edg ++{_fdg ,_gga =_ed .GetBitmap (_edg );if _gga !=nil {return _df .Wrap (_gga ,_dacd ,"");
};_dccd ,_gga =_fdg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gga !=nil {return _df .Wrap (_gga ,_dacd ,"");};_aa ,_gga =_ef .Dilate (nil ,_dccd ,_daf );if _gga !=nil {return _df .Wrap (_gga ,_dacd ,"");};_ecgd .Values [_adgg ]=_dccd ;
_fgab .Values [_adgg ]=_aa ;};_dae ,_gga :=_ef .Centroids (_ecgd .Values );if _gga !=nil {return _df .Wrap (_gga ,_dacd ,"");};if _gga =_dae .Add (_gddb .CentroidPoints );_gga !=nil {_c .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _gddb .Settings .RankHaus ==1.0{_gga =_gddb .classifyRankHouseOne (_bae ,_ed ,_ecgd ,_fgab ,_dae ,_ecg );}else {_gga =_gddb .classifyRankHouseNonOne (_bae ,_ed ,_ecgd ,_fgab ,_dae ,_dfa ,_ecg );};if _gga !=nil {return _df .Wrap (_gga ,_dacd ,"");};
return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_ee .IntSlice ;TemplateAreas *_ee .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ef .BitmapsArray ;UndilatedTemplates *_ef .Bitmaps ;DilatedTemplates *_ef .Bitmaps ;TemplatesSize _ee .IntsMap ;FgTemplates *_ee .NumSlice ;CentroidPoints *_ef .Points ;CentroidPointsTemplates *_ef .Points ;
ClassIDs *_ee .IntSlice ;ComponentPageNumbers *_ee .IntSlice ;PtaUL *_ef .Points ;PtaLL *_ef .Points ;};func Init (settings Settings )(*Classer ,error ){const _dg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_ea :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_ee .IntsMap {},TemplateAreas :&_ee .IntSlice {},ComponentPageNumbers :&_ee .IntSlice {},ClassIDs :&_ee .IntSlice {},ComponentsNumber :&_ee .IntSlice {},CentroidPoints :&_ef .Points {},CentroidPointsTemplates :&_ef .Points {},UndilatedTemplates :&_ef .Bitmaps {},DilatedTemplates :&_ef .Bitmaps {},ClassInstances :&_ef .BitmapsArray {},FgTemplates :&_ee .NumSlice {}};
if _b :=_ea .Settings .Validate ();_b !=nil {return nil ,_df .Wrap (_b ,_dg ,"");};return _ea ,nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_bf *Classer )AddPage (inputPage *_ef .Bitmap ,pageNumber int ,method Method )(_dc error ){const _eaf ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";
_bf .Widths [pageNumber ]=inputPage .Width ;_bf .Heights [pageNumber ]=inputPage .Height ;if _dc =_bf .verifyMethod (method );_dc !=nil {return _df .Wrap (_dc ,_eaf ,"");};_ce ,_cb ,_dc :=inputPage .GetComponents (_bf .Settings .Components ,_bf .Settings .MaxCompWidth ,_bf .Settings .MaxCompHeight );
if _dc !=nil {return _df .Wrap (_dc ,_eaf ,"");};_c .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ce );if _dc =_bf .addPageComponents (inputPage ,_cb ,_ce ,pageNumber ,method );_dc !=nil {return _df .Wrap (_dc ,_eaf ,"");
};return nil ;};func (_eea *similarTemplatesFinder )Next ()int {var (_eagg ,_cga ,_dda ,_agb int ;_bfc bool ;_gbc *_ef .Bitmap ;_ggg error ;);for {if _eea .Index >=25{return -1;};_cga =_eea .Width +TwoByTwoWalk [2*_eea .Index ];_eagg =_eea .Height +TwoByTwoWalk [2*_eea .Index +1];
if _eagg < 1||_cga < 1{_eea .Index ++;continue ;};if len (_eea .CurrentNumbers )==0{_eea .CurrentNumbers ,_bfc =_eea .Classer .TemplatesSize .GetSlice (uint64 (_cga )*uint64 (_eagg ));if !_bfc {_eea .Index ++;continue ;};_eea .N =0;};_dda =len (_eea .CurrentNumbers );
for ;_eea .N < _dda ;_eea .N ++{_agb =_eea .CurrentNumbers [_eea .N ];_gbc ,_ggg =_eea .Classer .DilatedTemplates .GetBitmap (_agb );if _ggg !=nil {_c .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gbc .Width -2*JbAddedPixels ==_cga &&_gbc .Height -2*JbAddedPixels ==_eagg {return _agb ;};};_eea .Index ++;_eea .CurrentNumbers =nil ;};};func (_ba *Classer )verifyMethod (_ggf Method )error {if _ggf !=RankHaus &&_ggf !=Correlation {return _df .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};var _gfd bool ;const (RankHaus Method =iota ;Correlation ;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ef .Component ;
Method Method ;};func DefaultSettings ()Settings {_bdf :=&Settings {};_bdf .SetDefault ();return *_bdf };func (_bcc *Classer )getULCorners (_ceg *_ef .Bitmap ,_ac *_ef .Boxes )error {const _bga ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _ceg ==nil {return _df .Error (_bga ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ac ==nil {return _df .Error (_bga ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bcc .PtaUL ==nil {_bcc .PtaUL =&_ef .Points {};
};_daa :=len (*_ac );var (_aed ,_gf ,_bca ,_bdb int ;_eac ,_cf ,_bfd ,_bge float32 ;_bcg error ;_fd *_d .Rectangle ;_gg *_ef .Bitmap ;_fcg _d .Point ;);for _dbf :=0;_dbf < _daa ;_dbf ++{_aed =_bcc .BaseIndex +_dbf ;if _eac ,_cf ,_bcg =_bcc .CentroidPoints .GetGeometry (_aed );
_bcg !=nil {return _df .Wrap (_bcg ,_bga ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _gf ,_bcg =_bcc .ClassIDs .Get (_aed );_bcg !=nil {return _df .Wrap (_bcg ,_bga ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _bfd ,_bge ,_bcg =_bcc .CentroidPointsTemplates .GetGeometry (_gf );_bcg !=nil {return _df .Wrap (_bcg ,_bga ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bfg :=_bfd -_eac ;
_dfg :=_bge -_cf ;if _bfg >=0{_bca =int (_bfg +0.5);}else {_bca =int (_bfg -0.5);};if _dfg >=0{_bdb =int (_dfg +0.5);}else {_bdb =int (_dfg -0.5);};if _fd ,_bcg =_ac .Get (_dbf );_bcg !=nil {return _df .Wrap (_bcg ,_bga ,"");};_aeb ,_fg :=_fd .Min .X ,_fd .Min .Y ;
_gg ,_bcg =_bcc .UndilatedTemplates .GetBitmap (_gf );if _bcg !=nil {return _df .Wrap (_bcg ,_bga ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_fcg ,_bcg =_fa (_ceg ,_aeb ,_fg ,_bca ,_bdb ,_gg );if _bcg !=nil {return _df .Wrap (_bcg ,_bga ,"");};_bcc .PtaUL .AddPoint (float32 (_aeb -_bca +_fcg .X ),float32 (_fg -_bdb +_fcg .Y ));};return nil ;};func _fa (_cbaf *_ef .Bitmap ,_baf ,_gee ,_ec ,_gag int ,_adg *_ef .Bitmap )(_daac _d .Point ,_fga error ){const _bba ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _cbaf ==nil {return _daac ,_df .Error (_bba ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _adg ==nil {return _daac ,_df .Error (_bba ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_cbe ,_eb :=_adg .Width ,_adg .Height ;_bag ,_ded :=_baf -_ec -JbAddedPixels ,_gee -_gag -JbAddedPixels ;_c .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_baf ,_gee ,_cbe ,_eb ,_bag ,_ded );
_dbfg ,_fga :=_ef .Rect (_bag ,_ded ,_cbe ,_eb );if _fga !=nil {return _daac ,_df .Wrap (_fga ,_bba ,"");};_cd ,_ ,_fga :=_cbaf .ClipRectangle (_dbfg );if _fga !=nil {_c .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_dbfg );
return _daac ,_df .Wrap (_fga ,_bba ,"");};_cc :=_ef .New (_cd .Width ,_cd .Height );_dfc :=_g .MaxInt32 ;var _cg ,_gd ,_eg ,_bfdf ,_gff int ;for _cg =-1;_cg <=1;_cg ++{for _gd =-1;_gd <=1;_gd ++{if _ ,_fga =_ef .Copy (_cc ,_cd );_fga !=nil {return _daac ,_df .Wrap (_fga ,_bba ,"");
};if _fga =_cc .RasterOperation (_gd ,_cg ,_cbe ,_eb ,_ef .PixSrcXorDst ,_adg ,0,0);_fga !=nil {return _daac ,_df .Wrap (_fga ,_bba ,"");};_eg =_cc .CountPixels ();if _eg < _dfc {_bfdf =_gd ;_gff =_cg ;_dfc =_eg ;};};};_daac .X =_bfdf ;_daac .Y =_gff ;
return _daac ,nil ;};const JbAddedPixels =6;func _bac (_gage *Classer ,_ggfd *_ef .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_ggfd .Width ,Height :_ggfd .Height ,Classer :_gage };};type Method int ;func (_dgc Settings )Validate ()error {const _bfgd ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _dgc .Thresh < 0.4||_dgc .Thresh > 0.98{return _df .Error (_bfgd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _dgc .WeightFactor < 0.0||_dgc .WeightFactor > 1.0{return _df .Error (_bfgd ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dgc .RankHaus < 0.5||_dgc .RankHaus > 1.0{return _df .Error (_bfgd ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _dgc .SizeHaus < 1||_dgc .SizeHaus > 10{return _df .Error (_bfgd ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _dgc .Components {case _ef .ComponentConn ,_ef .ComponentCharacters ,_ef .ComponentWords :default:return _df .Error (_bfgd ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};